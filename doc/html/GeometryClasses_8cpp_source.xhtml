<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.6"/>
<title>Simple Analyzer: /daten/Projekte/eclipse_workspace/simpleanalyzer-gui/src/libraries/interpolate/GeometryClasses.cpp Quellcode</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/javascript">
  $(document).ready(function() { searchBox.OnSelectItem(0); });
</script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="doc_icon.png"/></td>
  <td style="padding-left: 0.5em;">
   <div id="projectname">Simple Analyzer
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Erzeugt von Doxygen 1.8.6 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Suchen');
</script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.xhtml"><span>Hauptseite</span></a></li>
      <li><a href="pages.xhtml"><span>Zusätzliche&#160;Informationen</span></a></li>
      <li><a href="namespaces.xhtml"><span>Namensbereiche</span></a></li>
      <li><a href="annotated.xhtml"><span>Klassen</span></a></li>
      <li class="current"><a href="files.xhtml"><span>Dateien</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Suchen" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="files.xhtml"><span>Auflistung&#160;der&#160;Dateien</span></a></li>
      <li><a href="globals.xhtml"><span>Datei-Elemente</span></a></li>
    </ul>
  </div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
<a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(0)"><span class="SelectionMark">&#160;</span>Alle</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(1)"><span class="SelectionMark">&#160;</span>Klassen</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(2)"><span class="SelectionMark">&#160;</span>Namensbereiche</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(3)"><span class="SelectionMark">&#160;</span>Dateien</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(4)"><span class="SelectionMark">&#160;</span>Funktionen</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(5)"><span class="SelectionMark">&#160;</span>Variablen</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(6)"><span class="SelectionMark">&#160;</span>Aufzählungen</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(7)"><span class="SelectionMark">&#160;</span>Aufzählungswerte</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(8)"><span class="SelectionMark">&#160;</span>Freundbeziehungen</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(9)"><span class="SelectionMark">&#160;</span>Makrodefinitionen</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(10)"><span class="SelectionMark">&#160;</span>Seiten</a></div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="dir_c77ee61374efdb50c23b8fd1bc609a29.xhtml">simpleanalyzer-gui</a></li><li class="navelem"><a class="el" href="dir_fc69cc80a9959f5f4d9fc5f3e2f537ca.xhtml">src</a></li><li class="navelem"><a class="el" href="dir_3ae5ff8f903e04726d22262ee65ea878.xhtml">libraries</a></li><li class="navelem"><a class="el" href="dir_f4a64d8578dd6594bab13e55fe110134.xhtml">interpolate</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="headertitle">
<div class="title">GeometryClasses.cpp</div>  </div>
</div><!--header-->
<div class="contents">
<a href="GeometryClasses_8cpp.xhtml">gehe zur Dokumentation dieser Datei</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="comment">/*</span></div>
<div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="comment"> * GeometryClasses.cpp</span></div>
<div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="comment"> *  Created on: 24.07.2013</span></div>
<div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="comment"> *      Author: valentin</span></div>
<div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="comment"> */</span></div>
<div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;</div>
<div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="GeometryClasses_8h.xhtml">GeometryClasses.h</a>&quot;</span></div>
<div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;<span class="preprocessor">#include  &lt;iostream&gt;</span></div>
<div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;<span class="preprocessor">#include &lt;cmath&gt;</span></div>
<div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;<span class="keyword">using namespace </span>std;</div>
<div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;</div>
<div class="line"><a name="l00013"></a><span class="lineno"><a class="line" href="GeometryClasses_8cpp.xhtml#a002b2f4894492820fe708b1b7e7c5e70">   13</a></span>&#160;<span class="preprocessor">#define EPSILON 0.0000001</span></div>
<div class="line"><a name="l00014"></a><span class="lineno"><a class="line" href="GeometryClasses_8cpp.xhtml#a73527f20206c906e9f333e0f233de13e">   14</a></span>&#160;<span class="preprocessor"></span><span class="keyword">inline</span> <span class="keywordtype">double</span> <a class="code" href="GeometryClasses_8cpp.xhtml#a73527f20206c906e9f333e0f233de13e">sqr</a>(<span class="keywordtype">double</span> v) {</div>
<div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;    <span class="keywordflow">return</span> v * v;</div>
<div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;}</div>
<div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;</div>
<div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;<span class="comment">// Vector3D</span></div>
<div class="line"><a name="l00019"></a><span class="lineno"><a class="line" href="classVector3D.xhtml#abd851542da40b1168edcad11fa83b7c2">   19</a></span>&#160;<a class="code" href="classVector3D.xhtml#abd851542da40b1168edcad11fa83b7c2">Vector3D::Vector3D</a>(<span class="keywordtype">double</span> <a class="code" href="CLGL__test_2ParticleSystem_8h.xhtml#a4877d316febdb87e52d19e4382a938fc">x</a>, <span class="keywordtype">double</span> <a class="code" href="CLGL__test_2ParticleSystem_8h.xhtml#ae666164f442d79adbc300fbb5460377e">y</a>, <span class="keywordtype">double</span> <a class="code" href="CLGL__test_2ParticleSystem_8h.xhtml#ad60e6e73dfb663d917feb7ea4b95eab8">z</a>) {</div>
<div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;    coords[0] = <a class="code" href="CLGL__test_2ParticleSystem_8h.xhtml#a4877d316febdb87e52d19e4382a938fc">x</a>;</div>
<div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;    coords[1] = <a class="code" href="CLGL__test_2ParticleSystem_8h.xhtml#ae666164f442d79adbc300fbb5460377e">y</a>;</div>
<div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;    coords[2] = <a class="code" href="CLGL__test_2ParticleSystem_8h.xhtml#ad60e6e73dfb663d917feb7ea4b95eab8">z</a>;</div>
<div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;}</div>
<div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;</div>
<div class="line"><a name="l00025"></a><span class="lineno"><a class="line" href="classVector3D.xhtml#abd023faf726edb3919c84fd8329a1f8f">   25</a></span>&#160;<a class="code" href="classVector3D.xhtml#abd851542da40b1168edcad11fa83b7c2">Vector3D::Vector3D</a>(<span class="keyword">const</span> <span class="keywordtype">double</span>* v) {</div>
<div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;    coords[0] = v[0];</div>
<div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;    coords[1] = v[1];</div>
<div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;    coords[2] = v[2];</div>
<div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;}</div>
<div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;</div>
<div class="line"><a name="l00031"></a><span class="lineno"><a class="line" href="classVector3D.xhtml#a010bd55f41a082eccb1a7f513db29e69">   31</a></span>&#160;<a class="code" href="classVector3D.xhtml#abd851542da40b1168edcad11fa83b7c2">Vector3D::Vector3D</a>(<a class="code" href="classVector3D.xhtml">Vector3D</a>* other) {</div>
<div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;    coords[0] = other-&gt;<a class="code" href="classVector3D.xhtml#aa9eaf29045bf32b95c5c7bcb2b8b68d7">getX</a>();</div>
<div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;    coords[1] = other-&gt;<a class="code" href="classVector3D.xhtml#aa3ffff17b886274a58417dfe4bb4c4a2">getY</a>();</div>
<div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;    coords[2] = other-&gt;<a class="code" href="classVector3D.xhtml#ab0dcbf253ff78856eccb5ea74d080fc7">getZ</a>();</div>
<div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;}</div>
<div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;</div>
<div class="line"><a name="l00037"></a><span class="lineno"><a class="line" href="classVector3D.xhtml#a46dd0d9a849809a3857783102959e788">   37</a></span>&#160;<a class="code" href="classVector3D.xhtml">Vector3D</a>* <a class="code" href="classVector3D.xhtml#a46dd0d9a849809a3857783102959e788">Vector3D::copy</a>() {</div>
<div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;    <a class="code" href="classVector3D.xhtml">Vector3D</a>* res = <span class="keyword">new</span> <a class="code" href="classVector3D.xhtml">Vector3D</a>(coords[0], coords[1], coords[2]);</div>
<div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;    <span class="keywordflow">return</span> res;</div>
<div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;}</div>
<div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;</div>
<div class="line"><a name="l00042"></a><span class="lineno"><a class="line" href="classVector3D.xhtml#ac83e936757114f32bc9d868ea5fabbc2">   42</a></span>&#160;<span class="keywordtype">bool</span> <a class="code" href="classVector3D.xhtml#ac83e936757114f32bc9d868ea5fabbc2">Vector3D::equals</a>(<a class="code" href="classVector3D.xhtml">Vector3D</a>* other) {</div>
<div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;    <span class="keywordflow">return</span> ((abs(getX() - other-&gt;<a class="code" href="classVector3D.xhtml#aa9eaf29045bf32b95c5c7bcb2b8b68d7">getX</a>()) &lt; <a class="code" href="GeometryClasses_8cpp.xhtml#a002b2f4894492820fe708b1b7e7c5e70">EPSILON</a>)</div>
<div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;            &amp;&amp; (abs(getY() - other-&gt;<a class="code" href="classVector3D.xhtml#aa3ffff17b886274a58417dfe4bb4c4a2">getY</a>()) &lt; <a class="code" href="GeometryClasses_8cpp.xhtml#a002b2f4894492820fe708b1b7e7c5e70">EPSILON</a>)</div>
<div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;            &amp;&amp; (abs(getZ() - other-&gt;<a class="code" href="classVector3D.xhtml#ab0dcbf253ff78856eccb5ea74d080fc7">getZ</a>()) &lt; <a class="code" href="GeometryClasses_8cpp.xhtml#a002b2f4894492820fe708b1b7e7c5e70">EPSILON</a>));</div>
<div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;}</div>
<div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;</div>
<div class="line"><a name="l00048"></a><span class="lineno"><a class="line" href="classVector3D.xhtml#aa9eaf29045bf32b95c5c7bcb2b8b68d7">   48</a></span>&#160;<span class="keywordtype">double</span> <a class="code" href="classVector3D.xhtml#aa9eaf29045bf32b95c5c7bcb2b8b68d7">Vector3D::getX</a>() {</div>
<div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;    <span class="keywordflow">return</span> coords[0];</div>
<div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;}</div>
<div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;</div>
<div class="line"><a name="l00052"></a><span class="lineno"><a class="line" href="classVector3D.xhtml#aa3ffff17b886274a58417dfe4bb4c4a2">   52</a></span>&#160;<span class="keywordtype">double</span> <a class="code" href="classVector3D.xhtml#aa3ffff17b886274a58417dfe4bb4c4a2">Vector3D::getY</a>() {</div>
<div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;    <span class="keywordflow">return</span> coords[1];</div>
<div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;}</div>
<div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;</div>
<div class="line"><a name="l00056"></a><span class="lineno"><a class="line" href="classVector3D.xhtml#ab0dcbf253ff78856eccb5ea74d080fc7">   56</a></span>&#160;<span class="keywordtype">double</span> <a class="code" href="classVector3D.xhtml#ab0dcbf253ff78856eccb5ea74d080fc7">Vector3D::getZ</a>() {</div>
<div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;    <span class="keywordflow">return</span> coords[2];</div>
<div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;}</div>
<div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;</div>
<div class="line"><a name="l00060"></a><span class="lineno"><a class="line" href="classVector3D.xhtml#a2e3aa1d244483abcb1a8e48e47e79512">   60</a></span>&#160;<span class="keywordtype">double</span> <a class="code" href="classVector3D.xhtml#a2e3aa1d244483abcb1a8e48e47e79512">Vector3D::getLength</a>() {</div>
<div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;    <span class="keywordflow">return</span> sqrt(<a class="code" href="GeometryClasses_8cpp.xhtml#a73527f20206c906e9f333e0f233de13e">sqr</a>(coords[0]) + <a class="code" href="GeometryClasses_8cpp.xhtml#a73527f20206c906e9f333e0f233de13e">sqr</a>(coords[1]) + <a class="code" href="GeometryClasses_8cpp.xhtml#a73527f20206c906e9f333e0f233de13e">sqr</a>(coords[2]));</div>
<div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;}</div>
<div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;</div>
<div class="line"><a name="l00064"></a><span class="lineno"><a class="line" href="classVector3D.xhtml#a4bf1dcea68296f2f38f3574242933153">   64</a></span>&#160;<span class="keywordtype">double</span> <a class="code" href="classVector3D.xhtml#a4bf1dcea68296f2f38f3574242933153">Vector3D::getAngleTo</a>(<a class="code" href="classVector3D.xhtml">Vector3D</a>* other) {</div>
<div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;    <span class="keywordtype">double</span> dp = (getX() * other-&gt;<a class="code" href="classVector3D.xhtml#aa9eaf29045bf32b95c5c7bcb2b8b68d7">getX</a>() + getY() * other-&gt;<a class="code" href="classVector3D.xhtml#aa3ffff17b886274a58417dfe4bb4c4a2">getY</a>()</div>
<div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;            + getZ() * other-&gt;<a class="code" href="classVector3D.xhtml#ab0dcbf253ff78856eccb5ea74d080fc7">getZ</a>());</div>
<div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;    <span class="keywordtype">double</span> multLen = (getLength() * other-&gt;<a class="code" href="classVector3D.xhtml#a2e3aa1d244483abcb1a8e48e47e79512">getLength</a>());</div>
<div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;    <span class="keywordtype">double</span> <a class="code" href="CLGL__test_2ParticleSystem_8h.xhtml#a4877d316febdb87e52d19e4382a938fc">x</a> = dp / multLen;</div>
<div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;    <span class="keywordflow">if</span> (x &lt; -1.0)</div>
<div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;        x = -1.0;   <span class="comment">//Rundungsfehler korrigieren</span></div>
<div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;    <span class="keywordflow">else</span> <span class="keywordflow">if</span> (x &gt; 1.0)</div>
<div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;        x = 1.0;</div>
<div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;    <span class="keywordflow">return</span> acos(x);</div>
<div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;}</div>
<div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;</div>
<div class="line"><a name="l00076"></a><span class="lineno"><a class="line" href="classVector3D.xhtml#a0808a8e6004a347d82f9214778b5968f">   76</a></span>&#160;<span class="keywordtype">double</span> <a class="code" href="classVector3D.xhtml#a0808a8e6004a347d82f9214778b5968f">Vector3D::dotProduct</a>(<a class="code" href="classVector3D.xhtml">Vector3D</a>* other) {</div>
<div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;    <span class="keywordflow">return</span> (getX() * other-&gt;<a class="code" href="classVector3D.xhtml#aa9eaf29045bf32b95c5c7bcb2b8b68d7">getX</a>() + getY() * other-&gt;<a class="code" href="classVector3D.xhtml#aa3ffff17b886274a58417dfe4bb4c4a2">getY</a>()</div>
<div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;            + getZ() * other-&gt;<a class="code" href="classVector3D.xhtml#ab0dcbf253ff78856eccb5ea74d080fc7">getZ</a>());</div>
<div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;}</div>
<div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;</div>
<div class="line"><a name="l00081"></a><span class="lineno"><a class="line" href="classVector3D.xhtml#a482cd77ce44ea7dd71fd7a43cb7b1cf5">   81</a></span>&#160;<a class="code" href="classVector3D.xhtml">Vector3D</a>* <a class="code" href="classVector3D.xhtml#a482cd77ce44ea7dd71fd7a43cb7b1cf5">Vector3D::crossProduct</a>(<a class="code" href="classVector3D.xhtml">Vector3D</a>* other) {</div>
<div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;    <span class="keywordtype">double</span> <a class="code" href="CLGL__test_2ParticleSystem_8h.xhtml#a4877d316febdb87e52d19e4382a938fc">x</a> = getY() * other-&gt;<a class="code" href="classVector3D.xhtml#ab0dcbf253ff78856eccb5ea74d080fc7">getZ</a>() - getZ() * other-&gt;<a class="code" href="classVector3D.xhtml#aa3ffff17b886274a58417dfe4bb4c4a2">getY</a>();</div>
<div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;    <span class="keywordtype">double</span> <a class="code" href="CLGL__test_2ParticleSystem_8h.xhtml#ae666164f442d79adbc300fbb5460377e">y</a> = getZ() * other-&gt;<a class="code" href="classVector3D.xhtml#aa9eaf29045bf32b95c5c7bcb2b8b68d7">getX</a>() - getX() * other-&gt;<a class="code" href="classVector3D.xhtml#ab0dcbf253ff78856eccb5ea74d080fc7">getZ</a>();</div>
<div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;    <span class="keywordtype">double</span> <a class="code" href="CLGL__test_2ParticleSystem_8h.xhtml#ad60e6e73dfb663d917feb7ea4b95eab8">z</a> = getX() * other-&gt;<a class="code" href="classVector3D.xhtml#aa3ffff17b886274a58417dfe4bb4c4a2">getY</a>() - getY() * other-&gt;<a class="code" href="classVector3D.xhtml#aa9eaf29045bf32b95c5c7bcb2b8b68d7">getX</a>();</div>
<div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;    <span class="keywordflow">return</span> <span class="keyword">new</span> <a class="code" href="classVector3D.xhtml">Vector3D</a>(x, y, z);</div>
<div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;}</div>
<div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;</div>
<div class="line"><a name="l00088"></a><span class="lineno"><a class="line" href="classVector3D.xhtml#a0d14ff1f789254ff90adc22628eb8347">   88</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="classVector3D.xhtml#a0d14ff1f789254ff90adc22628eb8347">Vector3D::add</a>(<a class="code" href="classVector3D.xhtml">Vector3D</a>* other) {</div>
<div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;    coords[0] += other-&gt;<a class="code" href="classVector3D.xhtml#aa9eaf29045bf32b95c5c7bcb2b8b68d7">getX</a>();</div>
<div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;    coords[1] += other-&gt;<a class="code" href="classVector3D.xhtml#aa3ffff17b886274a58417dfe4bb4c4a2">getY</a>();</div>
<div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;    coords[2] += other-&gt;<a class="code" href="classVector3D.xhtml#ab0dcbf253ff78856eccb5ea74d080fc7">getZ</a>();</div>
<div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;}</div>
<div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;</div>
<div class="line"><a name="l00094"></a><span class="lineno"><a class="line" href="classVector3D.xhtml#a02364a41693ac080f5adadd776df74b4">   94</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="classVector3D.xhtml#a02364a41693ac080f5adadd776df74b4">Vector3D::sub</a>(<a class="code" href="classVector3D.xhtml">Vector3D</a>* other) {</div>
<div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;    coords[0] -= other-&gt;<a class="code" href="classVector3D.xhtml#aa9eaf29045bf32b95c5c7bcb2b8b68d7">getX</a>();</div>
<div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;    coords[1] -= other-&gt;<a class="code" href="classVector3D.xhtml#aa3ffff17b886274a58417dfe4bb4c4a2">getY</a>();</div>
<div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;    coords[2] -= other-&gt;<a class="code" href="classVector3D.xhtml#ab0dcbf253ff78856eccb5ea74d080fc7">getZ</a>();</div>
<div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;}</div>
<div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;</div>
<div class="line"><a name="l00100"></a><span class="lineno"><a class="line" href="classVector3D.xhtml#a3dec11494c99de7370e3877054c3ef13">  100</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="classVector3D.xhtml#a3dec11494c99de7370e3877054c3ef13">Vector3D::mult</a>(<span class="keywordtype">double</span> scalar) {</div>
<div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;    coords[0] *= scalar;</div>
<div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;    coords[1] *= scalar;</div>
<div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;    coords[2] *= scalar;</div>
<div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;}</div>
<div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;</div>
<div class="line"><a name="l00106"></a><span class="lineno"><a class="line" href="classVector3D.xhtml#abfb12ecb9c9beb88e095cc4a1a512d3c">  106</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="classVector3D.xhtml#abfb12ecb9c9beb88e095cc4a1a512d3c">Vector3D::normalize</a>() {</div>
<div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;    <span class="keywordtype">double</span> l = getLength();</div>
<div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;    coords[0] /= l;</div>
<div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;    coords[1] /= l;</div>
<div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;    coords[2] /= l;</div>
<div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;}</div>
<div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;</div>
<div class="line"><a name="l00113"></a><span class="lineno"><a class="line" href="classVector3D.xhtml#a89aeff2092d6a954cd449aca97c59197">  113</a></span>&#160;<span class="keywordtype">double</span>* <a class="code" href="classVector3D.xhtml#a89aeff2092d6a954cd449aca97c59197">Vector3D::getXYZ</a>() {</div>
<div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;    <span class="keywordflow">return</span> coords;</div>
<div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;}</div>
<div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;</div>
<div class="line"><a name="l00117"></a><span class="lineno"><a class="line" href="classVector3D.xhtml#a42deb992ec2f44abfb5824ea4917135c">  117</a></span>&#160;<span class="keywordtype">double</span> <a class="code" href="classVector3D.xhtml#a42deb992ec2f44abfb5824ea4917135c">Vector3D::getDistanceTo</a>(<a class="code" href="classVector3D.xhtml">Vector3D</a>* other) {</div>
<div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;    <span class="keywordflow">return</span> sqrt(</div>
<div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;            <a class="code" href="GeometryClasses_8cpp.xhtml#a73527f20206c906e9f333e0f233de13e">sqr</a>(getX() - other-&gt;<a class="code" href="classVector3D.xhtml#aa9eaf29045bf32b95c5c7bcb2b8b68d7">getX</a>()) + <a class="code" href="GeometryClasses_8cpp.xhtml#a73527f20206c906e9f333e0f233de13e">sqr</a>(getY() - other-&gt;<a class="code" href="classVector3D.xhtml#aa3ffff17b886274a58417dfe4bb4c4a2">getY</a>())</div>
<div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;                    + <a class="code" href="GeometryClasses_8cpp.xhtml#a73527f20206c906e9f333e0f233de13e">sqr</a>(getZ() - other-&gt;<a class="code" href="classVector3D.xhtml#ab0dcbf253ff78856eccb5ea74d080fc7">getZ</a>()));</div>
<div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;}</div>
<div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;</div>
<div class="line"><a name="l00123"></a><span class="lineno"><a class="line" href="classVector3D.xhtml#a37762d009e092a9a9eecb2de03b6f0ec">  123</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="classVector3D.xhtml#a37762d009e092a9a9eecb2de03b6f0ec">Vector3D::print</a>() {</div>
<div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;    cout &lt;&lt; <span class="stringliteral">&quot;Vector3D (&quot;</span> &lt;&lt; getX() &lt;&lt; <span class="stringliteral">&quot; &quot;</span> &lt;&lt; getY() &lt;&lt; <span class="stringliteral">&quot; &quot;</span> &lt;&lt; getZ() &lt;&lt; <span class="stringliteral">&quot;)&quot;</span></div>
<div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;            &lt;&lt; endl;</div>
<div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;}</div>
<div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;</div>
<div class="line"><a name="l00128"></a><span class="lineno"><a class="line" href="classVector3D.xhtml#a93ebaebe8d2f4f15ef1f79f5fe2cb682">  128</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="classVector3D.xhtml#a93ebaebe8d2f4f15ef1f79f5fe2cb682">Vector3D::printTo</a>(std::ostream &amp;stream)<span class="keyword"> const </span>{</div>
<div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;    stream &lt;&lt; <span class="stringliteral">&quot;(&quot;</span> &lt;&lt; coords[0] &lt;&lt; <span class="stringliteral">&quot; &quot;</span> &lt;&lt; coords[1] &lt;&lt; <span class="stringliteral">&quot; &quot;</span> &lt;&lt; coords[2] &lt;&lt; <span class="stringliteral">&quot;)&quot;</span>;</div>
<div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;}</div>
<div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;</div>
<div class="line"><a name="l00132"></a><span class="lineno"><a class="line" href="GeometryClasses_8h.xhtml#a948421d7d2b275c202125839e5d7b843">  132</a></span>&#160;std::ostream &amp;<a class="code" href="GeometryClasses_8cpp.xhtml#a948421d7d2b275c202125839e5d7b843">operator&lt;&lt;</a>(std::ostream &amp;out, <span class="keyword">const</span> <a class="code" href="classVector3D.xhtml">Vector3D</a> &amp;vec) {</div>
<div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;    vec.<a class="code" href="classVector3D.xhtml#a93ebaebe8d2f4f15ef1f79f5fe2cb682">printTo</a>(out);</div>
<div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;    <span class="keywordflow">return</span> out;</div>
<div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;}</div>
<div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;</div>
<div class="line"><a name="l00137"></a><span class="lineno"><a class="line" href="classVector3D.xhtml#ae4fde5759270bf5bcf615f12f0823a8c">  137</a></span>&#160;<a class="code" href="classVector3D.xhtml#ae4fde5759270bf5bcf615f12f0823a8c">Vector3D::~Vector3D</a>() {</div>
<div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;}</div>
<div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;</div>
<div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;<span class="comment">//Matrix3D</span></div>
<div class="line"><a name="l00141"></a><span class="lineno"><a class="line" href="classMatrix3D.xhtml#afe9c6b7abe858fe9f6aea8f0607a00a7">  141</a></span>&#160;<a class="code" href="classMatrix3D.xhtml#afe9c6b7abe858fe9f6aea8f0607a00a7">Matrix3D::Matrix3D</a>() {</div>
<div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;    elements[0] = 1.0;</div>
<div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;    elements[1] = 0.0;</div>
<div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;    elements[2] = 0.0;</div>
<div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;    elements[3] = 0.0;</div>
<div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;    elements[4] = 1.0;</div>
<div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;    elements[5] = 0.0;</div>
<div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;    elements[6] = 0.0;</div>
<div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;    elements[7] = 0.0;</div>
<div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;    elements[8] = 1.0;</div>
<div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;}</div>
<div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;</div>
<div class="line"><a name="l00153"></a><span class="lineno"><a class="line" href="classMatrix3D.xhtml#abd8f512d6fdfda45bfe655ae38cde303">  153</a></span>&#160;<a class="code" href="classMatrix3D.xhtml#afe9c6b7abe858fe9f6aea8f0607a00a7">Matrix3D::Matrix3D</a>(<span class="keywordtype">double</span> x1, <span class="keywordtype">double</span> y1, <span class="keywordtype">double</span> z1,</div>
<div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160;                   <span class="keywordtype">double</span> x2, <span class="keywordtype">double</span> y2, <span class="keywordtype">double</span> z2,</div>
<div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160;                   <span class="keywordtype">double</span> x3, <span class="keywordtype">double</span> y3, <span class="keywordtype">double</span> z3) {</div>
<div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160;</div>
<div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160;    elements[0] = x1;</div>
<div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160;    elements[1] = y1;</div>
<div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160;    elements[2] = z1;</div>
<div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160;    elements[3] = x2;</div>
<div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160;    elements[4] = y2;</div>
<div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160;    elements[5] = z2;</div>
<div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160;    elements[6] = x3;</div>
<div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160;    elements[7] = y3;</div>
<div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160;    elements[8] = z3;</div>
<div class="line"><a name="l00166"></a><span class="lineno">  166</span>&#160;}</div>
<div class="line"><a name="l00167"></a><span class="lineno">  167</span>&#160;</div>
<div class="line"><a name="l00168"></a><span class="lineno"><a class="line" href="classMatrix3D.xhtml#a399be81028219044a03439b2ff93782a">  168</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="classMatrix3D.xhtml#a399be81028219044a03439b2ff93782a">Matrix3D::mult</a>(<a class="code" href="classMatrix3D.xhtml">Matrix3D</a>* other) {</div>
<div class="line"><a name="l00169"></a><span class="lineno">  169</span>&#160;</div>
<div class="line"><a name="l00170"></a><span class="lineno">  170</span>&#160;    <span class="comment">//Kopie aller Elemente</span></div>
<div class="line"><a name="l00171"></a><span class="lineno">  171</span>&#160;    <span class="keywordtype">double</span> elemcopy[9];</div>
<div class="line"><a name="l00172"></a><span class="lineno">  172</span>&#160;    <span class="keywordflow">for</span> (<span class="keywordtype">int</span> i = 0; i &lt; 9; i++) {</div>
<div class="line"><a name="l00173"></a><span class="lineno">  173</span>&#160;        elemcopy[i] = elements[i];</div>
<div class="line"><a name="l00174"></a><span class="lineno">  174</span>&#160;    }</div>
<div class="line"><a name="l00175"></a><span class="lineno">  175</span>&#160;</div>
<div class="line"><a name="l00176"></a><span class="lineno">  176</span>&#160;    <span class="comment">//Matrixmultiplikation</span></div>
<div class="line"><a name="l00177"></a><span class="lineno">  177</span>&#160;    <span class="keywordflow">for</span> (<span class="keywordtype">int</span> i = 0; i &lt; 3; i++) {</div>
<div class="line"><a name="l00178"></a><span class="lineno">  178</span>&#160;        <span class="keywordflow">for</span> (<span class="keywordtype">int</span> j = 0; j &lt; 3; j++) {</div>
<div class="line"><a name="l00179"></a><span class="lineno">  179</span>&#160;            elements[3 * i + j] = elemcopy[3 * i] * other-&gt;<a class="code" href="classMatrix3D.xhtml#aa24b85b09060684ec1559f22857ccfee">elements</a>[j]</div>
<div class="line"><a name="l00180"></a><span class="lineno">  180</span>&#160;                    + elemcopy[3 * i + 1] * other-&gt;<a class="code" href="classMatrix3D.xhtml#aa24b85b09060684ec1559f22857ccfee">elements</a>[3 + j]</div>
<div class="line"><a name="l00181"></a><span class="lineno">  181</span>&#160;                    + elemcopy[3 * i + 2] * other-&gt;<a class="code" href="classMatrix3D.xhtml#aa24b85b09060684ec1559f22857ccfee">elements</a>[6 + j];</div>
<div class="line"><a name="l00182"></a><span class="lineno">  182</span>&#160;</div>
<div class="line"><a name="l00183"></a><span class="lineno">  183</span>&#160;        }</div>
<div class="line"><a name="l00184"></a><span class="lineno">  184</span>&#160;    }</div>
<div class="line"><a name="l00185"></a><span class="lineno">  185</span>&#160;}</div>
<div class="line"><a name="l00186"></a><span class="lineno"><a class="line" href="classMatrix3D.xhtml#adb30531e4dd89eb99ed2fb7f94269122">  186</a></span>&#160;<a class="code" href="classVector3D.xhtml">Vector3D</a>* <a class="code" href="classMatrix3D.xhtml#a399be81028219044a03439b2ff93782a">Matrix3D::mult</a>(<a class="code" href="classVector3D.xhtml">Vector3D</a>* other) {</div>
<div class="line"><a name="l00187"></a><span class="lineno">  187</span>&#160;</div>
<div class="line"><a name="l00188"></a><span class="lineno">  188</span>&#160;    <a class="code" href="classVector3D.xhtml">Vector3D</a>* nvec = <span class="keyword">new</span> <a class="code" href="classVector3D.xhtml">Vector3D</a>(0, 0, 0);</div>
<div class="line"><a name="l00189"></a><span class="lineno">  189</span>&#160;    <span class="keywordflow">for</span> (<span class="keywordtype">int</span> i = 0; i &lt; 3; i++) {</div>
<div class="line"><a name="l00190"></a><span class="lineno">  190</span>&#160;        <span class="keywordflow">for</span> (<span class="keywordtype">int</span> j = 0; j &lt; 3; j++) {</div>
<div class="line"><a name="l00191"></a><span class="lineno">  191</span>&#160;            nvec-&gt;<a class="code" href="classVector3D.xhtml#a89aeff2092d6a954cd449aca97c59197">getXYZ</a>()[i] += other-&gt;<a class="code" href="classVector3D.xhtml#a89aeff2092d6a954cd449aca97c59197">getXYZ</a>()[j] * elements[3 * i + j];</div>
<div class="line"><a name="l00192"></a><span class="lineno">  192</span>&#160;        }</div>
<div class="line"><a name="l00193"></a><span class="lineno">  193</span>&#160;    }</div>
<div class="line"><a name="l00194"></a><span class="lineno">  194</span>&#160;    <span class="keywordflow">return</span> nvec;</div>
<div class="line"><a name="l00195"></a><span class="lineno">  195</span>&#160;}</div>
<div class="line"><a name="l00196"></a><span class="lineno">  196</span>&#160;</div>
<div class="line"><a name="l00197"></a><span class="lineno"><a class="line" href="classMatrix3D.xhtml#ada7ce7ea9f2d0ef0fdda60ad73dad345">  197</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="classMatrix3D.xhtml#ada7ce7ea9f2d0ef0fdda60ad73dad345">Matrix3D::rotateX</a>(<span class="keywordtype">double</span> angle) {</div>
<div class="line"><a name="l00198"></a><span class="lineno">  198</span>&#160;    <a class="code" href="classMatrix3D.xhtml">Matrix3D</a> mat = <a class="code" href="classMatrix3D.xhtml">Matrix3D</a>(1, 0, 0,</div>
<div class="line"><a name="l00199"></a><span class="lineno">  199</span>&#160;                            0, cos(angle), -sin(angle),</div>
<div class="line"><a name="l00200"></a><span class="lineno">  200</span>&#160;                            0, sin(angle), cos(angle));</div>
<div class="line"><a name="l00201"></a><span class="lineno">  201</span>&#160;    this-&gt;mult(&amp;mat);</div>
<div class="line"><a name="l00202"></a><span class="lineno">  202</span>&#160;}</div>
<div class="line"><a name="l00203"></a><span class="lineno">  203</span>&#160;</div>
<div class="line"><a name="l00204"></a><span class="lineno"><a class="line" href="classMatrix3D.xhtml#a649e1aa65466df65d63f1aef934e5fad">  204</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="classMatrix3D.xhtml#a649e1aa65466df65d63f1aef934e5fad">Matrix3D::rotateY</a>(<span class="keywordtype">double</span> angle) {</div>
<div class="line"><a name="l00205"></a><span class="lineno">  205</span>&#160;    <a class="code" href="classMatrix3D.xhtml">Matrix3D</a> mat = <a class="code" href="classMatrix3D.xhtml">Matrix3D</a>(cos(angle), 0, sin(angle),</div>
<div class="line"><a name="l00206"></a><span class="lineno">  206</span>&#160;                            0, 1, 0,</div>
<div class="line"><a name="l00207"></a><span class="lineno">  207</span>&#160;                            -sin(angle), 0, cos(angle));</div>
<div class="line"><a name="l00208"></a><span class="lineno">  208</span>&#160;    this-&gt;mult(&amp;mat);</div>
<div class="line"><a name="l00209"></a><span class="lineno">  209</span>&#160;}</div>
<div class="line"><a name="l00210"></a><span class="lineno">  210</span>&#160;</div>
<div class="line"><a name="l00211"></a><span class="lineno"><a class="line" href="classMatrix3D.xhtml#ad1933b95fb776dd31ad1b81d3515b029">  211</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="classMatrix3D.xhtml#ad1933b95fb776dd31ad1b81d3515b029">Matrix3D::rotateZ</a>(<span class="keywordtype">double</span> angle) {</div>
<div class="line"><a name="l00212"></a><span class="lineno">  212</span>&#160;    <a class="code" href="classMatrix3D.xhtml">Matrix3D</a> mat = <a class="code" href="classMatrix3D.xhtml">Matrix3D</a>(cos(angle), -sin(angle), 0,</div>
<div class="line"><a name="l00213"></a><span class="lineno">  213</span>&#160;                            sin(angle), cos(angle), 0,</div>
<div class="line"><a name="l00214"></a><span class="lineno">  214</span>&#160;                            0, 0, 1);</div>
<div class="line"><a name="l00215"></a><span class="lineno">  215</span>&#160;    this-&gt;mult(&amp;mat);</div>
<div class="line"><a name="l00216"></a><span class="lineno">  216</span>&#160;}</div>
<div class="line"><a name="l00217"></a><span class="lineno">  217</span>&#160;</div>
<div class="line"><a name="l00218"></a><span class="lineno"><a class="line" href="classMatrix3D.xhtml#a0d59cb6ea927264477a10b9d427966d6">  218</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="classMatrix3D.xhtml#a0d59cb6ea927264477a10b9d427966d6">Matrix3D::transpose</a>() {</div>
<div class="line"><a name="l00219"></a><span class="lineno">  219</span>&#160;    <span class="keywordtype">double</span> elemcopy[9];</div>
<div class="line"><a name="l00220"></a><span class="lineno">  220</span>&#160;    <span class="keywordflow">for</span> (<span class="keywordtype">int</span> i = 0; i &lt; 9; i++) {</div>
<div class="line"><a name="l00221"></a><span class="lineno">  221</span>&#160;        elemcopy[i] = elements[i];</div>
<div class="line"><a name="l00222"></a><span class="lineno">  222</span>&#160;    }</div>
<div class="line"><a name="l00223"></a><span class="lineno">  223</span>&#160;    <span class="keywordflow">for</span> (<span class="keywordtype">int</span> i = 0; i &lt; 3; i++) {</div>
<div class="line"><a name="l00224"></a><span class="lineno">  224</span>&#160;        <span class="keywordflow">for</span> (<span class="keywordtype">int</span> j = 0; j &lt; 3; j++) {</div>
<div class="line"><a name="l00225"></a><span class="lineno">  225</span>&#160;            elements[3 * j + i] = elemcopy[3 * i + j];</div>
<div class="line"><a name="l00226"></a><span class="lineno">  226</span>&#160;        }</div>
<div class="line"><a name="l00227"></a><span class="lineno">  227</span>&#160;    }</div>
<div class="line"><a name="l00228"></a><span class="lineno">  228</span>&#160;}</div>
<div class="line"><a name="l00229"></a><span class="lineno">  229</span>&#160;</div>
<div class="line"><a name="l00230"></a><span class="lineno"><a class="line" href="classMatrix3D.xhtml#a33c771d35de761fafc619773e1b253c5">  230</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="classMatrix3D.xhtml#a33c771d35de761fafc619773e1b253c5">Matrix3D::print</a>() {</div>
<div class="line"><a name="l00231"></a><span class="lineno">  231</span>&#160;    cout &lt;&lt; <span class="stringliteral">&quot;(&quot;</span> &lt;&lt; elements[0] &lt;&lt; <span class="stringliteral">&quot; &quot;</span> &lt;&lt; elements[1] &lt;&lt; <span class="stringliteral">&quot; &quot;</span> &lt;&lt; elements[2]</div>
<div class="line"><a name="l00232"></a><span class="lineno">  232</span>&#160;            &lt;&lt; <span class="stringliteral">&quot;)&quot;</span> &lt;&lt; endl;</div>
<div class="line"><a name="l00233"></a><span class="lineno">  233</span>&#160;    cout &lt;&lt; <span class="stringliteral">&quot;(&quot;</span> &lt;&lt; elements[3] &lt;&lt; <span class="stringliteral">&quot; &quot;</span> &lt;&lt; elements[4] &lt;&lt; <span class="stringliteral">&quot; &quot;</span> &lt;&lt; elements[5]</div>
<div class="line"><a name="l00234"></a><span class="lineno">  234</span>&#160;            &lt;&lt; <span class="stringliteral">&quot;)&quot;</span> &lt;&lt; endl;</div>
<div class="line"><a name="l00235"></a><span class="lineno">  235</span>&#160;    cout &lt;&lt; <span class="stringliteral">&quot;(&quot;</span> &lt;&lt; elements[6] &lt;&lt; <span class="stringliteral">&quot; &quot;</span> &lt;&lt; elements[7] &lt;&lt; <span class="stringliteral">&quot; &quot;</span> &lt;&lt; elements[8]</div>
<div class="line"><a name="l00236"></a><span class="lineno">  236</span>&#160;            &lt;&lt; <span class="stringliteral">&quot;)&quot;</span> &lt;&lt; endl;</div>
<div class="line"><a name="l00237"></a><span class="lineno">  237</span>&#160;}</div>
<div class="line"><a name="l00238"></a><span class="lineno">  238</span>&#160;</div>
<div class="line"><a name="l00239"></a><span class="lineno">  239</span>&#160;<span class="comment">// Triangle</span></div>
<div class="line"><a name="l00240"></a><span class="lineno"><a class="line" href="classTriangle.xhtml#aa25e2e56ac291e4366474fcbdcc6901b">  240</a></span>&#160;<a class="code" href="classTriangle.xhtml#aa25e2e56ac291e4366474fcbdcc6901b">Triangle::Triangle</a>(<a class="code" href="classVector3D.xhtml">Vector3D</a>* <a class="code" href="CLGL__test_2ParticleSystem_8h.xhtml#a8d89db3c6515289b4df99467371c544f">v1</a>, <a class="code" href="classVector3D.xhtml">Vector3D</a>* <a class="code" href="CLGL__test_2ParticleSystem_8h.xhtml#aadda57ca88b1f7b495ff17bc402bb584">v2</a>, <a class="code" href="classVector3D.xhtml">Vector3D</a>* <a class="code" href="CLGL__test_2ParticleSystem_8h.xhtml#ac3e04ab93bb7f4e1e62ac7311bf75293">v3</a>) {</div>
<div class="line"><a name="l00241"></a><span class="lineno">  241</span>&#160;    verts[0] = <a class="code" href="CLGL__test_2ParticleSystem_8h.xhtml#a8d89db3c6515289b4df99467371c544f">v1</a>;</div>
<div class="line"><a name="l00242"></a><span class="lineno">  242</span>&#160;    verts[1] = <a class="code" href="CLGL__test_2ParticleSystem_8h.xhtml#aadda57ca88b1f7b495ff17bc402bb584">v2</a>;</div>
<div class="line"><a name="l00243"></a><span class="lineno">  243</span>&#160;    verts[2] = <a class="code" href="CLGL__test_2ParticleSystem_8h.xhtml#ac3e04ab93bb7f4e1e62ac7311bf75293">v3</a>;</div>
<div class="line"><a name="l00244"></a><span class="lineno">  244</span>&#160;}</div>
<div class="line"><a name="l00245"></a><span class="lineno">  245</span>&#160;</div>
<div class="line"><a name="l00246"></a><span class="lineno"><a class="line" href="classTriangle.xhtml#ae054a0eae5dae026c5af69274c5f277e">  246</a></span>&#160;<a class="code" href="classVector3D.xhtml">Vector3D</a>* <a class="code" href="classTriangle.xhtml#ae054a0eae5dae026c5af69274c5f277e">Triangle::getV1</a>() {</div>
<div class="line"><a name="l00247"></a><span class="lineno">  247</span>&#160;    <span class="keywordflow">return</span> verts[0];</div>
<div class="line"><a name="l00248"></a><span class="lineno">  248</span>&#160;}</div>
<div class="line"><a name="l00249"></a><span class="lineno">  249</span>&#160;</div>
<div class="line"><a name="l00250"></a><span class="lineno"><a class="line" href="classTriangle.xhtml#a6de5f8560482f4130bdbb96b25aa1b58">  250</a></span>&#160;<a class="code" href="classVector3D.xhtml">Vector3D</a>* <a class="code" href="classTriangle.xhtml#a6de5f8560482f4130bdbb96b25aa1b58">Triangle::getV2</a>() {</div>
<div class="line"><a name="l00251"></a><span class="lineno">  251</span>&#160;    <span class="keywordflow">return</span> verts[1];</div>
<div class="line"><a name="l00252"></a><span class="lineno">  252</span>&#160;}</div>
<div class="line"><a name="l00253"></a><span class="lineno">  253</span>&#160;</div>
<div class="line"><a name="l00254"></a><span class="lineno"><a class="line" href="classTriangle.xhtml#a792a627dc42adad87c0b30e16a6b5824">  254</a></span>&#160;<a class="code" href="classVector3D.xhtml">Vector3D</a>* <a class="code" href="classTriangle.xhtml#a792a627dc42adad87c0b30e16a6b5824">Triangle::getV3</a>() {</div>
<div class="line"><a name="l00255"></a><span class="lineno">  255</span>&#160;    <span class="keywordflow">return</span> verts[2];</div>
<div class="line"><a name="l00256"></a><span class="lineno">  256</span>&#160;}</div>
<div class="line"><a name="l00257"></a><span class="lineno">  257</span>&#160;</div>
<div class="line"><a name="l00258"></a><span class="lineno"><a class="line" href="classTriangle.xhtml#a9320d1ab83c104352bf5e8f2c8274334">  258</a></span>&#160;<a class="code" href="classVector3D.xhtml">Vector3D</a>* <a class="code" href="classTriangle.xhtml#a9320d1ab83c104352bf5e8f2c8274334">Triangle::getVert</a>(<span class="keywordtype">int</span> index) {</div>
<div class="line"><a name="l00259"></a><span class="lineno">  259</span>&#160;    <span class="keywordflow">return</span> verts[index];</div>
<div class="line"><a name="l00260"></a><span class="lineno">  260</span>&#160;}</div>
<div class="line"><a name="l00261"></a><span class="lineno">  261</span>&#160;</div>
<div class="line"><a name="l00262"></a><span class="lineno"><a class="line" href="classTriangle.xhtml#a3c72b19f316fa9ffb0a2f206e3558790">  262</a></span>&#160;<a class="code" href="classVector3D.xhtml">Vector3D</a>* <a class="code" href="classTriangle.xhtml#a3c72b19f316fa9ffb0a2f206e3558790">Triangle::getNormal</a>() {</div>
<div class="line"><a name="l00263"></a><span class="lineno">  263</span>&#160;    <a class="code" href="classVector3D.xhtml">Vector3D</a>* e1 = verts[1]-&gt;<a class="code" href="classVector3D.xhtml#a46dd0d9a849809a3857783102959e788">copy</a>();</div>
<div class="line"><a name="l00264"></a><span class="lineno">  264</span>&#160;    <a class="code" href="classVector3D.xhtml">Vector3D</a>* e2 = verts[2]-&gt;<a class="code" href="classVector3D.xhtml#a46dd0d9a849809a3857783102959e788">copy</a>();</div>
<div class="line"><a name="l00265"></a><span class="lineno">  265</span>&#160;    e1-&gt;<a class="code" href="classVector3D.xhtml#a02364a41693ac080f5adadd776df74b4">sub</a>(verts[0]);</div>
<div class="line"><a name="l00266"></a><span class="lineno">  266</span>&#160;    e2-&gt;<a class="code" href="classVector3D.xhtml#a02364a41693ac080f5adadd776df74b4">sub</a>(verts[0]);</div>
<div class="line"><a name="l00267"></a><span class="lineno">  267</span>&#160;    <a class="code" href="classVector3D.xhtml">Vector3D</a>* normal = e1-&gt;<a class="code" href="classVector3D.xhtml#a482cd77ce44ea7dd71fd7a43cb7b1cf5">crossProduct</a>(e2);</div>
<div class="line"><a name="l00268"></a><span class="lineno">  268</span>&#160;    <span class="keyword">delete</span> e1;</div>
<div class="line"><a name="l00269"></a><span class="lineno">  269</span>&#160;    <span class="keyword">delete</span> e2;</div>
<div class="line"><a name="l00270"></a><span class="lineno">  270</span>&#160;    normal-&gt;<a class="code" href="classVector3D.xhtml#abfb12ecb9c9beb88e095cc4a1a512d3c">normalize</a>();</div>
<div class="line"><a name="l00271"></a><span class="lineno">  271</span>&#160;    <span class="keywordflow">return</span> normal;</div>
<div class="line"><a name="l00272"></a><span class="lineno">  272</span>&#160;}</div>
<div class="line"><a name="l00273"></a><span class="lineno">  273</span>&#160;</div>
<div class="line"><a name="l00274"></a><span class="lineno"><a class="line" href="classTriangle.xhtml#abc3785b96e03fde1b5f594f8ed6afabb">  274</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="classTriangle.xhtml#abc3785b96e03fde1b5f594f8ed6afabb">Triangle::print</a>() {</div>
<div class="line"><a name="l00275"></a><span class="lineno">  275</span>&#160;    cout &lt;&lt; <span class="stringliteral">&quot;Triangle:&quot;</span> &lt;&lt; endl;</div>
<div class="line"><a name="l00276"></a><span class="lineno">  276</span>&#160;    cout &lt;&lt; <span class="stringliteral">&quot;(&quot;</span> &lt;&lt; verts[0]-&gt;getX() &lt;&lt; <span class="stringliteral">&quot; &quot;</span> &lt;&lt; verts[0]-&gt;getY() &lt;&lt; <span class="stringliteral">&quot; &quot;</span></div>
<div class="line"><a name="l00277"></a><span class="lineno">  277</span>&#160;            &lt;&lt; verts[0]-&gt;getZ() &lt;&lt; <span class="stringliteral">&quot;)&quot;</span> &lt;&lt; endl;</div>
<div class="line"><a name="l00278"></a><span class="lineno">  278</span>&#160;    cout &lt;&lt; <span class="stringliteral">&quot;(&quot;</span> &lt;&lt; verts[1]-&gt;getX() &lt;&lt; <span class="stringliteral">&quot; &quot;</span> &lt;&lt; verts[1]-&gt;getY() &lt;&lt; <span class="stringliteral">&quot; &quot;</span></div>
<div class="line"><a name="l00279"></a><span class="lineno">  279</span>&#160;            &lt;&lt; verts[1]-&gt;getZ() &lt;&lt; <span class="stringliteral">&quot;)&quot;</span> &lt;&lt; endl;</div>
<div class="line"><a name="l00280"></a><span class="lineno">  280</span>&#160;    cout &lt;&lt; <span class="stringliteral">&quot;(&quot;</span> &lt;&lt; verts[2]-&gt;getX() &lt;&lt; <span class="stringliteral">&quot; &quot;</span> &lt;&lt; verts[2]-&gt;getY() &lt;&lt; <span class="stringliteral">&quot; &quot;</span></div>
<div class="line"><a name="l00281"></a><span class="lineno">  281</span>&#160;            &lt;&lt; verts[2]-&gt;getZ() &lt;&lt; <span class="stringliteral">&quot;)&quot;</span> &lt;&lt; endl;</div>
<div class="line"><a name="l00282"></a><span class="lineno">  282</span>&#160;}</div>
<div class="line"><a name="l00283"></a><span class="lineno"><a class="line" href="classTriangle.xhtml#a5199760a17454f4dc94c855a57e3a152">  283</a></span>&#160;<a class="code" href="classTriangle.xhtml#a5199760a17454f4dc94c855a57e3a152">Triangle::~Triangle</a>() {</div>
<div class="line"><a name="l00284"></a><span class="lineno">  284</span>&#160;}</div>
<div class="line"><a name="l00285"></a><span class="lineno">  285</span>&#160;</div>
<div class="line"><a name="l00286"></a><span class="lineno">  286</span>&#160;<span class="comment">//Tetrahedron</span></div>
<div class="line"><a name="l00287"></a><span class="lineno"><a class="line" href="classTetrahedron.xhtml#a84e19dba5735a455269abca8229b4bb4">  287</a></span>&#160;<a class="code" href="classTetrahedron.xhtml#a84e19dba5735a455269abca8229b4bb4">Tetrahedron::Tetrahedron</a>(<a class="code" href="classVector3D.xhtml">Vector3D</a>* <a class="code" href="CLGL__test_2ParticleSystem_8h.xhtml#a8d89db3c6515289b4df99467371c544f">v1</a>, <a class="code" href="classVector3D.xhtml">Vector3D</a>* <a class="code" href="CLGL__test_2ParticleSystem_8h.xhtml#aadda57ca88b1f7b495ff17bc402bb584">v2</a>, <a class="code" href="classVector3D.xhtml">Vector3D</a>* <a class="code" href="CLGL__test_2ParticleSystem_8h.xhtml#ac3e04ab93bb7f4e1e62ac7311bf75293">v3</a>,</div>
<div class="line"><a name="l00288"></a><span class="lineno">  288</span>&#160;        <a class="code" href="classVector3D.xhtml">Vector3D</a>* <a class="code" href="CLGL__test_2ParticleSystem_8h.xhtml#a601d75fa74098fd47a857d5afddb6830">v4</a>) {</div>
<div class="line"><a name="l00289"></a><span class="lineno">  289</span>&#160;    verts[0] = <a class="code" href="CLGL__test_2ParticleSystem_8h.xhtml#a8d89db3c6515289b4df99467371c544f">v1</a>;</div>
<div class="line"><a name="l00290"></a><span class="lineno">  290</span>&#160;    verts[1] = <a class="code" href="CLGL__test_2ParticleSystem_8h.xhtml#aadda57ca88b1f7b495ff17bc402bb584">v2</a>;</div>
<div class="line"><a name="l00291"></a><span class="lineno">  291</span>&#160;    verts[2] = <a class="code" href="CLGL__test_2ParticleSystem_8h.xhtml#ac3e04ab93bb7f4e1e62ac7311bf75293">v3</a>;</div>
<div class="line"><a name="l00292"></a><span class="lineno">  292</span>&#160;    verts[3] = <a class="code" href="CLGL__test_2ParticleSystem_8h.xhtml#a601d75fa74098fd47a857d5afddb6830">v4</a>;</div>
<div class="line"><a name="l00293"></a><span class="lineno">  293</span>&#160;}</div>
<div class="line"><a name="l00294"></a><span class="lineno">  294</span>&#160;</div>
<div class="line"><a name="l00295"></a><span class="lineno"><a class="line" href="classTetrahedron.xhtml#add51e42ab17afbd023d47a436ce24b0d">  295</a></span>&#160;<a class="code" href="classVector3D.xhtml">Vector3D</a>* <a class="code" href="classTetrahedron.xhtml#add51e42ab17afbd023d47a436ce24b0d">Tetrahedron::getV1</a>() {</div>
<div class="line"><a name="l00296"></a><span class="lineno">  296</span>&#160;    <span class="keywordflow">return</span> verts[0];</div>
<div class="line"><a name="l00297"></a><span class="lineno">  297</span>&#160;}</div>
<div class="line"><a name="l00298"></a><span class="lineno">  298</span>&#160;</div>
<div class="line"><a name="l00299"></a><span class="lineno"><a class="line" href="classTetrahedron.xhtml#aa728c967f17e2b8408009b5f2b77a17a">  299</a></span>&#160;<a class="code" href="classVector3D.xhtml">Vector3D</a>* <a class="code" href="classTetrahedron.xhtml#aa728c967f17e2b8408009b5f2b77a17a">Tetrahedron::getV2</a>() {</div>
<div class="line"><a name="l00300"></a><span class="lineno">  300</span>&#160;    <span class="keywordflow">return</span> verts[1];</div>
<div class="line"><a name="l00301"></a><span class="lineno">  301</span>&#160;}</div>
<div class="line"><a name="l00302"></a><span class="lineno">  302</span>&#160;</div>
<div class="line"><a name="l00303"></a><span class="lineno"><a class="line" href="classTetrahedron.xhtml#aa539a97f133ea621520121acb2ef4a7e">  303</a></span>&#160;<a class="code" href="classVector3D.xhtml">Vector3D</a>* <a class="code" href="classTetrahedron.xhtml#aa539a97f133ea621520121acb2ef4a7e">Tetrahedron::getV3</a>() {</div>
<div class="line"><a name="l00304"></a><span class="lineno">  304</span>&#160;    <span class="keywordflow">return</span> verts[2];</div>
<div class="line"><a name="l00305"></a><span class="lineno">  305</span>&#160;}</div>
<div class="line"><a name="l00306"></a><span class="lineno">  306</span>&#160;</div>
<div class="line"><a name="l00307"></a><span class="lineno"><a class="line" href="classTetrahedron.xhtml#a7308b7b73edeba7782dff551a03095bf">  307</a></span>&#160;<a class="code" href="classVector3D.xhtml">Vector3D</a>* <a class="code" href="classTetrahedron.xhtml#a7308b7b73edeba7782dff551a03095bf">Tetrahedron::getV4</a>() {</div>
<div class="line"><a name="l00308"></a><span class="lineno">  308</span>&#160;    <span class="keywordflow">return</span> verts[3];</div>
<div class="line"><a name="l00309"></a><span class="lineno">  309</span>&#160;}</div>
<div class="line"><a name="l00310"></a><span class="lineno">  310</span>&#160;</div>
<div class="line"><a name="l00311"></a><span class="lineno"><a class="line" href="classTetrahedron.xhtml#a88afe41ae5991168ad51ba4dbb2e1a6b">  311</a></span>&#160;<a class="code" href="classVector3D.xhtml">Vector3D</a>* <a class="code" href="classTetrahedron.xhtml#a88afe41ae5991168ad51ba4dbb2e1a6b">Tetrahedron::getVert</a>(<span class="keywordtype">int</span> i) {</div>
<div class="line"><a name="l00312"></a><span class="lineno">  312</span>&#160;    <span class="keywordflow">return</span> verts[i];</div>
<div class="line"><a name="l00313"></a><span class="lineno">  313</span>&#160;}</div>
<div class="ttc" id="classMatrix3D_xhtml_a399be81028219044a03439b2ff93782a"><div class="ttname"><a href="classMatrix3D.xhtml#a399be81028219044a03439b2ff93782a">Matrix3D::mult</a></div><div class="ttdeci">void mult(Matrix3D *other)</div><div class="ttdoc">Multipliziert die Matrix mit einer anderen Matrix. </div><div class="ttdef"><b>Definition:</b> <a href="GeometryClasses_8cpp_source.xhtml#l00168">GeometryClasses.cpp:168</a></div></div>
<div class="ttc" id="classVector3D_xhtml_ab0dcbf253ff78856eccb5ea74d080fc7"><div class="ttname"><a href="classVector3D.xhtml#ab0dcbf253ff78856eccb5ea74d080fc7">Vector3D::getZ</a></div><div class="ttdeci">double getZ()</div><div class="ttdoc">Gibt das Z-Element des Vektors zurück. </div><div class="ttdef"><b>Definition:</b> <a href="GeometryClasses_8cpp_source.xhtml#l00056">GeometryClasses.cpp:56</a></div></div>
<div class="ttc" id="classVector3D_xhtml_aa9eaf29045bf32b95c5c7bcb2b8b68d7"><div class="ttname"><a href="classVector3D.xhtml#aa9eaf29045bf32b95c5c7bcb2b8b68d7">Vector3D::getX</a></div><div class="ttdeci">double getX()</div><div class="ttdoc">Gibt das X-Element des Vektors zurück. </div><div class="ttdef"><b>Definition:</b> <a href="GeometryClasses_8cpp_source.xhtml#l00048">GeometryClasses.cpp:48</a></div></div>
<div class="ttc" id="classMatrix3D_xhtml_aa24b85b09060684ec1559f22857ccfee"><div class="ttname"><a href="classMatrix3D.xhtml#aa24b85b09060684ec1559f22857ccfee">Matrix3D::elements</a></div><div class="ttdeci">double elements[9]</div><div class="ttdoc">Die Elemente der Matrix. </div><div class="ttdef"><b>Definition:</b> <a href="GeometryClasses_8h_source.xhtml#l00221">GeometryClasses.h:221</a></div></div>
<div class="ttc" id="classMatrix3D_xhtml_ada7ce7ea9f2d0ef0fdda60ad73dad345"><div class="ttname"><a href="classMatrix3D.xhtml#ada7ce7ea9f2d0ef0fdda60ad73dad345">Matrix3D::rotateX</a></div><div class="ttdeci">void rotateX(double angle)</div><div class="ttdoc">Rotiert die Matrix um einen bestimmten Winkel auf der X-Achse. </div><div class="ttdef"><b>Definition:</b> <a href="GeometryClasses_8cpp_source.xhtml#l00197">GeometryClasses.cpp:197</a></div></div>
<div class="ttc" id="CLGL__test_2ParticleSystem_8h_xhtml_ae666164f442d79adbc300fbb5460377e"><div class="ttname"><a href="CLGL__test_2ParticleSystem_8h.xhtml#ae666164f442d79adbc300fbb5460377e">y</a></div><div class="ttdeci">cl_float y</div><div class="ttdef"><b>Definition:</b> <a href="CLGL__test_2ParticleSystem_8h_source.xhtml#l00034">ParticleSystem.h:34</a></div></div>
<div class="ttc" id="classTetrahedron_xhtml_a88afe41ae5991168ad51ba4dbb2e1a6b"><div class="ttname"><a href="classTetrahedron.xhtml#a88afe41ae5991168ad51ba4dbb2e1a6b">Tetrahedron::getVert</a></div><div class="ttdeci">Vector3D * getVert(int index)</div><div class="ttdoc">Gibt eine Referenz auf den Ortsvektor zum index+1 Punkt des Tetraeders zurück. </div><div class="ttdef"><b>Definition:</b> <a href="GeometryClasses_8cpp_source.xhtml#l00311">GeometryClasses.cpp:311</a></div></div>
<div class="ttc" id="classVector3D_xhtml_ac83e936757114f32bc9d868ea5fabbc2"><div class="ttname"><a href="classVector3D.xhtml#ac83e936757114f32bc9d868ea5fabbc2">Vector3D::equals</a></div><div class="ttdeci">bool equals(Vector3D *other)</div><div class="ttdoc">Testet, ob zwei Vektoren identisch sind. </div><div class="ttdef"><b>Definition:</b> <a href="GeometryClasses_8cpp_source.xhtml#l00042">GeometryClasses.cpp:42</a></div></div>
<div class="ttc" id="classMatrix3D_xhtml_a33c771d35de761fafc619773e1b253c5"><div class="ttname"><a href="classMatrix3D.xhtml#a33c771d35de761fafc619773e1b253c5">Matrix3D::print</a></div><div class="ttdeci">void print()</div><div class="ttdoc">Gibt die Matrix auf dem cout-Stream aus. </div><div class="ttdef"><b>Definition:</b> <a href="GeometryClasses_8cpp_source.xhtml#l00230">GeometryClasses.cpp:230</a></div></div>
<div class="ttc" id="classMatrix3D_xhtml_a649e1aa65466df65d63f1aef934e5fad"><div class="ttname"><a href="classMatrix3D.xhtml#a649e1aa65466df65d63f1aef934e5fad">Matrix3D::rotateY</a></div><div class="ttdeci">void rotateY(double angle)</div><div class="ttdoc">Rotiert die Matrix um einen bestimmten Winkel auf der Y-Achse. </div><div class="ttdef"><b>Definition:</b> <a href="GeometryClasses_8cpp_source.xhtml#l00204">GeometryClasses.cpp:204</a></div></div>
<div class="ttc" id="CLGL__test_2ParticleSystem_8h_xhtml_a8d89db3c6515289b4df99467371c544f"><div class="ttname"><a href="CLGL__test_2ParticleSystem_8h.xhtml#a8d89db3c6515289b4df99467371c544f">v1</a></div><div class="ttdeci">cl_float v1</div><div class="ttdef"><b>Definition:</b> <a href="CLGL__test_2ParticleSystem_8h_source.xhtml#l00037">ParticleSystem.h:37</a></div></div>
<div class="ttc" id="classVector3D_xhtml_a37762d009e092a9a9eecb2de03b6f0ec"><div class="ttname"><a href="classVector3D.xhtml#a37762d009e092a9a9eecb2de03b6f0ec">Vector3D::print</a></div><div class="ttdeci">void print()</div><div class="ttdoc">Gibt den Vektor auf dem cout-Stream aus. </div><div class="ttdef"><b>Definition:</b> <a href="GeometryClasses_8cpp_source.xhtml#l00123">GeometryClasses.cpp:123</a></div></div>
<div class="ttc" id="GeometryClasses_8cpp_xhtml_a948421d7d2b275c202125839e5d7b843"><div class="ttname"><a href="GeometryClasses_8cpp.xhtml#a948421d7d2b275c202125839e5d7b843">operator&lt;&lt;</a></div><div class="ttdeci">std::ostream &amp; operator&lt;&lt;(std::ostream &amp;out, const Vector3D &amp;vec)</div><div class="ttdoc">Definition des &lt;&lt;-Operators für die Ausgabe eines Vektors. </div><div class="ttdef"><b>Definition:</b> <a href="GeometryClasses_8cpp_source.xhtml#l00132">GeometryClasses.cpp:132</a></div></div>
<div class="ttc" id="classTriangle_xhtml_a9320d1ab83c104352bf5e8f2c8274334"><div class="ttname"><a href="classTriangle.xhtml#a9320d1ab83c104352bf5e8f2c8274334">Triangle::getVert</a></div><div class="ttdeci">Vector3D * getVert(int index)</div><div class="ttdoc">Gibt eine Referenz auf den Ortsvektor zum index+1 Punkt des Dreiecks zurück. </div><div class="ttdef"><b>Definition:</b> <a href="GeometryClasses_8cpp_source.xhtml#l00258">GeometryClasses.cpp:258</a></div></div>
<div class="ttc" id="classVector3D_xhtml_a02364a41693ac080f5adadd776df74b4"><div class="ttname"><a href="classVector3D.xhtml#a02364a41693ac080f5adadd776df74b4">Vector3D::sub</a></div><div class="ttdeci">void sub(Vector3D *other)</div><div class="ttdoc">Subtrahiert einen Vektor von diesem Vektor. </div><div class="ttdef"><b>Definition:</b> <a href="GeometryClasses_8cpp_source.xhtml#l00094">GeometryClasses.cpp:94</a></div></div>
<div class="ttc" id="GeometryClasses_8cpp_xhtml_a002b2f4894492820fe708b1b7e7c5e70"><div class="ttname"><a href="GeometryClasses_8cpp.xhtml#a002b2f4894492820fe708b1b7e7c5e70">EPSILON</a></div><div class="ttdeci">#define EPSILON</div><div class="ttdef"><b>Definition:</b> <a href="GeometryClasses_8cpp_source.xhtml#l00013">GeometryClasses.cpp:13</a></div></div>
<div class="ttc" id="classMatrix3D_xhtml_ad1933b95fb776dd31ad1b81d3515b029"><div class="ttname"><a href="classMatrix3D.xhtml#ad1933b95fb776dd31ad1b81d3515b029">Matrix3D::rotateZ</a></div><div class="ttdeci">void rotateZ(double angle)</div><div class="ttdoc">Rotiert die Matrix um einen bestimmten Winkel auf der Z-Achse. </div><div class="ttdef"><b>Definition:</b> <a href="GeometryClasses_8cpp_source.xhtml#l00211">GeometryClasses.cpp:211</a></div></div>
<div class="ttc" id="classTetrahedron_xhtml_a7308b7b73edeba7782dff551a03095bf"><div class="ttname"><a href="classTetrahedron.xhtml#a7308b7b73edeba7782dff551a03095bf">Tetrahedron::getV4</a></div><div class="ttdeci">Vector3D * getV4()</div><div class="ttdoc">Gibt eine Referenz auf den Ortsvektor zum 3. </div><div class="ttdef"><b>Definition:</b> <a href="GeometryClasses_8cpp_source.xhtml#l00307">GeometryClasses.cpp:307</a></div></div>
<div class="ttc" id="classVector3D_xhtml_a93ebaebe8d2f4f15ef1f79f5fe2cb682"><div class="ttname"><a href="classVector3D.xhtml#a93ebaebe8d2f4f15ef1f79f5fe2cb682">Vector3D::printTo</a></div><div class="ttdeci">void printTo(std::ostream &amp;stream) const </div><div class="ttdoc">Gibt den Vektor auf dem gegebenen Stream aus. </div><div class="ttdef"><b>Definition:</b> <a href="GeometryClasses_8cpp_source.xhtml#l00128">GeometryClasses.cpp:128</a></div></div>
<div class="ttc" id="CLGL__test_2ParticleSystem_8h_xhtml_a4877d316febdb87e52d19e4382a938fc"><div class="ttname"><a href="CLGL__test_2ParticleSystem_8h.xhtml#a4877d316febdb87e52d19e4382a938fc">x</a></div><div class="ttdeci">cl_float x</div><div class="ttdef"><b>Definition:</b> <a href="CLGL__test_2ParticleSystem_8h_source.xhtml#l00033">ParticleSystem.h:33</a></div></div>
<div class="ttc" id="classTriangle_xhtml_ae054a0eae5dae026c5af69274c5f277e"><div class="ttname"><a href="classTriangle.xhtml#ae054a0eae5dae026c5af69274c5f277e">Triangle::getV1</a></div><div class="ttdeci">Vector3D * getV1()</div><div class="ttdoc">Gibt eine Referenz auf den Ortsvektor zum ersten Punkt des Dreiecks zurück. </div><div class="ttdef"><b>Definition:</b> <a href="GeometryClasses_8cpp_source.xhtml#l00246">GeometryClasses.cpp:246</a></div></div>
<div class="ttc" id="classVector3D_xhtml_a0808a8e6004a347d82f9214778b5968f"><div class="ttname"><a href="classVector3D.xhtml#a0808a8e6004a347d82f9214778b5968f">Vector3D::dotProduct</a></div><div class="ttdeci">double dotProduct(Vector3D *other)</div><div class="ttdoc">Gibt das Skalarprodukt mit einem anderen Vektor. </div><div class="ttdef"><b>Definition:</b> <a href="GeometryClasses_8cpp_source.xhtml#l00076">GeometryClasses.cpp:76</a></div></div>
<div class="ttc" id="GeometryClasses_8h_xhtml"><div class="ttname"><a href="GeometryClasses_8h.xhtml">GeometryClasses.h</a></div></div>
<div class="ttc" id="classVector3D_xhtml_abfb12ecb9c9beb88e095cc4a1a512d3c"><div class="ttname"><a href="classVector3D.xhtml#abfb12ecb9c9beb88e095cc4a1a512d3c">Vector3D::normalize</a></div><div class="ttdeci">void normalize()</div><div class="ttdoc">Normalisiert den Vektor. </div><div class="ttdef"><b>Definition:</b> <a href="GeometryClasses_8cpp_source.xhtml#l00106">GeometryClasses.cpp:106</a></div></div>
<div class="ttc" id="classVector3D_xhtml_a4bf1dcea68296f2f38f3574242933153"><div class="ttname"><a href="classVector3D.xhtml#a4bf1dcea68296f2f38f3574242933153">Vector3D::getAngleTo</a></div><div class="ttdeci">double getAngleTo(Vector3D *other)</div><div class="ttdoc">Gibt den Winkel zu einem anderen Vektor in RAD zurück. </div><div class="ttdef"><b>Definition:</b> <a href="GeometryClasses_8cpp_source.xhtml#l00064">GeometryClasses.cpp:64</a></div></div>
<div class="ttc" id="classTetrahedron_xhtml_add51e42ab17afbd023d47a436ce24b0d"><div class="ttname"><a href="classTetrahedron.xhtml#add51e42ab17afbd023d47a436ce24b0d">Tetrahedron::getV1</a></div><div class="ttdeci">Vector3D * getV1()</div><div class="ttdoc">Gibt eine Referenz auf den Ortsvektor zum 1. </div><div class="ttdef"><b>Definition:</b> <a href="GeometryClasses_8cpp_source.xhtml#l00295">GeometryClasses.cpp:295</a></div></div>
<div class="ttc" id="classTriangle_xhtml_a6de5f8560482f4130bdbb96b25aa1b58"><div class="ttname"><a href="classTriangle.xhtml#a6de5f8560482f4130bdbb96b25aa1b58">Triangle::getV2</a></div><div class="ttdeci">Vector3D * getV2()</div><div class="ttdoc">Gibt eine Referenz auf den Ortsvektor zum zweiten Punkt des Dreiecks zurück. </div><div class="ttdef"><b>Definition:</b> <a href="GeometryClasses_8cpp_source.xhtml#l00250">GeometryClasses.cpp:250</a></div></div>
<div class="ttc" id="classMatrix3D_xhtml_a0d59cb6ea927264477a10b9d427966d6"><div class="ttname"><a href="classMatrix3D.xhtml#a0d59cb6ea927264477a10b9d427966d6">Matrix3D::transpose</a></div><div class="ttdeci">void transpose()</div><div class="ttdoc">Transponiert die Matrix. </div><div class="ttdef"><b>Definition:</b> <a href="GeometryClasses_8cpp_source.xhtml#l00218">GeometryClasses.cpp:218</a></div></div>
<div class="ttc" id="classMatrix3D_xhtml_afe9c6b7abe858fe9f6aea8f0607a00a7"><div class="ttname"><a href="classMatrix3D.xhtml#afe9c6b7abe858fe9f6aea8f0607a00a7">Matrix3D::Matrix3D</a></div><div class="ttdeci">Matrix3D()</div><div class="ttdoc">Der Standardkonstruktor. </div><div class="ttdef"><b>Definition:</b> <a href="GeometryClasses_8cpp_source.xhtml#l00141">GeometryClasses.cpp:141</a></div></div>
<div class="ttc" id="classVector3D_xhtml_a89aeff2092d6a954cd449aca97c59197"><div class="ttname"><a href="classVector3D.xhtml#a89aeff2092d6a954cd449aca97c59197">Vector3D::getXYZ</a></div><div class="ttdeci">double * getXYZ()</div><div class="ttdoc">Gibt eine Referenz auf die Vektorelemente zurück (Vor allem zur Übergabe an OpenGL verwendet)...</div><div class="ttdef"><b>Definition:</b> <a href="GeometryClasses_8cpp_source.xhtml#l00113">GeometryClasses.cpp:113</a></div></div>
<div class="ttc" id="classVector3D_xhtml_abd851542da40b1168edcad11fa83b7c2"><div class="ttname"><a href="classVector3D.xhtml#abd851542da40b1168edcad11fa83b7c2">Vector3D::Vector3D</a></div><div class="ttdeci">Vector3D(double x, double y, double z)</div><div class="ttdoc">Konstruktor für Konstruktion aus einzelnen Koordinaten. </div><div class="ttdef"><b>Definition:</b> <a href="GeometryClasses_8cpp_source.xhtml#l00019">GeometryClasses.cpp:19</a></div></div>
<div class="ttc" id="classVector3D_xhtml"><div class="ttname"><a href="classVector3D.xhtml">Vector3D</a></div><div class="ttdoc">3D-Vektorklasse mit nützlichen Operationen. </div><div class="ttdef"><b>Definition:</b> <a href="GeometryClasses_8h_source.xhtml#l00013">GeometryClasses.h:13</a></div></div>
<div class="ttc" id="classVector3D_xhtml_a482cd77ce44ea7dd71fd7a43cb7b1cf5"><div class="ttname"><a href="classVector3D.xhtml#a482cd77ce44ea7dd71fd7a43cb7b1cf5">Vector3D::crossProduct</a></div><div class="ttdeci">Vector3D * crossProduct(Vector3D *other)</div><div class="ttdoc">Gibt das Kreuzprodukt mit einem anderen Vektor zurück. </div><div class="ttdef"><b>Definition:</b> <a href="GeometryClasses_8cpp_source.xhtml#l00081">GeometryClasses.cpp:81</a></div></div>
<div class="ttc" id="classTriangle_xhtml_aa25e2e56ac291e4366474fcbdcc6901b"><div class="ttname"><a href="classTriangle.xhtml#aa25e2e56ac291e4366474fcbdcc6901b">Triangle::Triangle</a></div><div class="ttdeci">Triangle(Vector3D *v1, Vector3D *v2, Vector3D *v3)</div><div class="ttdoc">Der Konstruktor. </div><div class="ttdef"><b>Definition:</b> <a href="GeometryClasses_8cpp_source.xhtml#l00240">GeometryClasses.cpp:240</a></div></div>
<div class="ttc" id="CLGL__test_2ParticleSystem_8h_xhtml_ac3e04ab93bb7f4e1e62ac7311bf75293"><div class="ttname"><a href="CLGL__test_2ParticleSystem_8h.xhtml#ac3e04ab93bb7f4e1e62ac7311bf75293">v3</a></div><div class="ttdeci">cl_float v3</div><div class="ttdef"><b>Definition:</b> <a href="CLGL__test_2ParticleSystem_8h_source.xhtml#l00039">ParticleSystem.h:39</a></div></div>
<div class="ttc" id="CLGL__test_2ParticleSystem_8h_xhtml_aadda57ca88b1f7b495ff17bc402bb584"><div class="ttname"><a href="CLGL__test_2ParticleSystem_8h.xhtml#aadda57ca88b1f7b495ff17bc402bb584">v2</a></div><div class="ttdeci">cl_float v2</div><div class="ttdef"><b>Definition:</b> <a href="CLGL__test_2ParticleSystem_8h_source.xhtml#l00038">ParticleSystem.h:38</a></div></div>
<div class="ttc" id="classTriangle_xhtml_a792a627dc42adad87c0b30e16a6b5824"><div class="ttname"><a href="classTriangle.xhtml#a792a627dc42adad87c0b30e16a6b5824">Triangle::getV3</a></div><div class="ttdeci">Vector3D * getV3()</div><div class="ttdoc">Gibt eine Referenz auf den Ortsvektor zum dritten Punkt des Dreiecks zurück. </div><div class="ttdef"><b>Definition:</b> <a href="GeometryClasses_8cpp_source.xhtml#l00254">GeometryClasses.cpp:254</a></div></div>
<div class="ttc" id="classTriangle_xhtml_abc3785b96e03fde1b5f594f8ed6afabb"><div class="ttname"><a href="classTriangle.xhtml#abc3785b96e03fde1b5f594f8ed6afabb">Triangle::print</a></div><div class="ttdeci">void print()</div><div class="ttdoc">Gibt die Punkte des Dreiecks auf dem cout-Stream aus. </div><div class="ttdef"><b>Definition:</b> <a href="GeometryClasses_8cpp_source.xhtml#l00274">GeometryClasses.cpp:274</a></div></div>
<div class="ttc" id="classTriangle_xhtml_a5199760a17454f4dc94c855a57e3a152"><div class="ttname"><a href="classTriangle.xhtml#a5199760a17454f4dc94c855a57e3a152">Triangle::~Triangle</a></div><div class="ttdeci">~Triangle()</div><div class="ttdoc">Der Destruktor. </div><div class="ttdef"><b>Definition:</b> <a href="GeometryClasses_8cpp_source.xhtml#l00283">GeometryClasses.cpp:283</a></div></div>
<div class="ttc" id="classVector3D_xhtml_a3dec11494c99de7370e3877054c3ef13"><div class="ttname"><a href="classVector3D.xhtml#a3dec11494c99de7370e3877054c3ef13">Vector3D::mult</a></div><div class="ttdeci">void mult(double scalar)</div><div class="ttdoc">Multipliziert den Vektor mit einem Skalar. </div><div class="ttdef"><b>Definition:</b> <a href="GeometryClasses_8cpp_source.xhtml#l00100">GeometryClasses.cpp:100</a></div></div>
<div class="ttc" id="classVector3D_xhtml_ae4fde5759270bf5bcf615f12f0823a8c"><div class="ttname"><a href="classVector3D.xhtml#ae4fde5759270bf5bcf615f12f0823a8c">Vector3D::~Vector3D</a></div><div class="ttdeci">virtual ~Vector3D()</div><div class="ttdoc">Der Destruktor. </div><div class="ttdef"><b>Definition:</b> <a href="GeometryClasses_8cpp_source.xhtml#l00137">GeometryClasses.cpp:137</a></div></div>
<div class="ttc" id="classTetrahedron_xhtml_aa539a97f133ea621520121acb2ef4a7e"><div class="ttname"><a href="classTetrahedron.xhtml#aa539a97f133ea621520121acb2ef4a7e">Tetrahedron::getV3</a></div><div class="ttdeci">Vector3D * getV3()</div><div class="ttdoc">Gibt eine Referenz auf den Ortsvektor zum 3. </div><div class="ttdef"><b>Definition:</b> <a href="GeometryClasses_8cpp_source.xhtml#l00303">GeometryClasses.cpp:303</a></div></div>
<div class="ttc" id="classVector3D_xhtml_a46dd0d9a849809a3857783102959e788"><div class="ttname"><a href="classVector3D.xhtml#a46dd0d9a849809a3857783102959e788">Vector3D::copy</a></div><div class="ttdeci">Vector3D * copy()</div><div class="ttdoc">Gibt eine Kopie des Vektors zurück. </div><div class="ttdef"><b>Definition:</b> <a href="GeometryClasses_8cpp_source.xhtml#l00037">GeometryClasses.cpp:37</a></div></div>
<div class="ttc" id="classTetrahedron_xhtml_aa728c967f17e2b8408009b5f2b77a17a"><div class="ttname"><a href="classTetrahedron.xhtml#aa728c967f17e2b8408009b5f2b77a17a">Tetrahedron::getV2</a></div><div class="ttdeci">Vector3D * getV2()</div><div class="ttdoc">Gibt eine Referenz auf den Ortsvektor zum 2. </div><div class="ttdef"><b>Definition:</b> <a href="GeometryClasses_8cpp_source.xhtml#l00299">GeometryClasses.cpp:299</a></div></div>
<div class="ttc" id="classMatrix3D_xhtml"><div class="ttname"><a href="classMatrix3D.xhtml">Matrix3D</a></div><div class="ttdoc">3x3-Matrixklasse mit Operationen. </div><div class="ttdef"><b>Definition:</b> <a href="GeometryClasses_8h_source.xhtml#l00151">GeometryClasses.h:151</a></div></div>
<div class="ttc" id="GeometryClasses_8cpp_xhtml_a73527f20206c906e9f333e0f233de13e"><div class="ttname"><a href="GeometryClasses_8cpp.xhtml#a73527f20206c906e9f333e0f233de13e">sqr</a></div><div class="ttdeci">double sqr(double v)</div><div class="ttdef"><b>Definition:</b> <a href="GeometryClasses_8cpp_source.xhtml#l00014">GeometryClasses.cpp:14</a></div></div>
<div class="ttc" id="CLGL__test_2ParticleSystem_8h_xhtml_ad60e6e73dfb663d917feb7ea4b95eab8"><div class="ttname"><a href="CLGL__test_2ParticleSystem_8h.xhtml#ad60e6e73dfb663d917feb7ea4b95eab8">z</a></div><div class="ttdeci">cl_float z</div><div class="ttdef"><b>Definition:</b> <a href="CLGL__test_2ParticleSystem_8h_source.xhtml#l00035">ParticleSystem.h:35</a></div></div>
<div class="ttc" id="classTetrahedron_xhtml_a84e19dba5735a455269abca8229b4bb4"><div class="ttname"><a href="classTetrahedron.xhtml#a84e19dba5735a455269abca8229b4bb4">Tetrahedron::Tetrahedron</a></div><div class="ttdeci">Tetrahedron(Vector3D *v1, Vector3D *v2, Vector3D *v3, Vector3D *v4)</div><div class="ttdoc">Der Konstruktor. </div><div class="ttdef"><b>Definition:</b> <a href="GeometryClasses_8cpp_source.xhtml#l00287">GeometryClasses.cpp:287</a></div></div>
<div class="ttc" id="classVector3D_xhtml_a2e3aa1d244483abcb1a8e48e47e79512"><div class="ttname"><a href="classVector3D.xhtml#a2e3aa1d244483abcb1a8e48e47e79512">Vector3D::getLength</a></div><div class="ttdeci">double getLength()</div><div class="ttdoc">Gibt die Länge des Vektors zurück. </div><div class="ttdef"><b>Definition:</b> <a href="GeometryClasses_8cpp_source.xhtml#l00060">GeometryClasses.cpp:60</a></div></div>
<div class="ttc" id="classVector3D_xhtml_aa3ffff17b886274a58417dfe4bb4c4a2"><div class="ttname"><a href="classVector3D.xhtml#aa3ffff17b886274a58417dfe4bb4c4a2">Vector3D::getY</a></div><div class="ttdeci">double getY()</div><div class="ttdoc">Gibt das Y-Element des Vektors zurück. </div><div class="ttdef"><b>Definition:</b> <a href="GeometryClasses_8cpp_source.xhtml#l00052">GeometryClasses.cpp:52</a></div></div>
<div class="ttc" id="classVector3D_xhtml_a42deb992ec2f44abfb5824ea4917135c"><div class="ttname"><a href="classVector3D.xhtml#a42deb992ec2f44abfb5824ea4917135c">Vector3D::getDistanceTo</a></div><div class="ttdeci">double getDistanceTo(Vector3D *other)</div><div class="ttdoc">Gibt den Abstand zu einem anderen Vektor zurück. </div><div class="ttdef"><b>Definition:</b> <a href="GeometryClasses_8cpp_source.xhtml#l00117">GeometryClasses.cpp:117</a></div></div>
<div class="ttc" id="classVector3D_xhtml_a0d14ff1f789254ff90adc22628eb8347"><div class="ttname"><a href="classVector3D.xhtml#a0d14ff1f789254ff90adc22628eb8347">Vector3D::add</a></div><div class="ttdeci">void add(Vector3D *other)</div><div class="ttdoc">Addiert einen Vektor zu diesem Vektor. </div><div class="ttdef"><b>Definition:</b> <a href="GeometryClasses_8cpp_source.xhtml#l00088">GeometryClasses.cpp:88</a></div></div>
<div class="ttc" id="CLGL__test_2ParticleSystem_8h_xhtml_a601d75fa74098fd47a857d5afddb6830"><div class="ttname"><a href="CLGL__test_2ParticleSystem_8h.xhtml#a601d75fa74098fd47a857d5afddb6830">v4</a></div><div class="ttdeci">cl_float v4</div><div class="ttdef"><b>Definition:</b> <a href="CLGL__test_2ParticleSystem_8h_source.xhtml#l00040">ParticleSystem.h:40</a></div></div>
<div class="ttc" id="classTriangle_xhtml_a3c72b19f316fa9ffb0a2f206e3558790"><div class="ttname"><a href="classTriangle.xhtml#a3c72b19f316fa9ffb0a2f206e3558790">Triangle::getNormal</a></div><div class="ttdeci">Vector3D * getNormal()</div><div class="ttdoc">Gibt die Normale des Dreiecks zurück. </div><div class="ttdef"><b>Definition:</b> <a href="GeometryClasses_8cpp_source.xhtml#l00262">GeometryClasses.cpp:262</a></div></div>
</div><!-- fragment --></div><!-- contents -->
<!-- start footer part -->
<hr class="footer"/><address class="footer"><small>
Erzeugt am Fre Aug 29 2014 16:36:14 für Simple Analyzer von &#160;<a href="http://www.doxygen.org/index.html">
<img class="footer" src="doxygen.png" alt="doxygen"/>
</a> 1.8.6
</small></address>
</body>
</html>
