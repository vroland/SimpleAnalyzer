<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.4"/>
<title>Simple Analyzer: odisitosd/main.cpp Quellcode</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/javascript">
  $(document).ready(function() { searchBox.OnSelectItem(0); });
</script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="doc_icon.png"/></td>
  <td style="padding-left: 0.5em;">
   <div id="projectname">Simple Analyzer
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Erzeugt von Doxygen 1.8.4 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Suchen');
</script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.xhtml"><span>Hauptseite</span></a></li>
      <li><a href="pages.xhtml"><span>Zusätzliche&#160;Informationen</span></a></li>
      <li><a href="namespaces.xhtml"><span>Namensbereiche</span></a></li>
      <li><a href="annotated.xhtml"><span>Klassen</span></a></li>
      <li class="current"><a href="files.xhtml"><span>Dateien</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Suchen" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="files.xhtml"><span>Auflistung&#160;der&#160;Dateien</span></a></li>
      <li><a href="globals.xhtml"><span>Datei-Elemente</span></a></li>
    </ul>
  </div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
<a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(0)"><span class="SelectionMark">&#160;</span>Alle</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(1)"><span class="SelectionMark">&#160;</span>Klassen</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(2)"><span class="SelectionMark">&#160;</span>Namensbereiche</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(3)"><span class="SelectionMark">&#160;</span>Dateien</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(4)"><span class="SelectionMark">&#160;</span>Funktionen</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(5)"><span class="SelectionMark">&#160;</span>Variablen</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(6)"><span class="SelectionMark">&#160;</span>Aufzählungen</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(7)"><span class="SelectionMark">&#160;</span>Aufzählungswerte</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(8)"><span class="SelectionMark">&#160;</span>Freundbeziehungen</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(9)"><span class="SelectionMark">&#160;</span>Makrodefinitionen</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(10)"><span class="SelectionMark">&#160;</span>Seiten</a></div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="dir_4cc256ad5405ca5eca6fc95e08690148.xhtml">odisitosd</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="headertitle">
<div class="title">main.cpp</div>  </div>
</div><!--header-->
<div class="contents">
<a href="odisitosd_2main_8cpp.xhtml">gehe zur Dokumentation dieser Datei</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="comment">/*</span></div>
<div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="comment"> * main.cpp</span></div>
<div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="comment"> *  Created on: 26.10.2013</span></div>
<div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="comment"> *      Author: valentin</span></div>
<div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="comment"> */</span></div>
<div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="preprocessor">#include &lt;stdio.h&gt;</span></div>
<div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="preprocessor">#include &lt;iostream&gt;</span></div>
<div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;<span class="preprocessor">#include &lt;fstream&gt;</span></div>
<div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;<span class="preprocessor">#include &lt;vector&gt;</span></div>
<div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;<span class="preprocessor">#include &lt;cmath&gt;</span></div>
<div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;<span class="preprocessor">#include &lt;algorithm&gt;</span></div>
<div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;<span class="preprocessor">#include &lt;sstream&gt;</span></div>
<div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;</div>
<div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;<span class="keyword">using namespace </span>std;</div>
<div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;</div>
<div class="line"><a name="l00022"></a><span class="lineno"><a class="code" href="namespaceODiSIToSD.xhtml">   22</a></span>&#160;<span class="keyword">namespace </span>ODiSIToSD {</div>
<div class="line"><a name="l00026"></a><span class="lineno"><a class="code" href="namespaceODiSIToSD.xhtml#ae626f83adecae71a9227d63ff6c46d82">   26</a></span>&#160;    <span class="keyword">const</span> <span class="keywordtype">int</span> <a class="code" href="GUIMainWindow_8cpp.xhtml#aff607d5c40608f36a3e32da21875856e">NUMBEROFPATHS</a> = 2;</div>
<div class="line"><a name="l00031"></a><span class="lineno"><a class="code" href="namespaceODiSIToSD.xhtml#a4de5655bcf7e6e49c30d561521172f7a">   31</a></span>&#160;    <span class="keywordtype">string</span> <a class="code" href="namespaceCSVToSD.xhtml#ad67595c16b599d615449d991630e288d" title="Suchpfade für die Konfigurationsdatei. ">configpaths</a>[<a class="code" href="GUIMainWindow_8cpp.xhtml#aff607d5c40608f36a3e32da21875856e">NUMBEROFPATHS</a>] {</div>
<div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;        <span class="stringliteral">&quot;/usr/local/share/simpleanalyzer/odisitosd.conf&quot;</span>,</div>
<div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;        <span class="stringliteral">&quot;/usr/share/simpleanalyzer/odisitosd.conf&quot;</span></div>
<div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;    };</div>
<div class="line"><a name="l00038"></a><span class="lineno"><a class="code" href="structODiSIToSD_1_1Options.xhtml">   38</a></span>&#160;    <span class="keyword">struct </span><a class="code" href="structODiSIToSD_1_1Options.xhtml" title="Strunktur für die Programmeinstellungen. ">Options</a> {</div>
<div class="line"><a name="l00039"></a><span class="lineno"><a class="code" href="structODiSIToSD_1_1Options.xhtml#ac5138441572e68637dee8052f3c97240">   39</a></span>&#160;        <span class="keywordtype">size_t</span> <a class="code" href="structODiSIToSD_1_1Options.xhtml#ac5138441572e68637dee8052f3c97240" title="Index der ersten Zeile in der Odisi-Datei, die Sensordaten enthält. ">startrow</a>;                </div>
<div class="line"><a name="l00040"></a><span class="lineno"><a class="code" href="structODiSIToSD_1_1Options.xhtml#a5621362ac3b707242893629db592f994">   40</a></span>&#160;        <span class="keywordtype">char</span> <a class="code" href="structODiSIToSD_1_1Options.xhtml#a5621362ac3b707242893629db592f994" title="Das verwendete Separatorzeichen. ">separator</a>;                 </div>
<div class="line"><a name="l00041"></a><span class="lineno"><a class="code" href="structODiSIToSD_1_1Options.xhtml#a5a14dc70f56c2ba965fc1af42a903c17">   41</a></span>&#160;        <span class="keywordtype">bool</span> <a class="code" href="structODiSIToSD_1_1Options.xhtml#a5a14dc70f56c2ba965fc1af42a903c17" title="Sollen Kommata durch Punkte ersetzt werrden? ">replace_comma_with_point</a>;  </div>
<div class="line"><a name="l00042"></a><span class="lineno"><a class="code" href="structODiSIToSD_1_1Options.xhtml#a63e45d6a87805ab4bfe9582e37f6c999">   42</a></span>&#160;        <span class="keywordtype">size_t</span> <a class="code" href="structODiSIToSD_1_1Options.xhtml#a63e45d6a87805ab4bfe9582e37f6c999" title="Index der Spalte, die die Zeitstempel enthält. ">timecol</a>;                 </div>
<div class="line"><a name="l00043"></a><span class="lineno"><a class="code" href="structODiSIToSD_1_1Options.xhtml#a3df2be923e13ab5f3727bd7975a5c37c">   43</a></span>&#160;        <span class="keywordtype">float</span> <a class="code" href="structODiSIToSD_1_1Options.xhtml#a3df2be923e13ab5f3727bd7975a5c37c" title="Maximal zulässige Differenz zum Vorgängerwert für einen gültigen Messwert bei der Fehlerkorrektur...">error_threshold</a>;          </div>
<div class="line"><a name="l00044"></a><span class="lineno"><a class="code" href="structODiSIToSD_1_1Options.xhtml#a03f0d8cd1ad0cbcaf9f3cee8ca6d536f">   44</a></span>&#160;        <span class="keywordtype">int</span> <a class="code" href="structODiSIToSD_1_1Options.xhtml#a03f0d8cd1ad0cbcaf9f3cee8ca6d536f" title="Maximale Schrittanzahl zum finden eines gültigen Messwertes bei der Fehlerkorrektur. ">maxfwcount</a>;                 </div>
<div class="line"><a name="l00045"></a><span class="lineno"><a class="code" href="structODiSIToSD_1_1Options.xhtml#a6c1e796c1c96e350f7f01982ccc2b32f">   45</a></span>&#160;        <span class="keywordtype">int</span> <a class="code" href="structODiSIToSD_1_1Options.xhtml#a6c1e796c1c96e350f7f01982ccc2b32f" title="Anzahl der Leerzeichen für TAB (Für die Positionsangabe in der Log-Datei). ">tab_space_count</a>;            </div>
<div class="line"><a name="l00046"></a><span class="lineno"><a class="code" href="structODiSIToSD_1_1Options.xhtml#af91210949f20d204dfea863766b53f9f">   46</a></span>&#160;        <span class="keywordtype">float</span> <a class="code" href="structODiSIToSD_1_1Options.xhtml#af91210949f20d204dfea863766b53f9f" title="Höhe der Faserebene in . ">height</a>;                   </div>
<div class="line"><a name="l00047"></a><span class="lineno"><a class="code" href="structODiSIToSD_1_1Options.xhtml#a6fd0fff59f304ba9e8aee6a7c44a148a">   47</a></span>&#160;        <span class="keywordtype">float</span> <a class="code" href="structODiSIToSD_1_1Options.xhtml#a6fd0fff59f304ba9e8aee6a7c44a148a" title="Temperatur zu Beginn des Versuches (Die Odisi-Daten sind Differenzen zu dieser Anfangstemperatur). ">basetemp</a>;                 </div>
<div class="line"><a name="l00048"></a><span class="lineno"><a class="code" href="structODiSIToSD_1_1Options.xhtml#a3819b09fef274e4cbc06b52f9d70e493">   48</a></span>&#160;        <span class="keywordtype">float</span> <a class="code" href="structODiSIToSD_1_1Options.xhtml#a3819b09fef274e4cbc06b52f9d70e493" title="Position der Messwerte auf der X-Achse um diesen Wert verschieben. ">objwidth</a>;                 </div>
<div class="line"><a name="l00049"></a><span class="lineno"><a class="code" href="structODiSIToSD_1_1Options.xhtml#a014d92516c1c3abe5b482cdb648a1607">   49</a></span>&#160;        <span class="keywordtype">bool</span> <a class="code" href="structODiSIToSD_1_1Options.xhtml#a014d92516c1c3abe5b482cdb648a1607" title="Position auf der X-Achse spiegeln? ">flipobj</a>;                   </div>
<div class="line"><a name="l00050"></a><span class="lineno"><a class="code" href="structODiSIToSD_1_1Options.xhtml#a2759019ee4388dfaa5ec36f4530c7281">   50</a></span>&#160;        <span class="keywordtype">int</span> <a class="code" href="structODiSIToSD_1_1Options.xhtml#a2759019ee4388dfaa5ec36f4530c7281" title="Schrittweite beim Auslesen der Sensordaten (nur jeder fiber_step_delta Messpunkt auf der Faser wird v...">fiber_step_delta</a>;           </div>
<div class="line"><a name="l00051"></a><span class="lineno"><a class="code" href="structODiSIToSD_1_1Options.xhtml#a57e4e92fe940038d939143626301a61d">   51</a></span>&#160;        <span class="keywordtype">int</span> <a class="code" href="structODiSIToSD_1_1Options.xhtml#a57e4e92fe940038d939143626301a61d" title="Schrittweite beim Auslesen der Sensordaten (nur jeder time_step_delta Zeitpunkt wird verwendet)...">time_step_delta</a>;            </div>
<div class="line"><a name="l00052"></a><span class="lineno"><a class="code" href="structODiSIToSD_1_1Options.xhtml#a43185fa84affbd5e878ea336e15e1038">   52</a></span>&#160;        <span class="keywordtype">double</span> <a class="code" href="structODiSIToSD_1_1Options.xhtml#a43185fa84affbd5e878ea336e15e1038" title="Nur bis maximal zu diesem Zeitstempel auslesen. ">max_time</a>;                </div>
<div class="line"><a name="l00053"></a><span class="lineno"><a class="code" href="structODiSIToSD_1_1Options.xhtml#a2cf09094e48b7f721d5b4985fdf8bcf4">   53</a></span>&#160;        <span class="keywordtype">double</span> <a class="code" href="structODiSIToSD_1_1Options.xhtml#a2cf09094e48b7f721d5b4985fdf8bcf4" title="Ab diesem Zeitstempel auslesen. ">min_time</a>;                </div>
<div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;    } <a class="code" href="namespaceCSVToSD.xhtml#a16dddcd8b3566666b93a413bbfec206e" title="Hält die verwendeten Programmeinstellungen. ">opts</a>;     </div>
<div class="line"><a name="l00061"></a><span class="lineno"><a class="code" href="namespaceODiSIToSD.xhtml#a0196aa9f8fa3ef1c56432305918c6129">   61</a></span>&#160;    <span class="keywordtype">bool</span> <a class="code" href="namespaceCSVToSD.xhtml#a268ecb11b27ccafb712296ea053c7869" title="Testet, ob sich ein String in einer Liste von Strings befindet. ">contains</a>( std::vector&lt;string&gt;&amp; Vec, <span class="keyword">const</span> <span class="keywordtype">string</span>&amp; Element )</div>
<div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;    {</div>
<div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;        <span class="keywordflow">if</span> (<a class="code" href="namespaceODiSIToSD.xhtml#a2978e21c2e0b6ff70786de2d92aed3ee" title="Gibt die Position des ersten Vorkommens eines Zeichens in einem String zurück. ">find</a>(Vec.begin(), Vec.end(), Element) != Vec.end())</div>
<div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;            <span class="keywordflow">return</span> <span class="keyword">true</span>;</div>
<div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;</div>
<div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;        <span class="keywordflow">return</span> <span class="keyword">false</span>;</div>
<div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;    }</div>
<div class="line"><a name="l00074"></a><span class="lineno"><a class="code" href="namespaceODiSIToSD.xhtml#adc00a4a6a36292e9dbe72a2d9eb7d447">   74</a></span>&#160;    <span class="keywordtype">bool</span> <a class="code" href="namespaceCSVToSD.xhtml#a268ecb11b27ccafb712296ea053c7869" title="Testet, ob sich ein String in einer Liste von Strings befindet. ">contains</a>( std::vector&lt;int&gt;&amp; Vec, <span class="keyword">const</span> <span class="keywordtype">int</span>&amp; Element )</div>
<div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;    {</div>
<div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;        <span class="keywordflow">if</span> (<a class="code" href="namespaceODiSIToSD.xhtml#a2978e21c2e0b6ff70786de2d92aed3ee" title="Gibt die Position des ersten Vorkommens eines Zeichens in einem String zurück. ">find</a>(Vec.begin(), Vec.end(), Element) != Vec.end())</div>
<div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;            <span class="keywordflow">return</span> <span class="keyword">true</span>;</div>
<div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;</div>
<div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;        <span class="keywordflow">return</span> <span class="keyword">false</span>;</div>
<div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;    }</div>
<div class="line"><a name="l00087"></a><span class="lineno"><a class="code" href="namespaceODiSIToSD.xhtml#ac5bc435a72dccec2fc50bb187298f0e8">   87</a></span>&#160;    <span class="keywordtype">void</span> <a class="code" href="namespaceCSVToSD.xhtml#a4f125d9c8df307d21dbb5363f6422b4d" title="Ersetzt in einem String alle Vorkommen eines Teilstrings durch einen Anderen. ">replaceAll</a>(<span class="keywordtype">string</span> &amp;str, <span class="keyword">const</span> <span class="keywordtype">string</span> &amp;from, <span class="keyword">const</span> <span class="keywordtype">string</span> &amp;to) {</div>
<div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;        <span class="keywordtype">size_t</span> start_pos = 0;</div>
<div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;        <span class="keywordflow">while</span>((start_pos = str.find(from, start_pos)) != string::npos) {</div>
<div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;            str.replace(start_pos, from.length(), to);</div>
<div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;            start_pos += to.length();</div>
<div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;        }</div>
<div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;    }</div>
<div class="line"><a name="l00100"></a><span class="lineno"><a class="code" href="namespaceODiSIToSD.xhtml#a2978e21c2e0b6ff70786de2d92aed3ee">  100</a></span>&#160;    <span class="keywordtype">int</span> <a class="code" href="namespaceODiSIToSD.xhtml#a2978e21c2e0b6ff70786de2d92aed3ee" title="Gibt die Position des ersten Vorkommens eines Zeichens in einem String zurück. ">find</a>(<span class="keywordtype">string</span> str,<span class="keywordtype">char</span> chr) {</div>
<div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;        <span class="keywordflow">for</span> (<span class="keywordtype">int</span> i=0;i&lt;int(str.length());i++) {</div>
<div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;            <span class="keywordflow">if</span> (str.at(i)==chr) {</div>
<div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;                <span class="keywordflow">return</span> i;</div>
<div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;            }</div>
<div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;        }</div>
<div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;        <span class="keywordflow">return</span> -1;</div>
<div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;    }</div>
<div class="line"><a name="l00113"></a><span class="lineno"><a class="code" href="namespaceODiSIToSD.xhtml#af546c680cd566e162094b910dfa03452">  113</a></span>&#160;    <span class="keywordtype">string</span> <a class="code" href="GUIMainWindow_8cpp.xhtml#a89d68f162c2f49e41ac9d9185309c502">floattostr</a>(<span class="keywordtype">float</span> val) {</div>
<div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;        ostringstream ss;</div>
<div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;        ss &lt;&lt; val;</div>
<div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;        <span class="keywordflow">return</span> ss.str();</div>
<div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;    }</div>
<div class="line"><a name="l00124"></a><span class="lineno"><a class="code" href="namespaceODiSIToSD.xhtml#a60fe9a380b9b9f2e401ae0aca1f6b87a">  124</a></span>&#160;    <span class="keywordtype">string</span> <a class="code" href="Importer_8cpp.xhtml#a0dd0686c00e64af27b47b4c16399d747">getTextBlock</a>(<span class="keywordtype">string</span> data,<span class="keywordtype">int</span> n) { <span class="comment">//Gibt den n-ten durch Leerzeichen abgetrennten Block zurück</span></div>
<div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;        <span class="keywordtype">int</span> pos = 0;</div>
<div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;        <span class="keywordtype">int</span> prevPos = 0;</div>
<div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;        <span class="keywordtype">size_t</span> curPos = 0;</div>
<div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;        curPos = data.find(<span class="stringliteral">&quot; &quot;</span>);</div>
<div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;        <span class="keywordflow">if</span> (curPos==data.npos) {</div>
<div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;            <span class="keywordflow">return</span> <span class="stringliteral">&quot;&quot;</span>;</div>
<div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;        }</div>
<div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;        pos = curPos;</div>
<div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;        <span class="keywordflow">for</span> (<span class="keywordtype">int</span> i=0;i&lt;n;i++) {</div>
<div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;            curPos = data.find(<span class="stringliteral">&quot; &quot;</span>,pos+1);</div>
<div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;            <span class="keywordflow">if</span> (curPos==data.npos) {</div>
<div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;                <span class="keywordflow">if</span> (n-i&gt;1) {    <span class="comment">//Mehr Blöcke als vorhanden nachgefragt</span></div>
<div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;                    <span class="keywordflow">return</span> <span class="stringliteral">&quot;&quot;</span>;</div>
<div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;                } <span class="keywordflow">else</span> {</div>
<div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;                    prevPos = pos+1;</div>
<div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;                    pos = data.size();</div>
<div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;                    <span class="keywordflow">break</span>;</div>
<div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;                }</div>
<div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;            }</div>
<div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;            prevPos = pos+1;</div>
<div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;            pos = curPos;</div>
<div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;</div>
<div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;        }</div>
<div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;        <span class="keywordflow">return</span> data.substr(prevPos,pos-(prevPos));</div>
<div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;    }</div>
<div class="line"><a name="l00160"></a><span class="lineno"><a class="code" href="namespaceODiSIToSD.xhtml#a6b06d3f5276bc29ae627f6019ce4bdc3">  160</a></span>&#160;    <span class="keywordtype">void</span> <a class="code" href="namespaceCSVToSD.xhtml#a2e2e7a5141b8cf519db3c37c9b2cc410" title="Sammelt Daten aus einer Textzeile (string). ">parseLine</a>(<span class="keywordtype">string</span> line,vector&lt;float&gt;* out,vector&lt;float&gt;* times,vector&lt;int&gt;* debug_positions,<span class="keywordtype">size_t</span> row_count) {</div>
<div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160;        <span class="keywordtype">string</span> workstr;</div>
<div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160;        <span class="keywordflow">if</span> (row_count==<a class="code" href="namespaceCSVToSD.xhtml#a16dddcd8b3566666b93a413bbfec206e" title="Hält die verwendeten Programmeinstellungen. ">opts</a>.startrow) {</div>
<div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160;            <span class="keywordtype">int</span> pos = <a class="code" href="namespaceODiSIToSD.xhtml#a2978e21c2e0b6ff70786de2d92aed3ee" title="Gibt die Position des ersten Vorkommens eines Zeichens in einem String zurück. ">find</a>(line,<span class="charliteral">&#39;\t&#39;</span>);</div>
<div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160;            workstr = line.substr(pos+1,line.length()-pos-1);</div>
<div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160;        } <span class="keywordflow">else</span> {</div>
<div class="line"><a name="l00166"></a><span class="lineno">  166</span>&#160;            workstr = line.substr(0,line.length());</div>
<div class="line"><a name="l00167"></a><span class="lineno">  167</span>&#160;        }</div>
<div class="line"><a name="l00168"></a><span class="lineno">  168</span>&#160;        out-&gt;clear();</div>
<div class="line"><a name="l00169"></a><span class="lineno">  169</span>&#160;        <span class="keywordtype">size_t</span> count = 0;</div>
<div class="line"><a name="l00170"></a><span class="lineno">  170</span>&#160;        <span class="keywordtype">string</span> tab_to_space = <span class="stringliteral">&quot;&quot;</span>;</div>
<div class="line"><a name="l00171"></a><span class="lineno">  171</span>&#160;        <span class="keywordflow">for</span> (<span class="keywordtype">int</span> i=0;i&lt;<a class="code" href="namespaceCSVToSD.xhtml#a16dddcd8b3566666b93a413bbfec206e" title="Hält die verwendeten Programmeinstellungen. ">opts</a>.tab_space_count;i++) {</div>
<div class="line"><a name="l00172"></a><span class="lineno">  172</span>&#160;            tab_to_space+=<span class="stringliteral">&quot; &quot;</span>;</div>
<div class="line"><a name="l00173"></a><span class="lineno">  173</span>&#160;        }</div>
<div class="line"><a name="l00174"></a><span class="lineno">  174</span>&#160;        <a class="code" href="namespaceCSVToSD.xhtml#a4f125d9c8df307d21dbb5363f6422b4d" title="Ersetzt in einem String alle Vorkommen eines Teilstrings durch einen Anderen. ">replaceAll</a>(workstr,<span class="stringliteral">&quot;\t&quot;</span>,tab_to_space);</div>
<div class="line"><a name="l00175"></a><span class="lineno">  175</span>&#160;        <span class="keywordtype">int</span> sep_pos = <a class="code" href="namespaceODiSIToSD.xhtml#a2978e21c2e0b6ff70786de2d92aed3ee" title="Gibt die Position des ersten Vorkommens eines Zeichens in einem String zurück. ">find</a>(workstr,<a class="code" href="namespaceCSVToSD.xhtml#a16dddcd8b3566666b93a413bbfec206e" title="Hält die verwendeten Programmeinstellungen. ">opts</a>.<a class="code" href="structCSVToSD_1_1Options.xhtml#afa7a79f38999d3c89f7ffa67f74bfbd4" title="Das verwendete Separatorzeichen. ">separator</a>);</div>
<div class="line"><a name="l00176"></a><span class="lineno">  176</span>&#160;        <span class="keywordtype">int</span> position = 0;</div>
<div class="line"><a name="l00177"></a><span class="lineno">  177</span>&#160;        <span class="keywordflow">while</span> (sep_pos&gt;-1) {</div>
<div class="line"><a name="l00178"></a><span class="lineno">  178</span>&#160;            <span class="keywordtype">string</span> substr;</div>
<div class="line"><a name="l00179"></a><span class="lineno">  179</span>&#160;            <span class="keywordflow">do</span> {</div>
<div class="line"><a name="l00180"></a><span class="lineno">  180</span>&#160;                sep_pos = <a class="code" href="namespaceODiSIToSD.xhtml#a2978e21c2e0b6ff70786de2d92aed3ee" title="Gibt die Position des ersten Vorkommens eines Zeichens in einem String zurück. ">find</a>(workstr,<a class="code" href="namespaceCSVToSD.xhtml#a16dddcd8b3566666b93a413bbfec206e" title="Hält die verwendeten Programmeinstellungen. ">opts</a>.<a class="code" href="structCSVToSD_1_1Options.xhtml#afa7a79f38999d3c89f7ffa67f74bfbd4" title="Das verwendete Separatorzeichen. ">separator</a>);</div>
<div class="line"><a name="l00181"></a><span class="lineno">  181</span>&#160;                substr= workstr.substr(0,sep_pos);</div>
<div class="line"><a name="l00182"></a><span class="lineno">  182</span>&#160;                <span class="keywordflow">if</span> (substr==<span class="stringliteral">&quot;&quot;</span>) {</div>
<div class="line"><a name="l00183"></a><span class="lineno">  183</span>&#160;                    position++;</div>
<div class="line"><a name="l00184"></a><span class="lineno">  184</span>&#160;                }</div>
<div class="line"><a name="l00185"></a><span class="lineno">  185</span>&#160;                workstr.erase(0,sep_pos+1);</div>
<div class="line"><a name="l00186"></a><span class="lineno">  186</span>&#160;            } <span class="keywordflow">while</span> (sep_pos==0);</div>
<div class="line"><a name="l00187"></a><span class="lineno">  187</span>&#160;            <span class="keywordflow">if</span> (row_count&gt;<a class="code" href="namespaceCSVToSD.xhtml#a16dddcd8b3566666b93a413bbfec206e" title="Hält die verwendeten Programmeinstellungen. ">opts</a>.startrow &amp;&amp; count&gt;<a class="code" href="namespaceCSVToSD.xhtml#a16dddcd8b3566666b93a413bbfec206e" title="Hält die verwendeten Programmeinstellungen. ">opts</a>.<a class="code" href="structCSVToSD_1_1Options.xhtml#a1ffaee2ce48d0c2b8db1eaca858cdbc0" title="Index der Spalte, die die Zeitstempel enthält. ">timecol</a>) {</div>
<div class="line"><a name="l00188"></a><span class="lineno">  188</span>&#160;                debug_positions-&gt;resize(debug_positions-&gt;size()+1,position+2);</div>
<div class="line"><a name="l00189"></a><span class="lineno">  189</span>&#160;                out-&gt;resize(out-&gt;size()+1,atof(substr.c_str()));</div>
<div class="line"><a name="l00190"></a><span class="lineno">  190</span>&#160;            }</div>
<div class="line"><a name="l00191"></a><span class="lineno">  191</span>&#160;            <span class="keywordflow">if</span> (count==<a class="code" href="namespaceCSVToSD.xhtml#a16dddcd8b3566666b93a413bbfec206e" title="Hält die verwendeten Programmeinstellungen. ">opts</a>.<a class="code" href="structCSVToSD_1_1Options.xhtml#a1ffaee2ce48d0c2b8db1eaca858cdbc0" title="Index der Spalte, die die Zeitstempel enthält. ">timecol</a> &amp;&amp; times!=NULL) {</div>
<div class="line"><a name="l00192"></a><span class="lineno">  192</span>&#160;                times-&gt;resize(times-&gt;size()+1,atof(substr.c_str()));</div>
<div class="line"><a name="l00193"></a><span class="lineno">  193</span>&#160;            }</div>
<div class="line"><a name="l00194"></a><span class="lineno">  194</span>&#160;            <span class="comment">// Auslesen der Faserpositionen</span></div>
<div class="line"><a name="l00195"></a><span class="lineno">  195</span>&#160;            <span class="keywordflow">if</span> (row_count==<a class="code" href="namespaceCSVToSD.xhtml#a16dddcd8b3566666b93a413bbfec206e" title="Hält die verwendeten Programmeinstellungen. ">opts</a>.startrow) {</div>
<div class="line"><a name="l00196"></a><span class="lineno">  196</span>&#160;                out-&gt;resize(out-&gt;size()+1,atof(substr.c_str()));</div>
<div class="line"><a name="l00197"></a><span class="lineno">  197</span>&#160;            }</div>
<div class="line"><a name="l00198"></a><span class="lineno">  198</span>&#160;            count++;</div>
<div class="line"><a name="l00199"></a><span class="lineno">  199</span>&#160;            position += sep_pos+1;</div>
<div class="line"><a name="l00200"></a><span class="lineno">  200</span>&#160;        }</div>
<div class="line"><a name="l00201"></a><span class="lineno">  201</span>&#160;    }</div>
<div class="line"><a name="l00209"></a><span class="lineno"><a class="code" href="namespaceODiSIToSD.xhtml#a09e74878b7f3b12c27afbb8ee902d9f8">  209</a></span>&#160;    <span class="keywordtype">int</span> <a class="code" href="namespaceCSVToSD.xhtml#ab24aaf410a1c332e2a84b42af50e5fd9" title="Liest die Programmargumente, die Konfiguration, die Sensordefinitionsdatei und die ...">convert</a>(<span class="keywordtype">int</span> argc, <span class="keywordtype">char</span> *argv[]) {</div>
<div class="line"><a name="l00210"></a><span class="lineno">  210</span>&#160;</div>
<div class="line"><a name="l00211"></a><span class="lineno">  211</span>&#160;        <a class="code" href="namespaceCSVToSD.xhtml#a16dddcd8b3566666b93a413bbfec206e" title="Hält die verwendeten Programmeinstellungen. ">opts</a>.startrow = 4;</div>
<div class="line"><a name="l00212"></a><span class="lineno">  212</span>&#160;        <a class="code" href="namespaceCSVToSD.xhtml#a16dddcd8b3566666b93a413bbfec206e" title="Hält die verwendeten Programmeinstellungen. ">opts</a>.<a class="code" href="structCSVToSD_1_1Options.xhtml#afa7a79f38999d3c89f7ffa67f74bfbd4" title="Das verwendete Separatorzeichen. ">separator</a> = <span class="charliteral">&#39; &#39;</span>;</div>
<div class="line"><a name="l00213"></a><span class="lineno">  213</span>&#160;        <a class="code" href="namespaceCSVToSD.xhtml#a16dddcd8b3566666b93a413bbfec206e" title="Hält die verwendeten Programmeinstellungen. ">opts</a>.<a class="code" href="structCSVToSD_1_1Options.xhtml#ab0204127a812664cc4bef7db1032ea99" title="Sollen Kommata durch Punkte ersetzt werrden? ">replace_comma_with_point</a> = <span class="keyword">true</span>;</div>
<div class="line"><a name="l00214"></a><span class="lineno">  214</span>&#160;        <a class="code" href="namespaceCSVToSD.xhtml#a16dddcd8b3566666b93a413bbfec206e" title="Hält die verwendeten Programmeinstellungen. ">opts</a>.<a class="code" href="structCSVToSD_1_1Options.xhtml#a1ffaee2ce48d0c2b8db1eaca858cdbc0" title="Index der Spalte, die die Zeitstempel enthält. ">timecol</a> = 0;</div>
<div class="line"><a name="l00215"></a><span class="lineno">  215</span>&#160;        <a class="code" href="namespaceCSVToSD.xhtml#a16dddcd8b3566666b93a413bbfec206e" title="Hält die verwendeten Programmeinstellungen. ">opts</a>.error_threshold = 5;</div>
<div class="line"><a name="l00216"></a><span class="lineno">  216</span>&#160;        <a class="code" href="namespaceCSVToSD.xhtml#a16dddcd8b3566666b93a413bbfec206e" title="Hält die verwendeten Programmeinstellungen. ">opts</a>.maxfwcount = 10;</div>
<div class="line"><a name="l00217"></a><span class="lineno">  217</span>&#160;        <a class="code" href="namespaceCSVToSD.xhtml#a16dddcd8b3566666b93a413bbfec206e" title="Hält die verwendeten Programmeinstellungen. ">opts</a>.tab_space_count = 8-1;</div>
<div class="line"><a name="l00218"></a><span class="lineno">  218</span>&#160;        <a class="code" href="namespaceCSVToSD.xhtml#a16dddcd8b3566666b93a413bbfec206e" title="Hält die verwendeten Programmeinstellungen. ">opts</a>.height = .0;</div>
<div class="line"><a name="l00219"></a><span class="lineno">  219</span>&#160;        <a class="code" href="namespaceCSVToSD.xhtml#a16dddcd8b3566666b93a413bbfec206e" title="Hält die verwendeten Programmeinstellungen. ">opts</a>.basetemp = 20;</div>
<div class="line"><a name="l00220"></a><span class="lineno">  220</span>&#160;        <a class="code" href="namespaceCSVToSD.xhtml#a16dddcd8b3566666b93a413bbfec206e" title="Hält die verwendeten Programmeinstellungen. ">opts</a>.objwidth = .5;</div>
<div class="line"><a name="l00221"></a><span class="lineno">  221</span>&#160;        <a class="code" href="namespaceCSVToSD.xhtml#a16dddcd8b3566666b93a413bbfec206e" title="Hält die verwendeten Programmeinstellungen. ">opts</a>.flipobj  = <span class="keyword">true</span>;</div>
<div class="line"><a name="l00222"></a><span class="lineno">  222</span>&#160;        <a class="code" href="namespaceCSVToSD.xhtml#a16dddcd8b3566666b93a413bbfec206e" title="Hält die verwendeten Programmeinstellungen. ">opts</a>.fiber_step_delta = 1;</div>
<div class="line"><a name="l00223"></a><span class="lineno">  223</span>&#160;        <a class="code" href="namespaceCSVToSD.xhtml#a16dddcd8b3566666b93a413bbfec206e" title="Hält die verwendeten Programmeinstellungen. ">opts</a>.<a class="code" href="structCSVToSD_1_1Options.xhtml#a4bdb2207018549711acd7e6cbd61d082" title="Schrittweite beim Auslesen der Sensordaten (nur jeder time_step_delta Zeitpunkt wird verwendet)...">time_step_delta</a> = 1;</div>
<div class="line"><a name="l00224"></a><span class="lineno">  224</span>&#160;        <a class="code" href="namespaceCSVToSD.xhtml#a16dddcd8b3566666b93a413bbfec206e" title="Hält die verwendeten Programmeinstellungen. ">opts</a>.<a class="code" href="structCSVToSD_1_1Options.xhtml#a1327c05fef5f8c704eefa1de0e9c763f" title="Nur bis maximal zu diesem Zeitstempel auslesen. ">max_time</a> = -1;</div>
<div class="line"><a name="l00225"></a><span class="lineno">  225</span>&#160;        <a class="code" href="namespaceCSVToSD.xhtml#a16dddcd8b3566666b93a413bbfec206e" title="Hält die verwendeten Programmeinstellungen. ">opts</a>.<a class="code" href="structCSVToSD_1_1Options.xhtml#a65261b994c8180995c6f95c44f863c20" title="Ab diesem Zeitstempel auslesen. ">min_time</a> = -1;</div>
<div class="line"><a name="l00226"></a><span class="lineno">  226</span>&#160;        <span class="keywordtype">string</span> def_filename;</div>
<div class="line"><a name="l00227"></a><span class="lineno">  227</span>&#160;        <span class="keywordtype">string</span> data_filename;</div>
<div class="line"><a name="l00228"></a><span class="lineno">  228</span>&#160;        <span class="keywordtype">string</span> err_filename;</div>
<div class="line"><a name="l00229"></a><span class="lineno">  229</span>&#160;        <span class="keywordtype">string</span> out_filename;</div>
<div class="line"><a name="l00230"></a><span class="lineno">  230</span>&#160;</div>
<div class="line"><a name="l00231"></a><span class="lineno">  231</span>&#160;        ifstream cfgfile;           <span class="comment">//Config file</span></div>
<div class="line"><a name="l00232"></a><span class="lineno">  232</span>&#160;        cfgfile.open(<span class="keywordtype">string</span>(<span class="keywordtype">string</span>(argv[0])+<span class="stringliteral">&quot;.conf&quot;</span>).c_str());</div>
<div class="line"><a name="l00233"></a><span class="lineno">  233</span>&#160;        <span class="keywordflow">if</span> (!cfgfile.is_open()) {</div>
<div class="line"><a name="l00234"></a><span class="lineno">  234</span>&#160;            <span class="keywordflow">for</span> (<span class="keywordtype">int</span> i=0;i&lt;<a class="code" href="GUIMainWindow_8cpp.xhtml#aff607d5c40608f36a3e32da21875856e">NUMBEROFPATHS</a>;i++) {</div>
<div class="line"><a name="l00235"></a><span class="lineno">  235</span>&#160;                cfgfile.open(<a class="code" href="namespaceCSVToSD.xhtml#ad67595c16b599d615449d991630e288d" title="Suchpfade für die Konfigurationsdatei. ">configpaths</a>[i].c_str());</div>
<div class="line"><a name="l00236"></a><span class="lineno">  236</span>&#160;                <span class="keywordflow">if</span> (cfgfile.is_open()) <span class="keywordflow">break</span>;</div>
<div class="line"><a name="l00237"></a><span class="lineno">  237</span>&#160;            }</div>
<div class="line"><a name="l00238"></a><span class="lineno">  238</span>&#160;            <span class="keywordflow">if</span> (!cfgfile.is_open()) {</div>
<div class="line"><a name="l00239"></a><span class="lineno">  239</span>&#160;                cout &lt;&lt; <span class="stringliteral">&quot;configuration file odisitosd.conf not found!&quot;</span>&lt;&lt;endl;</div>
<div class="line"><a name="l00240"></a><span class="lineno">  240</span>&#160;                <span class="keywordflow">return</span> 1;</div>
<div class="line"><a name="l00241"></a><span class="lineno">  241</span>&#160;            }</div>
<div class="line"><a name="l00242"></a><span class="lineno">  242</span>&#160;        }</div>
<div class="line"><a name="l00243"></a><span class="lineno">  243</span>&#160;        <span class="keywordtype">string</span> line;</div>
<div class="line"><a name="l00244"></a><span class="lineno">  244</span>&#160;        getline(cfgfile,line);</div>
<div class="line"><a name="l00245"></a><span class="lineno">  245</span>&#160;        <a class="code" href="namespaceCSVToSD.xhtml#a16dddcd8b3566666b93a413bbfec206e" title="Hält die verwendeten Programmeinstellungen. ">opts</a>.startrow = atoi(<a class="code" href="Importer_8cpp.xhtml#a0dd0686c00e64af27b47b4c16399d747">getTextBlock</a>(line,0).c_str());</div>
<div class="line"><a name="l00246"></a><span class="lineno">  246</span>&#160;        getline(cfgfile,line);</div>
<div class="line"><a name="l00247"></a><span class="lineno">  247</span>&#160;        <a class="code" href="namespaceCSVToSD.xhtml#a16dddcd8b3566666b93a413bbfec206e" title="Hält die verwendeten Programmeinstellungen. ">opts</a>.<a class="code" href="structCSVToSD_1_1Options.xhtml#ab0204127a812664cc4bef7db1032ea99" title="Sollen Kommata durch Punkte ersetzt werrden? ">replace_comma_with_point</a> = atoi(<a class="code" href="Importer_8cpp.xhtml#a0dd0686c00e64af27b47b4c16399d747">getTextBlock</a>(line,0).c_str());</div>
<div class="line"><a name="l00248"></a><span class="lineno">  248</span>&#160;        getline(cfgfile,line);</div>
<div class="line"><a name="l00249"></a><span class="lineno">  249</span>&#160;        <a class="code" href="namespaceCSVToSD.xhtml#a16dddcd8b3566666b93a413bbfec206e" title="Hält die verwendeten Programmeinstellungen. ">opts</a>.<a class="code" href="structCSVToSD_1_1Options.xhtml#a1ffaee2ce48d0c2b8db1eaca858cdbc0" title="Index der Spalte, die die Zeitstempel enthält. ">timecol</a> = atoi(<a class="code" href="Importer_8cpp.xhtml#a0dd0686c00e64af27b47b4c16399d747">getTextBlock</a>(line,0).c_str());</div>
<div class="line"><a name="l00250"></a><span class="lineno">  250</span>&#160;        getline(cfgfile,line);</div>
<div class="line"><a name="l00251"></a><span class="lineno">  251</span>&#160;        <a class="code" href="namespaceCSVToSD.xhtml#a16dddcd8b3566666b93a413bbfec206e" title="Hält die verwendeten Programmeinstellungen. ">opts</a>.error_threshold = atof(<a class="code" href="Importer_8cpp.xhtml#a0dd0686c00e64af27b47b4c16399d747">getTextBlock</a>(line,0).c_str());</div>
<div class="line"><a name="l00252"></a><span class="lineno">  252</span>&#160;        getline(cfgfile,line);</div>
<div class="line"><a name="l00253"></a><span class="lineno">  253</span>&#160;        <a class="code" href="namespaceCSVToSD.xhtml#a16dddcd8b3566666b93a413bbfec206e" title="Hält die verwendeten Programmeinstellungen. ">opts</a>.maxfwcount = atoi(<a class="code" href="Importer_8cpp.xhtml#a0dd0686c00e64af27b47b4c16399d747">getTextBlock</a>(line,0).c_str());</div>
<div class="line"><a name="l00254"></a><span class="lineno">  254</span>&#160;        getline(cfgfile,line);</div>
<div class="line"><a name="l00255"></a><span class="lineno">  255</span>&#160;        <a class="code" href="namespaceCSVToSD.xhtml#a16dddcd8b3566666b93a413bbfec206e" title="Hält die verwendeten Programmeinstellungen. ">opts</a>.tab_space_count = atoi(<a class="code" href="Importer_8cpp.xhtml#a0dd0686c00e64af27b47b4c16399d747">getTextBlock</a>(line,0).c_str())-1;</div>
<div class="line"><a name="l00256"></a><span class="lineno">  256</span>&#160;        getline(cfgfile,line);</div>
<div class="line"><a name="l00257"></a><span class="lineno">  257</span>&#160;        <a class="code" href="namespaceCSVToSD.xhtml#a16dddcd8b3566666b93a413bbfec206e" title="Hält die verwendeten Programmeinstellungen. ">opts</a>.basetemp = atof(<a class="code" href="Importer_8cpp.xhtml#a0dd0686c00e64af27b47b4c16399d747">getTextBlock</a>(line,0).c_str());</div>
<div class="line"><a name="l00258"></a><span class="lineno">  258</span>&#160;        getline(cfgfile,line);</div>
<div class="line"><a name="l00259"></a><span class="lineno">  259</span>&#160;        <a class="code" href="namespaceCSVToSD.xhtml#a16dddcd8b3566666b93a413bbfec206e" title="Hält die verwendeten Programmeinstellungen. ">opts</a>.flipobj = atoi(<a class="code" href="Importer_8cpp.xhtml#a0dd0686c00e64af27b47b4c16399d747">getTextBlock</a>(line,0).c_str());</div>
<div class="line"><a name="l00260"></a><span class="lineno">  260</span>&#160;        getline(cfgfile,line);</div>
<div class="line"><a name="l00261"></a><span class="lineno">  261</span>&#160;        <a class="code" href="namespaceCSVToSD.xhtml#a16dddcd8b3566666b93a413bbfec206e" title="Hält die verwendeten Programmeinstellungen. ">opts</a>.height = atof(<a class="code" href="Importer_8cpp.xhtml#a0dd0686c00e64af27b47b4c16399d747">getTextBlock</a>(line,0).c_str());</div>
<div class="line"><a name="l00262"></a><span class="lineno">  262</span>&#160;        getline(cfgfile,line);</div>
<div class="line"><a name="l00263"></a><span class="lineno">  263</span>&#160;        <a class="code" href="namespaceCSVToSD.xhtml#a16dddcd8b3566666b93a413bbfec206e" title="Hält die verwendeten Programmeinstellungen. ">opts</a>.objwidth = atof(<a class="code" href="Importer_8cpp.xhtml#a0dd0686c00e64af27b47b4c16399d747">getTextBlock</a>(line,0).c_str());</div>
<div class="line"><a name="l00264"></a><span class="lineno">  264</span>&#160;        cfgfile.close();</div>
<div class="line"><a name="l00265"></a><span class="lineno">  265</span>&#160;</div>
<div class="line"><a name="l00266"></a><span class="lineno">  266</span>&#160;        <span class="keywordtype">int</span> i=0;</div>
<div class="line"><a name="l00267"></a><span class="lineno">  267</span>&#160;        <span class="keywordflow">while</span> (i&lt;argc-1) {</div>
<div class="line"><a name="l00268"></a><span class="lineno">  268</span>&#160;            i++;</div>
<div class="line"><a name="l00269"></a><span class="lineno">  269</span>&#160;            <span class="keywordtype">string</span> arg = string(argv[i]);</div>
<div class="line"><a name="l00270"></a><span class="lineno">  270</span>&#160;            <span class="keywordflow">if</span> (arg==<span class="stringliteral">&quot;-in&quot;</span> || arg==<span class="stringliteral">&quot;-i&quot;</span>) {</div>
<div class="line"><a name="l00271"></a><span class="lineno">  271</span>&#160;                data_filename = string(argv[i+1]);</div>
<div class="line"><a name="l00272"></a><span class="lineno">  272</span>&#160;                i++;</div>
<div class="line"><a name="l00273"></a><span class="lineno">  273</span>&#160;                <span class="keywordflow">continue</span>;</div>
<div class="line"><a name="l00274"></a><span class="lineno">  274</span>&#160;            }</div>
<div class="line"><a name="l00275"></a><span class="lineno">  275</span>&#160;            <span class="keywordflow">if</span> (arg==<span class="stringliteral">&quot;-out&quot;</span> || arg==<span class="stringliteral">&quot;-o&quot;</span>) {</div>
<div class="line"><a name="l00276"></a><span class="lineno">  276</span>&#160;                out_filename = string(argv[i+1]);</div>
<div class="line"><a name="l00277"></a><span class="lineno">  277</span>&#160;                i++;</div>
<div class="line"><a name="l00278"></a><span class="lineno">  278</span>&#160;                <span class="keywordflow">continue</span>;</div>
<div class="line"><a name="l00279"></a><span class="lineno">  279</span>&#160;            }</div>
<div class="line"><a name="l00280"></a><span class="lineno">  280</span>&#160;            <span class="keywordflow">if</span> (arg==<span class="stringliteral">&quot;-sensor-def&quot;</span> || arg==<span class="stringliteral">&quot;-s&quot;</span>) {</div>
<div class="line"><a name="l00281"></a><span class="lineno">  281</span>&#160;                def_filename = string(argv[i+1]);</div>
<div class="line"><a name="l00282"></a><span class="lineno">  282</span>&#160;                i++;</div>
<div class="line"><a name="l00283"></a><span class="lineno">  283</span>&#160;                <span class="keywordflow">continue</span>;</div>
<div class="line"><a name="l00284"></a><span class="lineno">  284</span>&#160;            }</div>
<div class="line"><a name="l00285"></a><span class="lineno">  285</span>&#160;            <span class="keywordflow">if</span> (arg==<span class="stringliteral">&quot;-log&quot;</span> || arg==<span class="stringliteral">&quot;-l&quot;</span>) {</div>
<div class="line"><a name="l00286"></a><span class="lineno">  286</span>&#160;                err_filename = string(argv[i+1]);</div>
<div class="line"><a name="l00287"></a><span class="lineno">  287</span>&#160;                i++;</div>
<div class="line"><a name="l00288"></a><span class="lineno">  288</span>&#160;                <span class="keywordflow">continue</span>;</div>
<div class="line"><a name="l00289"></a><span class="lineno">  289</span>&#160;            }</div>
<div class="line"><a name="l00290"></a><span class="lineno">  290</span>&#160;            <span class="keywordflow">if</span> (arg==<span class="stringliteral">&quot;-step-time&quot;</span>) {</div>
<div class="line"><a name="l00291"></a><span class="lineno">  291</span>&#160;                <a class="code" href="namespaceCSVToSD.xhtml#a16dddcd8b3566666b93a413bbfec206e" title="Hält die verwendeten Programmeinstellungen. ">opts</a>.<a class="code" href="structCSVToSD_1_1Options.xhtml#a4bdb2207018549711acd7e6cbd61d082" title="Schrittweite beim Auslesen der Sensordaten (nur jeder time_step_delta Zeitpunkt wird verwendet)...">time_step_delta</a> = atoi(argv[i+1]);</div>
<div class="line"><a name="l00292"></a><span class="lineno">  292</span>&#160;                <span class="keywordflow">if</span> (<a class="code" href="namespaceCSVToSD.xhtml#a16dddcd8b3566666b93a413bbfec206e" title="Hält die verwendeten Programmeinstellungen. ">opts</a>.<a class="code" href="structCSVToSD_1_1Options.xhtml#a4bdb2207018549711acd7e6cbd61d082" title="Schrittweite beim Auslesen der Sensordaten (nur jeder time_step_delta Zeitpunkt wird verwendet)...">time_step_delta</a>&lt;1) {</div>
<div class="line"><a name="l00293"></a><span class="lineno">  293</span>&#160;                    cerr &lt;&lt; <span class="stringliteral">&quot;-step-time must be &gt;0!&quot;</span> &lt;&lt; endl;</div>
<div class="line"><a name="l00294"></a><span class="lineno">  294</span>&#160;                    <span class="keywordflow">return</span> 1;</div>
<div class="line"><a name="l00295"></a><span class="lineno">  295</span>&#160;                }</div>
<div class="line"><a name="l00296"></a><span class="lineno">  296</span>&#160;                i++;</div>
<div class="line"><a name="l00297"></a><span class="lineno">  297</span>&#160;                <span class="keywordflow">continue</span>;</div>
<div class="line"><a name="l00298"></a><span class="lineno">  298</span>&#160;            }</div>
<div class="line"><a name="l00299"></a><span class="lineno">  299</span>&#160;            <span class="keywordflow">if</span> (arg==<span class="stringliteral">&quot;-step-fiber&quot;</span>) {</div>
<div class="line"><a name="l00300"></a><span class="lineno">  300</span>&#160;                <a class="code" href="namespaceCSVToSD.xhtml#a16dddcd8b3566666b93a413bbfec206e" title="Hält die verwendeten Programmeinstellungen. ">opts</a>.fiber_step_delta = atoi(argv[i+1]);</div>
<div class="line"><a name="l00301"></a><span class="lineno">  301</span>&#160;                <span class="keywordflow">if</span> (<a class="code" href="namespaceCSVToSD.xhtml#a16dddcd8b3566666b93a413bbfec206e" title="Hält die verwendeten Programmeinstellungen. ">opts</a>.fiber_step_delta&lt;1) {</div>
<div class="line"><a name="l00302"></a><span class="lineno">  302</span>&#160;                    cerr &lt;&lt; <span class="stringliteral">&quot;-step-fiber must be &gt;0!&quot;</span> &lt;&lt; endl;</div>
<div class="line"><a name="l00303"></a><span class="lineno">  303</span>&#160;                    <span class="keywordflow">return</span> 1;</div>
<div class="line"><a name="l00304"></a><span class="lineno">  304</span>&#160;                }</div>
<div class="line"><a name="l00305"></a><span class="lineno">  305</span>&#160;                i++;</div>
<div class="line"><a name="l00306"></a><span class="lineno">  306</span>&#160;                <span class="keywordflow">continue</span>;</div>
<div class="line"><a name="l00307"></a><span class="lineno">  307</span>&#160;            }</div>
<div class="line"><a name="l00308"></a><span class="lineno">  308</span>&#160;            <span class="keywordflow">if</span> (arg==<span class="stringliteral">&quot;-height&quot;</span>) {</div>
<div class="line"><a name="l00309"></a><span class="lineno">  309</span>&#160;                <a class="code" href="namespaceCSVToSD.xhtml#a16dddcd8b3566666b93a413bbfec206e" title="Hält die verwendeten Programmeinstellungen. ">opts</a>.height = atof(argv[i+1]);</div>
<div class="line"><a name="l00310"></a><span class="lineno">  310</span>&#160;                i++;</div>
<div class="line"><a name="l00311"></a><span class="lineno">  311</span>&#160;                <span class="keywordflow">continue</span>;</div>
<div class="line"><a name="l00312"></a><span class="lineno">  312</span>&#160;            }</div>
<div class="line"><a name="l00313"></a><span class="lineno">  313</span>&#160;            <span class="keywordflow">if</span> (arg==<span class="stringliteral">&quot;-max-time&quot;</span>) {</div>
<div class="line"><a name="l00314"></a><span class="lineno">  314</span>&#160;                <a class="code" href="namespaceCSVToSD.xhtml#a16dddcd8b3566666b93a413bbfec206e" title="Hält die verwendeten Programmeinstellungen. ">opts</a>.<a class="code" href="structCSVToSD_1_1Options.xhtml#a1327c05fef5f8c704eefa1de0e9c763f" title="Nur bis maximal zu diesem Zeitstempel auslesen. ">max_time</a> = atof(argv[i+1]);</div>
<div class="line"><a name="l00315"></a><span class="lineno">  315</span>&#160;                <span class="keywordflow">if</span> (<a class="code" href="namespaceCSVToSD.xhtml#a16dddcd8b3566666b93a413bbfec206e" title="Hält die verwendeten Programmeinstellungen. ">opts</a>.<a class="code" href="structCSVToSD_1_1Options.xhtml#a1327c05fef5f8c704eefa1de0e9c763f" title="Nur bis maximal zu diesem Zeitstempel auslesen. ">max_time</a>&lt;0) {</div>
<div class="line"><a name="l00316"></a><span class="lineno">  316</span>&#160;                    <a class="code" href="namespaceCSVToSD.xhtml#a16dddcd8b3566666b93a413bbfec206e" title="Hält die verwendeten Programmeinstellungen. ">opts</a>.<a class="code" href="structCSVToSD_1_1Options.xhtml#a1327c05fef5f8c704eefa1de0e9c763f" title="Nur bis maximal zu diesem Zeitstempel auslesen. ">max_time</a> = -1;</div>
<div class="line"><a name="l00317"></a><span class="lineno">  317</span>&#160;                }</div>
<div class="line"><a name="l00318"></a><span class="lineno">  318</span>&#160;                i++;</div>
<div class="line"><a name="l00319"></a><span class="lineno">  319</span>&#160;                <span class="keywordflow">continue</span>;</div>
<div class="line"><a name="l00320"></a><span class="lineno">  320</span>&#160;            }</div>
<div class="line"><a name="l00321"></a><span class="lineno">  321</span>&#160;            <span class="keywordflow">if</span> (arg==<span class="stringliteral">&quot;-min-time&quot;</span>) {</div>
<div class="line"><a name="l00322"></a><span class="lineno">  322</span>&#160;                <a class="code" href="namespaceCSVToSD.xhtml#a16dddcd8b3566666b93a413bbfec206e" title="Hält die verwendeten Programmeinstellungen. ">opts</a>.<a class="code" href="structCSVToSD_1_1Options.xhtml#a65261b994c8180995c6f95c44f863c20" title="Ab diesem Zeitstempel auslesen. ">min_time</a> = atof(argv[i+1]);</div>
<div class="line"><a name="l00323"></a><span class="lineno">  323</span>&#160;                <span class="keywordflow">if</span> (<a class="code" href="namespaceCSVToSD.xhtml#a16dddcd8b3566666b93a413bbfec206e" title="Hält die verwendeten Programmeinstellungen. ">opts</a>.<a class="code" href="structCSVToSD_1_1Options.xhtml#a65261b994c8180995c6f95c44f863c20" title="Ab diesem Zeitstempel auslesen. ">min_time</a>&lt;0) {</div>
<div class="line"><a name="l00324"></a><span class="lineno">  324</span>&#160;                    <a class="code" href="namespaceCSVToSD.xhtml#a16dddcd8b3566666b93a413bbfec206e" title="Hält die verwendeten Programmeinstellungen. ">opts</a>.<a class="code" href="structCSVToSD_1_1Options.xhtml#a65261b994c8180995c6f95c44f863c20" title="Ab diesem Zeitstempel auslesen. ">min_time</a> = -1;</div>
<div class="line"><a name="l00325"></a><span class="lineno">  325</span>&#160;                }</div>
<div class="line"><a name="l00326"></a><span class="lineno">  326</span>&#160;                i++;</div>
<div class="line"><a name="l00327"></a><span class="lineno">  327</span>&#160;                <span class="keywordflow">continue</span>;</div>
<div class="line"><a name="l00328"></a><span class="lineno">  328</span>&#160;            }</div>
<div class="line"><a name="l00329"></a><span class="lineno">  329</span>&#160;            <span class="keywordflow">if</span> (arg==<span class="stringliteral">&quot;-h&quot;</span>) {</div>
<div class="line"><a name="l00330"></a><span class="lineno">  330</span>&#160;                cout &lt;&lt; <span class="stringliteral">&quot;odisitosd converts data files from the odisi sensor into timed sensor data (tsd) for SimpleAnalyzer.\n&quot;</span></div>
<div class="line"><a name="l00331"></a><span class="lineno">  331</span>&#160;                     &lt;&lt; <span class="stringliteral">&quot;usage: mergetsd ARGUMENT1 VALUE1 ARGUMENT2 VALUE2...\n&quot;</span></div>
<div class="line"><a name="l00332"></a><span class="lineno">  332</span>&#160;                     &lt;&lt; <span class="stringliteral">&quot;program arguments: \n&quot;</span></div>
<div class="line"><a name="l00333"></a><span class="lineno">  333</span>&#160;                     &lt;&lt; <span class="stringliteral">&quot;\t-i,\t-in\t\tpath to csv input file\n\n&quot;</span></div>
<div class="line"><a name="l00334"></a><span class="lineno">  334</span>&#160;                     &lt;&lt; <span class="stringliteral">&quot;\t-o,\t-out\t\tpath to tsd output file\n\n&quot;</span></div>
<div class="line"><a name="l00335"></a><span class="lineno">  335</span>&#160;                     &lt;&lt; <span class="stringliteral">&quot;\t-s,\t-sensor-def\tpath to sensor definition file\n\n&quot;</span></div>
<div class="line"><a name="l00336"></a><span class="lineno">  336</span>&#160;                     &lt;&lt; <span class="stringliteral">&quot;\t-l,\t-log\t\tpath to log file (optional)\n\n&quot;</span></div>
<div class="line"><a name="l00337"></a><span class="lineno">  337</span>&#160;                     &lt;&lt; <span class="stringliteral">&quot;\t\t-height\t\theight of the fiber level (optional, default 0.0)\n\n&quot;</span></div>
<div class="line"><a name="l00338"></a><span class="lineno">  338</span>&#160;                     &lt;&lt; <span class="stringliteral">&quot;\t\t-step-time\tstepwidth in time (take every n-th data set) (optional, default 1)\n\n&quot;</span></div>
<div class="line"><a name="l00339"></a><span class="lineno">  339</span>&#160;                     &lt;&lt; <span class="stringliteral">&quot;\t\t-step-fiber\tstepwidth on fiber (take every n-th measuring point) (optional, default 1)\n\n&quot;</span></div>
<div class="line"><a name="l00340"></a><span class="lineno">  340</span>&#160;                     &lt;&lt; <span class="stringliteral">&quot;\t\t-min-time\tread only from this time on (optional, default -1 (means no restriction))\n\n&quot;</span></div>
<div class="line"><a name="l00341"></a><span class="lineno">  341</span>&#160;                     &lt;&lt; <span class="stringliteral">&quot;\t\t-max-time\tread only until this time (optional, default -1 (means no restriction))\n\n&quot;</span></div>
<div class="line"><a name="l00342"></a><span class="lineno">  342</span>&#160;                     &lt;&lt; <span class="stringliteral">&quot;\t-h,\t-help\t\tprint this help\n\n&quot;</span></div>
<div class="line"><a name="l00343"></a><span class="lineno">  343</span>&#160;                     &lt;&lt; <span class="stringliteral">&quot;configuration details can be set in configuration file: odisitosd.conf\n&quot;</span>;</div>
<div class="line"><a name="l00344"></a><span class="lineno">  344</span>&#160;                <span class="keywordflow">return</span> 0;</div>
<div class="line"><a name="l00345"></a><span class="lineno">  345</span>&#160;            }</div>
<div class="line"><a name="l00346"></a><span class="lineno">  346</span>&#160;            cout &lt;&lt; <span class="stringliteral">&quot;invalid argument: &quot;</span> &lt;&lt; argv[i] &lt;&lt; endl;</div>
<div class="line"><a name="l00347"></a><span class="lineno">  347</span>&#160;        }</div>
<div class="line"><a name="l00348"></a><span class="lineno">  348</span>&#160;        <span class="keywordflow">if</span> (<a class="code" href="namespaceCSVToSD.xhtml#a16dddcd8b3566666b93a413bbfec206e" title="Hält die verwendeten Programmeinstellungen. ">opts</a>.<a class="code" href="structCSVToSD_1_1Options.xhtml#a65261b994c8180995c6f95c44f863c20" title="Ab diesem Zeitstempel auslesen. ">min_time</a>&gt;<a class="code" href="namespaceCSVToSD.xhtml#a16dddcd8b3566666b93a413bbfec206e" title="Hält die verwendeten Programmeinstellungen. ">opts</a>.<a class="code" href="structCSVToSD_1_1Options.xhtml#a1327c05fef5f8c704eefa1de0e9c763f" title="Nur bis maximal zu diesem Zeitstempel auslesen. ">max_time</a> and <a class="code" href="namespaceCSVToSD.xhtml#a16dddcd8b3566666b93a413bbfec206e" title="Hält die verwendeten Programmeinstellungen. ">opts</a>.<a class="code" href="structCSVToSD_1_1Options.xhtml#a1327c05fef5f8c704eefa1de0e9c763f" title="Nur bis maximal zu diesem Zeitstempel auslesen. ">max_time</a>!=-1) {</div>
<div class="line"><a name="l00349"></a><span class="lineno">  349</span>&#160;            cerr &lt;&lt; <span class="stringliteral">&quot;-min-time can&#39;t be greater than -max-time!&quot;</span> &lt;&lt; endl;</div>
<div class="line"><a name="l00350"></a><span class="lineno">  350</span>&#160;            <span class="keywordflow">return</span> 1;</div>
<div class="line"><a name="l00351"></a><span class="lineno">  351</span>&#160;        }</div>
<div class="line"><a name="l00352"></a><span class="lineno">  352</span>&#160;</div>
<div class="line"><a name="l00353"></a><span class="lineno">  353</span>&#160;        <span class="keywordtype">bool</span> names_read = <span class="keyword">false</span>;</div>
<div class="line"><a name="l00354"></a><span class="lineno">  354</span>&#160;        ifstream deffile;           <span class="comment">//Sensor definitions</span></div>
<div class="line"><a name="l00355"></a><span class="lineno">  355</span>&#160;        deffile.open(def_filename.c_str());</div>
<div class="line"><a name="l00356"></a><span class="lineno">  356</span>&#160;        <span class="keywordflow">if</span> (!deffile.is_open()) {</div>
<div class="line"><a name="l00357"></a><span class="lineno">  357</span>&#160;            cerr &lt;&lt; <span class="stringliteral">&quot;sensor definition file \&quot;&quot;</span>&lt;&lt;def_filename&lt;&lt; <span class="stringliteral">&quot;\&quot; not found!&quot;</span>&lt;&lt;endl;</div>
<div class="line"><a name="l00358"></a><span class="lineno">  358</span>&#160;            <span class="keywordflow">return</span> 1;</div>
<div class="line"><a name="l00359"></a><span class="lineno">  359</span>&#160;        }</div>
<div class="line"><a name="l00360"></a><span class="lineno">  360</span>&#160;        vector&lt;float&gt; inlist;</div>
<div class="line"><a name="l00361"></a><span class="lineno">  361</span>&#160;        vector&lt;float&gt; outlist;</div>
<div class="line"><a name="l00362"></a><span class="lineno">  362</span>&#160;        vector&lt;float&gt; in_x;</div>
<div class="line"><a name="l00363"></a><span class="lineno">  363</span>&#160;        vector&lt;float&gt; out_x;</div>
<div class="line"><a name="l00364"></a><span class="lineno">  364</span>&#160;        <span class="keywordflow">while</span> (deffile.good()) {</div>
<div class="line"><a name="l00365"></a><span class="lineno">  365</span>&#160;            getline(deffile,line);</div>
<div class="line"><a name="l00366"></a><span class="lineno">  366</span>&#160;            <span class="keywordflow">if</span> (line.length()==0) <span class="keywordflow">continue</span>;</div>
<div class="line"><a name="l00367"></a><span class="lineno">  367</span>&#160;            <span class="keywordflow">if</span> (line.at(0)==<span class="charliteral">&#39;#&#39;</span>) <span class="keywordflow">continue</span>;</div>
<div class="line"><a name="l00368"></a><span class="lineno">  368</span>&#160;            <span class="keywordflow">if</span> (line.at(0)==<span class="charliteral">&#39;i&#39;</span>) {</div>
<div class="line"><a name="l00369"></a><span class="lineno">  369</span>&#160;                inlist.resize(inlist.size()+1,atof(<a class="code" href="Importer_8cpp.xhtml#a0dd0686c00e64af27b47b4c16399d747">getTextBlock</a>(line,1).c_str()));</div>
<div class="line"><a name="l00370"></a><span class="lineno">  370</span>&#160;                in_x.resize(in_x.size()+1,atof(<a class="code" href="Importer_8cpp.xhtml#a0dd0686c00e64af27b47b4c16399d747">getTextBlock</a>(line,2).c_str()));</div>
<div class="line"><a name="l00371"></a><span class="lineno">  371</span>&#160;                <span class="keywordflow">if</span> (<a class="code" href="namespaceCSVToSD.xhtml#a16dddcd8b3566666b93a413bbfec206e" title="Hält die verwendeten Programmeinstellungen. ">opts</a>.flipobj) {</div>
<div class="line"><a name="l00372"></a><span class="lineno">  372</span>&#160;                    in_x.at(in_x.size()-1) = <a class="code" href="namespaceCSVToSD.xhtml#a16dddcd8b3566666b93a413bbfec206e" title="Hält die verwendeten Programmeinstellungen. ">opts</a>.objwidth-in_x.at(in_x.size()-1);</div>
<div class="line"><a name="l00373"></a><span class="lineno">  373</span>&#160;                }</div>
<div class="line"><a name="l00374"></a><span class="lineno">  374</span>&#160;                <span class="comment">//in_y.resize(in_y.size()+1,atof(getTextBlock(line,3).c_str()));</span></div>
<div class="line"><a name="l00375"></a><span class="lineno">  375</span>&#160;            }</div>
<div class="line"><a name="l00376"></a><span class="lineno">  376</span>&#160;            <span class="keywordflow">if</span> (line.at(0)==<span class="charliteral">&#39;o&#39;</span>) {</div>
<div class="line"><a name="l00377"></a><span class="lineno">  377</span>&#160;                outlist.resize(outlist.size()+1,atof(<a class="code" href="Importer_8cpp.xhtml#a0dd0686c00e64af27b47b4c16399d747">getTextBlock</a>(line,1).c_str()));</div>
<div class="line"><a name="l00378"></a><span class="lineno">  378</span>&#160;                out_x.resize(out_x.size()+1,atof(<a class="code" href="Importer_8cpp.xhtml#a0dd0686c00e64af27b47b4c16399d747">getTextBlock</a>(line,2).c_str()));</div>
<div class="line"><a name="l00379"></a><span class="lineno">  379</span>&#160;                <span class="keywordflow">if</span> (<a class="code" href="namespaceCSVToSD.xhtml#a16dddcd8b3566666b93a413bbfec206e" title="Hält die verwendeten Programmeinstellungen. ">opts</a>.flipobj) {</div>
<div class="line"><a name="l00380"></a><span class="lineno">  380</span>&#160;                    out_x.at(out_x.size()-1) = <a class="code" href="namespaceCSVToSD.xhtml#a16dddcd8b3566666b93a413bbfec206e" title="Hält die verwendeten Programmeinstellungen. ">opts</a>.objwidth-out_x.at(out_x.size()-1);</div>
<div class="line"><a name="l00381"></a><span class="lineno">  381</span>&#160;                }</div>
<div class="line"><a name="l00382"></a><span class="lineno">  382</span>&#160;</div>
<div class="line"><a name="l00383"></a><span class="lineno">  383</span>&#160;                <span class="comment">//out_y.resize(in_y.size()+1,atof(getTextBlock(line,3).c_str()));</span></div>
<div class="line"><a name="l00384"></a><span class="lineno">  384</span>&#160;            }</div>
<div class="line"><a name="l00385"></a><span class="lineno">  385</span>&#160;        }</div>
<div class="line"><a name="l00386"></a><span class="lineno">  386</span>&#160;        <span class="keywordflow">if</span> (outlist.size()!=inlist.size()) {</div>
<div class="line"><a name="l00387"></a><span class="lineno">  387</span>&#160;            cerr &lt;&lt; <span class="stringliteral">&quot;number of fiber in and outs not equal! (in: &quot;</span>&lt;&lt;inlist.size()&lt;&lt;<span class="stringliteral">&quot; out: &quot;</span>&lt;&lt;outlist.size()&lt;&lt;<span class="stringliteral">&quot;)&quot;</span> &lt;&lt; endl;</div>
<div class="line"><a name="l00388"></a><span class="lineno">  388</span>&#160;            <span class="keywordflow">return</span> 1;</div>
<div class="line"><a name="l00389"></a><span class="lineno">  389</span>&#160;        }</div>
<div class="line"><a name="l00390"></a><span class="lineno">  390</span>&#160;        deffile.close();</div>
<div class="line"><a name="l00391"></a><span class="lineno">  391</span>&#160;        ifstream file;                  <span class="comment">// data file</span></div>
<div class="line"><a name="l00392"></a><span class="lineno">  392</span>&#160;        file.open(data_filename.c_str());</div>
<div class="line"><a name="l00393"></a><span class="lineno">  393</span>&#160;        <span class="keywordflow">if</span> (!file.is_open()) {</div>
<div class="line"><a name="l00394"></a><span class="lineno">  394</span>&#160;            cerr &lt;&lt; <span class="stringliteral">&quot;input file \&quot;&quot;</span>&lt;&lt;data_filename&lt;&lt; <span class="stringliteral">&quot;\&quot; not found!&quot;</span>&lt;&lt;endl;</div>
<div class="line"><a name="l00395"></a><span class="lineno">  395</span>&#160;            <span class="keywordflow">return</span> 1;</div>
<div class="line"><a name="l00396"></a><span class="lineno">  396</span>&#160;        }</div>
<div class="line"><a name="l00397"></a><span class="lineno">  397</span>&#160;        vector&lt;vector&lt;float&gt; &gt; values;</div>
<div class="line"><a name="l00398"></a><span class="lineno">  398</span>&#160;        vector&lt;vector&lt;int&gt; &gt; debug_positions;</div>
<div class="line"><a name="l00399"></a><span class="lineno">  399</span>&#160;        vector&lt;float&gt; times;</div>
<div class="line"><a name="l00400"></a><span class="lineno">  400</span>&#160;        vector&lt;float&gt; lin_positions;</div>
<div class="line"><a name="l00401"></a><span class="lineno">  401</span>&#160;        <span class="keywordtype">size_t</span> row = 0;</div>
<div class="line"><a name="l00402"></a><span class="lineno">  402</span>&#160;        <span class="keywordflow">while</span> (file.good()) {</div>
<div class="line"><a name="l00403"></a><span class="lineno">  403</span>&#160;            getline(file,line);</div>
<div class="line"><a name="l00404"></a><span class="lineno">  404</span>&#160;            <span class="keywordflow">if</span> (row&gt;=<a class="code" href="namespaceCSVToSD.xhtml#a16dddcd8b3566666b93a413bbfec206e" title="Hält die verwendeten Programmeinstellungen. ">opts</a>.startrow) {</div>
<div class="line"><a name="l00405"></a><span class="lineno">  405</span>&#160;                <span class="keywordflow">if</span> (line==(<span class="stringliteral">&quot;&quot;</span>)) <span class="keywordflow">continue</span>;</div>
<div class="line"><a name="l00406"></a><span class="lineno">  406</span>&#160;                <span class="keywordflow">if</span> (!names_read) {</div>
<div class="line"><a name="l00407"></a><span class="lineno">  407</span>&#160;                    <a class="code" href="namespaceCSVToSD.xhtml#a2e2e7a5141b8cf519db3c37c9b2cc410" title="Sammelt Daten aus einer Textzeile (string). ">parseLine</a>(line,&amp;lin_positions,NULL,NULL,row);</div>
<div class="line"><a name="l00408"></a><span class="lineno">  408</span>&#160;                    names_read = <span class="keyword">true</span>;</div>
<div class="line"><a name="l00409"></a><span class="lineno">  409</span>&#160;                } <span class="keywordflow">else</span> {</div>
<div class="line"><a name="l00410"></a><span class="lineno">  410</span>&#160;                    <span class="keywordflow">if</span> (<a class="code" href="namespaceCSVToSD.xhtml#a16dddcd8b3566666b93a413bbfec206e" title="Hält die verwendeten Programmeinstellungen. ">opts</a>.<a class="code" href="structCSVToSD_1_1Options.xhtml#ab0204127a812664cc4bef7db1032ea99" title="Sollen Kommata durch Punkte ersetzt werrden? ">replace_comma_with_point</a>) {</div>
<div class="line"><a name="l00411"></a><span class="lineno">  411</span>&#160;                        <a class="code" href="namespaceCSVToSD.xhtml#a4f125d9c8df307d21dbb5363f6422b4d" title="Ersetzt in einem String alle Vorkommen eines Teilstrings durch einen Anderen. ">replaceAll</a>(line,<span class="stringliteral">&quot;,&quot;</span>, <span class="stringliteral">&quot;.&quot;</span>);</div>
<div class="line"><a name="l00412"></a><span class="lineno">  412</span>&#160;                    }</div>
<div class="line"><a name="l00413"></a><span class="lineno">  413</span>&#160;                    values.resize(values.size()+1);</div>
<div class="line"><a name="l00414"></a><span class="lineno">  414</span>&#160;                    debug_positions.resize(debug_positions.size()+1);</div>
<div class="line"><a name="l00415"></a><span class="lineno">  415</span>&#160;                    <a class="code" href="namespaceCSVToSD.xhtml#a2e2e7a5141b8cf519db3c37c9b2cc410" title="Sammelt Daten aus einer Textzeile (string). ">parseLine</a>(line,&amp;values.at(values.size()-1),&amp;times,&amp;debug_positions.at(debug_positions.size()-1),row);   <span class="comment">//&amp;valid_cols</span></div>
<div class="line"><a name="l00416"></a><span class="lineno">  416</span>&#160;                }</div>
<div class="line"><a name="l00417"></a><span class="lineno">  417</span>&#160;                <span class="keywordflow">if</span> (times.size()&gt;0 &amp;&amp; times.at(times.size()-1)&lt;<a class="code" href="namespaceCSVToSD.xhtml#a16dddcd8b3566666b93a413bbfec206e" title="Hält die verwendeten Programmeinstellungen. ">opts</a>.<a class="code" href="structCSVToSD_1_1Options.xhtml#a65261b994c8180995c6f95c44f863c20" title="Ab diesem Zeitstempel auslesen. ">min_time</a> &amp;&amp; <a class="code" href="namespaceCSVToSD.xhtml#a16dddcd8b3566666b93a413bbfec206e" title="Hält die verwendeten Programmeinstellungen. ">opts</a>.<a class="code" href="structCSVToSD_1_1Options.xhtml#a65261b994c8180995c6f95c44f863c20" title="Ab diesem Zeitstempel auslesen. ">min_time</a>!=-1) {</div>
<div class="line"><a name="l00418"></a><span class="lineno">  418</span>&#160;                    values.resize(times.size()-1);</div>
<div class="line"><a name="l00419"></a><span class="lineno">  419</span>&#160;                    debug_positions.resize(times.size()-1);</div>
<div class="line"><a name="l00420"></a><span class="lineno">  420</span>&#160;                    times.resize(times.size()-1);</div>
<div class="line"><a name="l00421"></a><span class="lineno">  421</span>&#160;                }</div>
<div class="line"><a name="l00422"></a><span class="lineno">  422</span>&#160;                <span class="keywordflow">if</span> (times.size()&gt;0 &amp;&amp; times.at(times.size()-1)&gt;<a class="code" href="namespaceCSVToSD.xhtml#a16dddcd8b3566666b93a413bbfec206e" title="Hält die verwendeten Programmeinstellungen. ">opts</a>.<a class="code" href="structCSVToSD_1_1Options.xhtml#a1327c05fef5f8c704eefa1de0e9c763f" title="Nur bis maximal zu diesem Zeitstempel auslesen. ">max_time</a> &amp;&amp; <a class="code" href="namespaceCSVToSD.xhtml#a16dddcd8b3566666b93a413bbfec206e" title="Hält die verwendeten Programmeinstellungen. ">opts</a>.<a class="code" href="structCSVToSD_1_1Options.xhtml#a1327c05fef5f8c704eefa1de0e9c763f" title="Nur bis maximal zu diesem Zeitstempel auslesen. ">max_time</a>!=-1) {</div>
<div class="line"><a name="l00423"></a><span class="lineno">  423</span>&#160;                    values.resize(times.size()-1);</div>
<div class="line"><a name="l00424"></a><span class="lineno">  424</span>&#160;                    debug_positions.resize(times.size()-1);</div>
<div class="line"><a name="l00425"></a><span class="lineno">  425</span>&#160;                    times.resize(times.size()-1);</div>
<div class="line"><a name="l00426"></a><span class="lineno">  426</span>&#160;                    <span class="keywordflow">break</span>;</div>
<div class="line"><a name="l00427"></a><span class="lineno">  427</span>&#160;                }</div>
<div class="line"><a name="l00428"></a><span class="lineno">  428</span>&#160;            }</div>
<div class="line"><a name="l00429"></a><span class="lineno">  429</span>&#160;            row++;</div>
<div class="line"><a name="l00430"></a><span class="lineno">  430</span>&#160;        }</div>
<div class="line"><a name="l00431"></a><span class="lineno">  431</span>&#160;        ofstream errfile;                   <span class="comment">// error output</span></div>
<div class="line"><a name="l00432"></a><span class="lineno">  432</span>&#160;        ofstream outfile;                   <span class="comment">// output</span></div>
<div class="line"><a name="l00433"></a><span class="lineno">  433</span>&#160;        outfile.open(out_filename.c_str());</div>
<div class="line"><a name="l00434"></a><span class="lineno">  434</span>&#160;        <span class="keywordflow">if</span> (!outfile.is_open()) {</div>
<div class="line"><a name="l00435"></a><span class="lineno">  435</span>&#160;            cerr &lt;&lt; <span class="stringliteral">&quot;output file path \&quot;&quot;</span>&lt;&lt;out_filename&lt;&lt; <span class="stringliteral">&quot;\&quot; is invalid!&quot;</span>&lt;&lt;endl;</div>
<div class="line"><a name="l00436"></a><span class="lineno">  436</span>&#160;        }</div>
<div class="line"><a name="l00437"></a><span class="lineno">  437</span>&#160;        <span class="keywordflow">if</span> (err_filename!=<span class="stringliteral">&quot;&quot;</span>) {</div>
<div class="line"><a name="l00438"></a><span class="lineno">  438</span>&#160;            errfile.open(err_filename.c_str());</div>
<div class="line"><a name="l00439"></a><span class="lineno">  439</span>&#160;            <span class="keywordflow">if</span> (!errfile.is_open()) {</div>
<div class="line"><a name="l00440"></a><span class="lineno">  440</span>&#160;                cerr &lt;&lt; <span class="stringliteral">&quot;log file path \&quot;&quot;</span>&lt;&lt;err_filename&lt;&lt; <span class="stringliteral">&quot;\&quot; is invalid!&quot;</span>&lt;&lt;endl;</div>
<div class="line"><a name="l00441"></a><span class="lineno">  441</span>&#160;            }</div>
<div class="line"><a name="l00442"></a><span class="lineno">  442</span>&#160;        }</div>
<div class="line"><a name="l00443"></a><span class="lineno">  443</span>&#160;        <span class="keywordtype">int</span> insidecount = 0;</div>
<div class="line"><a name="l00444"></a><span class="lineno">  444</span>&#160;        <span class="keywordtype">int</span> outsidecount = 0;</div>
<div class="line"><a name="l00445"></a><span class="lineno">  445</span>&#160;        <span class="keywordtype">double</span> insideval = 0;</div>
<div class="line"><a name="l00446"></a><span class="lineno">  446</span>&#160;        <span class="keywordtype">double</span> outsideval= 0;</div>
<div class="line"><a name="l00447"></a><span class="lineno">  447</span>&#160;        <span class="keywordflow">for</span> (<span class="keywordtype">size_t</span> i=0;i&lt;values.size();i++) {</div>
<div class="line"><a name="l00448"></a><span class="lineno">  448</span>&#160;            <span class="keywordflow">if</span> (!((i+1)%<a class="code" href="namespaceCSVToSD.xhtml#a16dddcd8b3566666b93a413bbfec206e" title="Hält die verwendeten Programmeinstellungen. ">opts</a>.<a class="code" href="structCSVToSD_1_1Options.xhtml#a4bdb2207018549711acd7e6cbd61d082" title="Schrittweite beim Auslesen der Sensordaten (nur jeder time_step_delta Zeitpunkt wird verwendet)...">time_step_delta</a>==0)) <span class="keywordflow">continue</span>;</div>
<div class="line"><a name="l00449"></a><span class="lineno">  449</span>&#160;            <span class="keywordflow">if</span> (i%100) cout &lt;&lt; <span class="stringliteral">&quot;\r&quot;</span>&lt;&lt;int((<span class="keywordtype">float</span>)i/values.size()*100.) &lt;&lt; <span class="stringliteral">&quot;%&quot;</span>;</div>
<div class="line"><a name="l00450"></a><span class="lineno">  450</span>&#160;            vector&lt;float&gt;* curr_delta = &amp;values.at(i);</div>
<div class="line"><a name="l00451"></a><span class="lineno">  451</span>&#160;            values.at(i).resize(curr_delta-&gt;size());</div>
<div class="line"><a name="l00452"></a><span class="lineno">  452</span>&#160;            outfile &lt;&lt; <span class="stringliteral">&quot;t &quot;</span>&lt;&lt;int(times.at(i))&lt;&lt;endl;</div>
<div class="line"><a name="l00453"></a><span class="lineno">  453</span>&#160;            outfile &lt;&lt; <span class="stringliteral">&quot;n &quot;</span>&lt;&lt;times.at(i)&lt;&lt;endl;</div>
<div class="line"><a name="l00454"></a><span class="lineno">  454</span>&#160;            <span class="keywordflow">for</span> (<span class="keywordtype">size_t</span> j=0;j&lt;values.at(i).size();j++) {</div>
<div class="line"><a name="l00455"></a><span class="lineno">  455</span>&#160;</div>
<div class="line"><a name="l00456"></a><span class="lineno">  456</span>&#160;                <span class="comment">// Calculate position</span></div>
<div class="line"><a name="l00457"></a><span class="lineno">  457</span>&#160;                <span class="keywordtype">float</span> l_pos = lin_positions.at(j);</div>
<div class="line"><a name="l00458"></a><span class="lineno">  458</span>&#160;                <span class="keywordtype">float</span> l_in  = 0;</div>
<div class="line"><a name="l00459"></a><span class="lineno">  459</span>&#160;                <span class="keywordtype">float</span> l_out = 0;</div>
<div class="line"><a name="l00460"></a><span class="lineno">  460</span>&#160;                <span class="keywordtype">float</span> x_in  = 0;</div>
<div class="line"><a name="l00461"></a><span class="lineno">  461</span>&#160;                <span class="keywordtype">float</span> x_out = 0;</div>
<div class="line"><a name="l00462"></a><span class="lineno">  462</span>&#160;                <span class="comment">//float y_in  = 0;</span></div>
<div class="line"><a name="l00463"></a><span class="lineno">  463</span>&#160;                <span class="comment">//float y_out = 0;</span></div>
<div class="line"><a name="l00464"></a><span class="lineno">  464</span>&#160;                <span class="keywordtype">bool</span> outside = <span class="keyword">false</span>;</div>
<div class="line"><a name="l00465"></a><span class="lineno">  465</span>&#160;                <span class="keywordflow">for</span> (<span class="keywordtype">size_t</span> li=0;li&lt;inlist.size();li++) {</div>
<div class="line"><a name="l00466"></a><span class="lineno">  466</span>&#160;                    <span class="keywordflow">if</span> (inlist.at(li)&lt;=l_pos &amp;&amp; outlist.at(li)&gt;=l_pos) {</div>
<div class="line"><a name="l00467"></a><span class="lineno">  467</span>&#160;                        l_in = inlist.at(li);</div>
<div class="line"><a name="l00468"></a><span class="lineno">  468</span>&#160;                        l_out= outlist.at(li);</div>
<div class="line"><a name="l00469"></a><span class="lineno">  469</span>&#160;                        x_in = in_x.at(li);</div>
<div class="line"><a name="l00470"></a><span class="lineno">  470</span>&#160;                        x_out= out_x.at(li);</div>
<div class="line"><a name="l00471"></a><span class="lineno">  471</span>&#160;                        <span class="comment">//y_in = in_y.at(li);</span></div>
<div class="line"><a name="l00472"></a><span class="lineno">  472</span>&#160;                        <span class="comment">//y_out= out_y.at(li);</span></div>
<div class="line"><a name="l00473"></a><span class="lineno">  473</span>&#160;                        <span class="keywordflow">break</span>;</div>
<div class="line"><a name="l00474"></a><span class="lineno">  474</span>&#160;                    }</div>
<div class="line"><a name="l00475"></a><span class="lineno">  475</span>&#160;                    <span class="keywordflow">if</span> (li==inlist.size()-1) {</div>
<div class="line"><a name="l00476"></a><span class="lineno">  476</span>&#160;                        outside = <span class="keyword">true</span>;</div>
<div class="line"><a name="l00477"></a><span class="lineno">  477</span>&#160;                    }</div>
<div class="line"><a name="l00478"></a><span class="lineno">  478</span>&#160;                }</div>
<div class="line"><a name="l00479"></a><span class="lineno">  479</span>&#160;                <span class="keywordflow">if</span> (!outside) {</div>
<div class="line"><a name="l00480"></a><span class="lineno">  480</span>&#160;                    <span class="keywordflow">if</span> (!(j%<a class="code" href="namespaceCSVToSD.xhtml#a16dddcd8b3566666b93a413bbfec206e" title="Hält die verwendeten Programmeinstellungen. ">opts</a>.fiber_step_delta==0)) <span class="keywordflow">continue</span>;</div>
<div class="line"><a name="l00481"></a><span class="lineno">  481</span>&#160;                    insidecount++;</div>
<div class="line"><a name="l00482"></a><span class="lineno">  482</span>&#160;                    <span class="comment">// calc value</span></div>
<div class="line"><a name="l00483"></a><span class="lineno">  483</span>&#160;                    <span class="keywordtype">int</span> fwcount = 0;</div>
<div class="line"><a name="l00484"></a><span class="lineno">  484</span>&#160;                    <span class="keywordflow">if</span> (i&gt;0) {</div>
<div class="line"><a name="l00485"></a><span class="lineno">  485</span>&#160;                        <span class="keywordtype">float</span> prev_val = values.at(i-1).at(j);</div>
<div class="line"><a name="l00486"></a><span class="lineno">  486</span>&#160;                        <span class="keywordtype">float</span> original_val = values.at(i).at(j);</div>
<div class="line"><a name="l00487"></a><span class="lineno">  487</span>&#160;                        <span class="keywordflow">while</span> ((i+fwcount+1&lt;values.size()) &amp;&amp; (abs(values.at(i+fwcount).at(j)-prev_val)&gt;(fwcount+1)*<a class="code" href="namespaceCSVToSD.xhtml#a16dddcd8b3566666b93a413bbfec206e" title="Hält die verwendeten Programmeinstellungen. ">opts</a>.error_threshold)) {</div>
<div class="line"><a name="l00488"></a><span class="lineno">  488</span>&#160;                            fwcount++;</div>
<div class="line"><a name="l00489"></a><span class="lineno">  489</span>&#160;                            <span class="keywordflow">if</span> (fwcount==<a class="code" href="namespaceCSVToSD.xhtml#a16dddcd8b3566666b93a413bbfec206e" title="Hält die verwendeten Programmeinstellungen. ">opts</a>.maxfwcount) {</div>
<div class="line"><a name="l00490"></a><span class="lineno">  490</span>&#160;                                <span class="keywordflow">if</span> (err_filename!=<span class="stringliteral">&quot;&quot;</span>) errfile &lt;&lt; <span class="stringliteral">&quot;count of invalid values too big -&gt; nothing changed!&quot;</span> &lt;&lt;<span class="stringliteral">&quot; (l. &quot;</span>&lt;&lt;i+<a class="code" href="namespaceCSVToSD.xhtml#a16dddcd8b3566666b93a413bbfec206e" title="Hält die verwendeten Programmeinstellungen. ">opts</a>.startrow+2&lt;&lt;<span class="stringliteral">&quot;, c. &quot;</span>&lt;&lt;debug_positions.at(i).at(j)&lt;&lt;<span class="stringliteral">&quot;)&quot;</span>&lt;&lt; endl;</div>
<div class="line"><a name="l00491"></a><span class="lineno">  491</span>&#160;                                <span class="keywordflow">break</span>;</div>
<div class="line"><a name="l00492"></a><span class="lineno">  492</span>&#160;                            }</div>
<div class="line"><a name="l00493"></a><span class="lineno">  493</span>&#160;                        }</div>
<div class="line"><a name="l00494"></a><span class="lineno">  494</span>&#160;                        <span class="keywordflow">if</span> (fwcount&gt;0) {</div>
<div class="line"><a name="l00495"></a><span class="lineno">  495</span>&#160;                            values.at(i).at(j) = prev_val+(values.at(i+fwcount).at(j)-prev_val)/(fwcount+1);</div>
<div class="line"><a name="l00496"></a><span class="lineno">  496</span>&#160;                            <span class="keywordflow">if</span> (err_filename!=<span class="stringliteral">&quot;&quot;</span>) errfile &lt;&lt; <span class="stringliteral">&quot;changed &quot;</span> &lt;&lt;original_val&lt;&lt;<span class="stringliteral">&quot; (l. &quot;</span>&lt;&lt;i+<a class="code" href="namespaceCSVToSD.xhtml#a16dddcd8b3566666b93a413bbfec206e" title="Hält die verwendeten Programmeinstellungen. ">opts</a>.startrow+2&lt;&lt;<span class="stringliteral">&quot;, c. &quot;</span>&lt;&lt;debug_positions.at(i).at(j)&lt;&lt;<span class="stringliteral">&quot;) to &quot;</span>&lt;&lt;values.at(i).at(j)&lt;&lt; endl;</div>
<div class="line"><a name="l00497"></a><span class="lineno">  497</span>&#160;                        }</div>
<div class="line"><a name="l00498"></a><span class="lineno">  498</span>&#160;                    }</div>
<div class="line"><a name="l00499"></a><span class="lineno">  499</span>&#160;                    <span class="keywordtype">float</span> x = x_in+((x_out-x_in)/(l_out-l_in))*(l_pos-l_in);</div>
<div class="line"><a name="l00500"></a><span class="lineno">  500</span>&#160;                    <span class="keywordtype">float</span> y = <a class="code" href="namespaceCSVToSD.xhtml#a16dddcd8b3566666b93a413bbfec206e" title="Hält die verwendeten Programmeinstellungen. ">opts</a>.height;</div>
<div class="line"><a name="l00501"></a><span class="lineno">  501</span>&#160;                    <span class="keywordtype">float</span> z = cos(asin(((x_out-x_in)/(l_out-l_in))))*(l_pos-l_in);</div>
<div class="line"><a name="l00502"></a><span class="lineno">  502</span>&#160;                    outfile &lt;&lt;<span class="stringliteral">&quot;s &quot;</span>&lt;&lt;x&lt;&lt;<span class="stringliteral">&quot; &quot;</span>&lt;&lt;y&lt;&lt;<span class="stringliteral">&quot; &quot;</span>&lt;&lt;z&lt;&lt; <span class="stringliteral">&quot; &quot;</span>&lt;&lt;<a class="code" href="namespaceCSVToSD.xhtml#a16dddcd8b3566666b93a413bbfec206e" title="Hält die verwendeten Programmeinstellungen. ">opts</a>.basetemp+values.at(i).at(j) &lt;&lt; endl;</div>
<div class="line"><a name="l00503"></a><span class="lineno">  503</span>&#160;                    insideval+=values.at(i).at(j);</div>
<div class="line"><a name="l00504"></a><span class="lineno">  504</span>&#160;                } <span class="keywordflow">else</span> {</div>
<div class="line"><a name="l00505"></a><span class="lineno">  505</span>&#160;                    outsidecount++;</div>
<div class="line"><a name="l00506"></a><span class="lineno">  506</span>&#160;                    outsideval+=values.at(i).at(j);</div>
<div class="line"><a name="l00507"></a><span class="lineno">  507</span>&#160;                }</div>
<div class="line"><a name="l00508"></a><span class="lineno">  508</span>&#160;            }</div>
<div class="line"><a name="l00509"></a><span class="lineno">  509</span>&#160;            outfile &lt;&lt; endl;</div>
<div class="line"><a name="l00510"></a><span class="lineno">  510</span>&#160;</div>
<div class="line"><a name="l00511"></a><span class="lineno">  511</span>&#160;        }</div>
<div class="line"><a name="l00512"></a><span class="lineno">  512</span>&#160;        cout &lt;&lt; <span class="stringliteral">&quot;\r&quot;</span>&lt;&lt;endl;</div>
<div class="line"><a name="l00513"></a><span class="lineno">  513</span>&#160;        cout &lt;&lt; insidecount &lt;&lt; <span class="stringliteral">&quot; values inside object, &quot;</span>&lt;&lt;outsidecount &lt;&lt; <span class="stringliteral">&quot; outside object &quot;</span>&lt;&lt;endl;</div>
<div class="line"><a name="l00514"></a><span class="lineno">  514</span>&#160;        cout &lt;&lt; <span class="stringliteral">&quot;Inside average: &quot;</span> &lt;&lt; insideval/insidecount &lt;&lt; <span class="stringliteral">&quot; Outside average: &quot;</span> &lt;&lt; outsideval/outsidecount &lt;&lt; endl;</div>
<div class="line"><a name="l00515"></a><span class="lineno">  515</span>&#160;        outfile.close();</div>
<div class="line"><a name="l00516"></a><span class="lineno">  516</span>&#160;        <span class="keywordflow">if</span> (err_filename!=<span class="stringliteral">&quot;&quot;</span>) errfile.close();</div>
<div class="line"><a name="l00517"></a><span class="lineno">  517</span>&#160;        cout &lt;&lt; <span class="stringliteral">&quot;files successfully created.&quot;</span> &lt;&lt; endl;</div>
<div class="line"><a name="l00518"></a><span class="lineno">  518</span>&#160;        <span class="keywordflow">return</span> 0;</div>
<div class="line"><a name="l00519"></a><span class="lineno">  519</span>&#160;    };</div>
<div class="line"><a name="l00520"></a><span class="lineno">  520</span>&#160;}</div>
<div class="line"><a name="l00521"></a><span class="lineno">  521</span>&#160;</div>
<div class="line"><a name="l00522"></a><span class="lineno"><a class="code" href="odisitosd_2main_8cpp.xhtml#a0ddf1224851353fc92bfbff6f499fa97">  522</a></span>&#160;<span class="keywordtype">int</span> <a class="code" href="csvtosd_2main_8cpp.xhtml#a0ddf1224851353fc92bfbff6f499fa97">main</a>(<span class="keywordtype">int</span> argc, <span class="keywordtype">char</span> *argv[]) {</div>
<div class="line"><a name="l00523"></a><span class="lineno">  523</span>&#160;    <span class="keywordflow">return</span> <a class="code" href="namespaceODiSIToSD.xhtml#a09e74878b7f3b12c27afbb8ee902d9f8" title="Liest die Programmargumente, die Konfiguration, die Sensordefinitionsdatei und die ODiSI-Datei um ein...">ODiSIToSD::convert</a>(argc,argv);</div>
<div class="line"><a name="l00524"></a><span class="lineno">  524</span>&#160;};</div>
</div><!-- fragment --></div><!-- contents -->
<!-- start footer part -->
<hr class="footer"/><address class="footer"><small>
Erzeugt am Son Feb 9 2014 15:44:34 für Simple Analyzer von &#160;<a href="http://www.doxygen.org/index.html">
<img class="footer" src="doxygen.png" alt="doxygen"/>
</a> 1.8.4
</small></address>
</body>
</html>
