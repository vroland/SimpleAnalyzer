<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.6"/>
<title>Simple Analyzer: /daten/Projekte/eclipse_workspace/odisitosd/main.cpp Quellcode</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/javascript">
  $(document).ready(function() { searchBox.OnSelectItem(0); });
</script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="doc_icon.png"/></td>
  <td style="padding-left: 0.5em;">
   <div id="projectname">Simple Analyzer
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Erzeugt von Doxygen 1.8.6 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Suchen');
</script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.xhtml"><span>Hauptseite</span></a></li>
      <li><a href="pages.xhtml"><span>Zusätzliche&#160;Informationen</span></a></li>
      <li><a href="namespaces.xhtml"><span>Namensbereiche</span></a></li>
      <li><a href="annotated.xhtml"><span>Klassen</span></a></li>
      <li class="current"><a href="files.xhtml"><span>Dateien</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Suchen" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="files.xhtml"><span>Auflistung&#160;der&#160;Dateien</span></a></li>
      <li><a href="globals.xhtml"><span>Datei-Elemente</span></a></li>
    </ul>
  </div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
<a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(0)"><span class="SelectionMark">&#160;</span>Alle</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(1)"><span class="SelectionMark">&#160;</span>Klassen</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(2)"><span class="SelectionMark">&#160;</span>Namensbereiche</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(3)"><span class="SelectionMark">&#160;</span>Dateien</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(4)"><span class="SelectionMark">&#160;</span>Funktionen</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(5)"><span class="SelectionMark">&#160;</span>Variablen</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(6)"><span class="SelectionMark">&#160;</span>Aufzählungen</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(7)"><span class="SelectionMark">&#160;</span>Aufzählungswerte</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(8)"><span class="SelectionMark">&#160;</span>Freundbeziehungen</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(9)"><span class="SelectionMark">&#160;</span>Makrodefinitionen</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(10)"><span class="SelectionMark">&#160;</span>Seiten</a></div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="dir_4cc256ad5405ca5eca6fc95e08690148.xhtml">odisitosd</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="headertitle">
<div class="title">main.cpp</div>  </div>
</div><!--header-->
<div class="contents">
<a href="odisitosd_2main_8cpp.xhtml">gehe zur Dokumentation dieser Datei</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="comment">/*</span></div>
<div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="comment"> * main.cpp</span></div>
<div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="comment"> *  Created on: 26.10.2013</span></div>
<div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="comment"> *      Author: valentin</span></div>
<div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="comment"> */</span></div>
<div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="preprocessor">#include &lt;stdio.h&gt;</span></div>
<div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="preprocessor">#include &lt;iostream&gt;</span></div>
<div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;<span class="preprocessor">#include &lt;fstream&gt;</span></div>
<div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;<span class="preprocessor">#include &lt;vector&gt;</span></div>
<div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;<span class="preprocessor">#include &lt;cmath&gt;</span></div>
<div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;<span class="preprocessor">#include &lt;algorithm&gt;</span></div>
<div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;<span class="preprocessor">#include &lt;sstream&gt;</span></div>
<div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;</div>
<div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;<span class="keyword">using namespace </span>std;</div>
<div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;</div>
<div class="line"><a name="l00022"></a><span class="lineno"><a class="line" href="classOdisiToSdConverter.xhtml">   22</a></span>&#160;<span class="keyword">class </span><a class="code" href="classOdisiToSdConverter.xhtml">OdisiToSdConverter</a> {</div>
<div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;<span class="keyword">protected</span>:</div>
<div class="line"><a name="l00027"></a><span class="lineno"><a class="line" href="classOdisiToSdConverter.xhtml#a6f59f3670356c1588b736af33d59532a">   27</a></span>&#160;    <span class="keyword">static</span> <span class="keyword">const</span> <span class="keywordtype">int</span> NUMBEROFPATHS = 3;</div>
<div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;</div>
<div class="line"><a name="l00033"></a><span class="lineno"><a class="line" href="classOdisiToSdConverter.xhtml#aeecf67d22a4b6333ceabe5f1a1036736">   33</a></span>&#160;    <span class="keywordtype">string</span> configpaths[NUMBEROFPATHS] {</div>
<div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;            <span class="stringliteral">&quot;/etc/simpleanalyzer/odisitosd.conf&quot;</span>,</div>
<div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;            <span class="stringliteral">&quot;/usr/local/share/simpleanalyzer/odisitosd.conf&quot;</span>,</div>
<div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;            <span class="stringliteral">&quot;/usr/share/simpleanalyzer/odisitosd.conf&quot;</span> };</div>
<div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;</div>
<div class="line"><a name="l00041"></a><span class="lineno"><a class="line" href="structOdisiToSdConverter_1_1Options.xhtml">   41</a></span>&#160;    <span class="keyword">struct </span><a class="code" href="structOdisiToSdConverter_1_1Options.xhtml">Options</a> {</div>
<div class="line"><a name="l00042"></a><span class="lineno"><a class="line" href="structOdisiToSdConverter_1_1Options.xhtml#acb8ca8c36555d0fa3d1b87e2c8800fe6">   42</a></span>&#160;        <span class="keywordtype">size_t</span> <a class="code" href="structOdisiToSdConverter_1_1Options.xhtml#acb8ca8c36555d0fa3d1b87e2c8800fe6">startrow</a>; </div>
<div class="line"><a name="l00043"></a><span class="lineno"><a class="line" href="structOdisiToSdConverter_1_1Options.xhtml#ae4c74d1fdfbaf37eb4b38f4b684cfa31">   43</a></span>&#160;        <span class="keywordtype">char</span> <a class="code" href="structOdisiToSdConverter_1_1Options.xhtml#ae4c74d1fdfbaf37eb4b38f4b684cfa31">separator</a>; </div>
<div class="line"><a name="l00044"></a><span class="lineno"><a class="line" href="structOdisiToSdConverter_1_1Options.xhtml#ad5adb03bbad593944fb94802f9efffe1">   44</a></span>&#160;        <span class="keywordtype">bool</span> <a class="code" href="structOdisiToSdConverter_1_1Options.xhtml#ad5adb03bbad593944fb94802f9efffe1">replace_comma_with_point</a>; </div>
<div class="line"><a name="l00045"></a><span class="lineno"><a class="line" href="structOdisiToSdConverter_1_1Options.xhtml#a43e744e0769d2b436c56ee6a9e410613">   45</a></span>&#160;        <span class="keywordtype">size_t</span> <a class="code" href="structOdisiToSdConverter_1_1Options.xhtml#a43e744e0769d2b436c56ee6a9e410613">timecol</a>; </div>
<div class="line"><a name="l00046"></a><span class="lineno"><a class="line" href="structOdisiToSdConverter_1_1Options.xhtml#a2d540b0bd36d458de7797792efb13f13">   46</a></span>&#160;        <span class="keywordtype">float</span> <a class="code" href="structOdisiToSdConverter_1_1Options.xhtml#a2d540b0bd36d458de7797792efb13f13">error_threshold</a>; </div>
<div class="line"><a name="l00047"></a><span class="lineno"><a class="line" href="structOdisiToSdConverter_1_1Options.xhtml#aca66edaa34e64581ddb68bca902634df">   47</a></span>&#160;        <span class="keywordtype">int</span> <a class="code" href="structOdisiToSdConverter_1_1Options.xhtml#aca66edaa34e64581ddb68bca902634df">maxfwcount</a>; </div>
<div class="line"><a name="l00048"></a><span class="lineno"><a class="line" href="structOdisiToSdConverter_1_1Options.xhtml#a7dda0229b360a29cd7e4b1ed26e2e71d">   48</a></span>&#160;        <span class="keywordtype">int</span> <a class="code" href="structOdisiToSdConverter_1_1Options.xhtml#a7dda0229b360a29cd7e4b1ed26e2e71d">tab_space_count</a>; </div>
<div class="line"><a name="l00049"></a><span class="lineno"><a class="line" href="structOdisiToSdConverter_1_1Options.xhtml#a9e9609b45b425d128550508772ad69f6">   49</a></span>&#160;        <span class="keywordtype">float</span> <a class="code" href="structOdisiToSdConverter_1_1Options.xhtml#a9e9609b45b425d128550508772ad69f6">height</a>; </div>
<div class="line"><a name="l00050"></a><span class="lineno"><a class="line" href="structOdisiToSdConverter_1_1Options.xhtml#a3bda06d5caa4384aba4bd5302b44cde0">   50</a></span>&#160;        <span class="keywordtype">float</span> <a class="code" href="structOdisiToSdConverter_1_1Options.xhtml#a3bda06d5caa4384aba4bd5302b44cde0">basetemp</a>; </div>
<div class="line"><a name="l00051"></a><span class="lineno"><a class="line" href="structOdisiToSdConverter_1_1Options.xhtml#a88d153166692e5bb6a4a37d453b2193c">   51</a></span>&#160;        <span class="keywordtype">float</span> <a class="code" href="structOdisiToSdConverter_1_1Options.xhtml#a88d153166692e5bb6a4a37d453b2193c">objwidth</a>; </div>
<div class="line"><a name="l00052"></a><span class="lineno"><a class="line" href="structOdisiToSdConverter_1_1Options.xhtml#a0117562823f70067df979f4975e5b076">   52</a></span>&#160;        <span class="keywordtype">bool</span> <a class="code" href="structOdisiToSdConverter_1_1Options.xhtml#a0117562823f70067df979f4975e5b076">flipobj</a>; </div>
<div class="line"><a name="l00053"></a><span class="lineno"><a class="line" href="structOdisiToSdConverter_1_1Options.xhtml#a550a9730db03bc568f8ac51a269dd286">   53</a></span>&#160;        <span class="keywordtype">int</span> <a class="code" href="structOdisiToSdConverter_1_1Options.xhtml#a550a9730db03bc568f8ac51a269dd286">fiber_step_delta</a>; </div>
<div class="line"><a name="l00054"></a><span class="lineno"><a class="line" href="structOdisiToSdConverter_1_1Options.xhtml#a2e5c6038a0ff5ca7d32be89740b82aa4">   54</a></span>&#160;        <span class="keywordtype">int</span> <a class="code" href="structOdisiToSdConverter_1_1Options.xhtml#a2e5c6038a0ff5ca7d32be89740b82aa4">time_step_delta</a>; </div>
<div class="line"><a name="l00055"></a><span class="lineno"><a class="line" href="structOdisiToSdConverter_1_1Options.xhtml#afb526c278f5e4273379c0e6345ce01c0">   55</a></span>&#160;        <span class="keywordtype">double</span> <a class="code" href="structOdisiToSdConverter_1_1Options.xhtml#afb526c278f5e4273379c0e6345ce01c0">max_time</a>; </div>
<div class="line"><a name="l00056"></a><span class="lineno"><a class="line" href="structOdisiToSdConverter_1_1Options.xhtml#a2c97daa31cfdd315fd1d9a3307665edb">   56</a></span>&#160;        <span class="keywordtype">double</span> <a class="code" href="structOdisiToSdConverter_1_1Options.xhtml#a2c97daa31cfdd315fd1d9a3307665edb">min_time</a>; </div>
<div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;    } opts; </div>
<div class="line"><a name="l00065"></a><span class="lineno"><a class="line" href="classOdisiToSdConverter.xhtml#ad851e258c9aad4ab07887fc19f9cc89d">   65</a></span>&#160;    <span class="keywordtype">bool</span> <a class="code" href="classOdisiToSdConverter.xhtml#ad851e258c9aad4ab07887fc19f9cc89d">contains</a>(<a class="code" href="classstd_1_1vector.xhtml">std::vector&lt;string&gt;</a>&amp; Vec, <span class="keyword">const</span> <span class="keywordtype">string</span>&amp; Element) {</div>
<div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;</div>
<div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;        <span class="comment">//Ist das gesuchte Element in der Liste?</span></div>
<div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;        <span class="keywordflow">if</span> (find(Vec.begin(), Vec.end(), Element) != Vec.end()) {</div>
<div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;            <span class="keywordflow">return</span> <span class="keyword">true</span>;</div>
<div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;        } <span class="keywordflow">else</span> {</div>
<div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;            <span class="keywordflow">return</span> <span class="keyword">false</span>;</div>
<div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;        }</div>
<div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;    }</div>
<div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;</div>
<div class="line"><a name="l00081"></a><span class="lineno"><a class="line" href="classOdisiToSdConverter.xhtml#a22b9cc047c31d81b84e74d68d69ba2c6">   81</a></span>&#160;    <span class="keywordtype">bool</span> <a class="code" href="classOdisiToSdConverter.xhtml#a22b9cc047c31d81b84e74d68d69ba2c6">contains</a>(<a class="code" href="classstd_1_1vector.xhtml">std::vector&lt;int&gt;</a>&amp; Vec, <span class="keyword">const</span> <span class="keywordtype">int</span>&amp; Element) {</div>
<div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;</div>
<div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;        <span class="comment">//Ist das gesuchte Element in der Liste?</span></div>
<div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;        <span class="keywordflow">if</span> (find(Vec.begin(), Vec.end(), Element) != Vec.end()) {</div>
<div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;            <span class="keywordflow">return</span> <span class="keyword">true</span>;</div>
<div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;        } <span class="keywordflow">else</span> {</div>
<div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;            <span class="keywordflow">return</span> <span class="keyword">false</span>;</div>
<div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;        }</div>
<div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;    }</div>
<div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;</div>
<div class="line"><a name="l00097"></a><span class="lineno"><a class="line" href="classOdisiToSdConverter.xhtml#a8bf5e68acbe7e6388db98b1e1d321709">   97</a></span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classOdisiToSdConverter.xhtml#a8bf5e68acbe7e6388db98b1e1d321709">replaceAll</a>(<span class="keywordtype">string</span> &amp;str, <span class="keyword">const</span> <span class="keywordtype">string</span> from, <span class="keyword">const</span> <span class="keywordtype">string</span> to) {</div>
<div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;</div>
<div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;        <span class="comment">//Position des zu ersetzenden Teilstrings</span></div>
<div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;        <span class="keywordtype">size_t</span> replace_pos = str.find(from, 0);</div>
<div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;</div>
<div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;        <span class="comment">//Bis Stringende</span></div>
<div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;        <span class="keywordflow">while</span> (replace_pos != str.npos) {</div>
<div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;</div>
<div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;            <span class="comment">//Ersetzen des Teilstrings bei start_pos</span></div>
<div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;            str.replace(replace_pos, from.length(), to);</div>
<div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;</div>
<div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;            <span class="comment">//Suchen des nächsten zu ersetzenden Teilstrings</span></div>
<div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;            replace_pos += to.length();</div>
<div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;            replace_pos = str.find(from, replace_pos);</div>
<div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;        }</div>
<div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;    }</div>
<div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;</div>
<div class="line"><a name="l00119"></a><span class="lineno"><a class="line" href="classOdisiToSdConverter.xhtml#a01498491495ce740686843f6575859fd">  119</a></span>&#160;    <span class="keywordtype">string</span> <a class="code" href="classOdisiToSdConverter.xhtml#a01498491495ce740686843f6575859fd">floattostr</a>(<span class="keywordtype">float</span> val) {</div>
<div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;</div>
<div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;        ostringstream ss;</div>
<div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;        ss &lt;&lt; val;</div>
<div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;        <span class="keywordflow">return</span> ss.str();</div>
<div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;    }</div>
<div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;</div>
<div class="line"><a name="l00132"></a><span class="lineno"><a class="line" href="classOdisiToSdConverter.xhtml#af7ff6a5280429bfa3ade6202e4651e25">  132</a></span>&#160;    <span class="keywordtype">string</span> <a class="code" href="classOdisiToSdConverter.xhtml#af7ff6a5280429bfa3ade6202e4651e25">getTextBlock</a>(<span class="keywordtype">string</span> data, <span class="keywordtype">int</span> n) {</div>
<div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;</div>
<div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;        <span class="comment">//Position des abschließenden Leerzeichens für den ersten Block</span></div>
<div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;        <span class="keywordtype">size_t</span> position = data.find(<span class="stringliteral">&quot; &quot;</span>);</div>
<div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;        <span class="comment">//Speicher für das Ende des vorherigen Blocks</span></div>
<div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;        <span class="keywordtype">size_t</span> previousPos = 0;</div>
<div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;</div>
<div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;        <span class="comment">//Ist der String Leerzeichenlos?</span></div>
<div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;        <span class="keywordflow">if</span> (position == data.npos) {</div>
<div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;            <span class="keywordflow">return</span> <span class="stringliteral">&quot;&quot;</span>;</div>
<div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;        }</div>
<div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;</div>
<div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;        <span class="comment">//Durchlaufen aller Textblöcke bis zum gewünschten Index</span></div>
<div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;        <span class="keywordflow">for</span> (<span class="keywordtype">int</span> i = 0; i &lt; n; i++) {</div>
<div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;</div>
<div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;            <span class="comment">//aus Ende des verherigen Blocks den Anfang des aktuellen Berechnen.</span></div>
<div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;            previousPos = position + 1;</div>
<div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;            <span class="comment">//Position des nächsten Blocks suchen</span></div>
<div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;            position = data.find(<span class="stringliteral">&quot; &quot;</span>, position + 1);</div>
<div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;            <span class="comment">//Ende der Zeile erreicht?</span></div>
<div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;            <span class="keywordflow">if</span> (position == data.npos) {</div>
<div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160;                <span class="comment">//Ist der Index außerhalb des möglichen Bereichs?</span></div>
<div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160;                <span class="keywordflow">if</span> (n - 1 &gt; i) {</div>
<div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160;                    <span class="keywordflow">return</span> <span class="stringliteral">&quot;&quot;</span>;</div>
<div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160;                }</div>
<div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160;            }</div>
<div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160;        }</div>
<div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160;</div>
<div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160;        <span class="comment">//Zurückgeben des aktuellen Textblocks</span></div>
<div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160;        <span class="keywordflow">return</span> data.substr(previousPos, position - (previousPos));</div>
<div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160;    }</div>
<div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160;</div>
<div class="line"><a name="l00174"></a><span class="lineno"><a class="line" href="classOdisiToSdConverter.xhtml#a0497baba5fd610c206b57a80154425b8">  174</a></span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classOdisiToSdConverter.xhtml#a0497baba5fd610c206b57a80154425b8">parseLine</a>(<span class="keywordtype">string</span> line, <a class="code" href="classstd_1_1vector.xhtml">vector&lt;float&gt;</a>* out, <a class="code" href="classstd_1_1vector.xhtml">vector&lt;float&gt;</a>* times,</div>
<div class="line"><a name="l00175"></a><span class="lineno">  175</span>&#160;            <a class="code" href="classstd_1_1vector.xhtml">vector&lt;int&gt;</a>* debug_positions, <span class="keywordtype">size_t</span> row_count) {</div>
<div class="line"><a name="l00176"></a><span class="lineno">  176</span>&#160;</div>
<div class="line"><a name="l00177"></a><span class="lineno">  177</span>&#160;        <span class="comment">//Ist die untersuchte Zeile die Kopfzeile der Tabelle?</span></div>
<div class="line"><a name="l00178"></a><span class="lineno">  178</span>&#160;        <span class="keywordflow">if</span> (row_count == opts.startrow) {</div>
<div class="line"><a name="l00179"></a><span class="lineno">  179</span>&#160;            <span class="comment">//Alles vor dem ersten TAB löschen</span></div>
<div class="line"><a name="l00180"></a><span class="lineno">  180</span>&#160;            <span class="keywordtype">size_t</span> pos = line.find(<span class="charliteral">&#39;\t&#39;</span>);</div>
<div class="line"><a name="l00181"></a><span class="lineno">  181</span>&#160;            line = line.substr(pos + 1, line.length() - pos - 1);</div>
<div class="line"><a name="l00182"></a><span class="lineno">  182</span>&#160;        };</div>
<div class="line"><a name="l00183"></a><span class="lineno">  183</span>&#160;</div>
<div class="line"><a name="l00184"></a><span class="lineno">  184</span>&#160;        out-&gt;clear();</div>
<div class="line"><a name="l00185"></a><span class="lineno">  185</span>&#160;</div>
<div class="line"><a name="l00186"></a><span class="lineno">  186</span>&#160;        <span class="comment">//Erstellen eines Strings mit der Anzahl der für TAB gewünschten Leerzeichen</span></div>
<div class="line"><a name="l00187"></a><span class="lineno">  187</span>&#160;        <span class="keywordtype">string</span> tab_to_space = <span class="stringliteral">&quot;&quot;</span>;</div>
<div class="line"><a name="l00188"></a><span class="lineno">  188</span>&#160;        <span class="keywordflow">for</span> (<span class="keywordtype">int</span> i = 0; i &lt; opts.tab_space_count; i++) {</div>
<div class="line"><a name="l00189"></a><span class="lineno">  189</span>&#160;            tab_to_space += <span class="stringliteral">&quot; &quot;</span>;</div>
<div class="line"><a name="l00190"></a><span class="lineno">  190</span>&#160;        }</div>
<div class="line"><a name="l00191"></a><span class="lineno">  191</span>&#160;</div>
<div class="line"><a name="l00192"></a><span class="lineno">  192</span>&#160;        <span class="comment">//Ersetzen aller TABs durch die gewünschte Anzahl an Leerzeichen</span></div>
<div class="line"><a name="l00193"></a><span class="lineno">  193</span>&#160;        replaceAll(line, <span class="stringliteral">&quot;\t&quot;</span>, tab_to_space);</div>
<div class="line"><a name="l00194"></a><span class="lineno">  194</span>&#160;</div>
<div class="line"><a name="l00195"></a><span class="lineno">  195</span>&#160;        <span class="comment">//Position des ersten Separatorzeichens im String</span></div>
<div class="line"><a name="l00196"></a><span class="lineno">  196</span>&#160;        <span class="keywordtype">size_t</span> sep_pos = line.find(opts.separator);</div>
<div class="line"><a name="l00197"></a><span class="lineno">  197</span>&#160;        <span class="comment">//aktuelle Position im String</span></div>
<div class="line"><a name="l00198"></a><span class="lineno">  198</span>&#160;        <span class="keywordtype">size_t</span> position = 0;</div>
<div class="line"><a name="l00199"></a><span class="lineno">  199</span>&#160;        <span class="comment">//Index der aktuellen Spalte</span></div>
<div class="line"><a name="l00200"></a><span class="lineno">  200</span>&#160;        <span class="keywordtype">size_t</span> col_index = 0;</div>
<div class="line"><a name="l00201"></a><span class="lineno">  201</span>&#160;</div>
<div class="line"><a name="l00202"></a><span class="lineno">  202</span>&#160;        <span class="comment">//Für alle Spalten...</span></div>
<div class="line"><a name="l00203"></a><span class="lineno">  203</span>&#160;        <span class="keywordflow">while</span> (sep_pos != string::npos) {</div>
<div class="line"><a name="l00204"></a><span class="lineno">  204</span>&#160;</div>
<div class="line"><a name="l00205"></a><span class="lineno">  205</span>&#160;            <span class="comment">//Inhalt der aktuellen Spalte</span></div>
<div class="line"><a name="l00206"></a><span class="lineno">  206</span>&#160;            <span class="keywordtype">string</span> substr;</div>
<div class="line"><a name="l00207"></a><span class="lineno">  207</span>&#160;</div>
<div class="line"><a name="l00208"></a><span class="lineno">  208</span>&#160;            <span class="comment">//Anfang der neuen Spalte suchen, die Breiter als 0 Zeichen ist</span></div>
<div class="line"><a name="l00209"></a><span class="lineno">  209</span>&#160;            <span class="keywordflow">do</span> {</div>
<div class="line"><a name="l00210"></a><span class="lineno">  210</span>&#160;                <span class="comment">//Position des ersten Separatorzeichens</span></div>
<div class="line"><a name="l00211"></a><span class="lineno">  211</span>&#160;                sep_pos = line.find(opts.separator);</div>
<div class="line"><a name="l00212"></a><span class="lineno">  212</span>&#160;                <span class="comment">//Inhalt der Zeile bis zum Separatorzeichen</span></div>
<div class="line"><a name="l00213"></a><span class="lineno">  213</span>&#160;                substr = line.substr(0, sep_pos);</div>
<div class="line"><a name="l00214"></a><span class="lineno">  214</span>&#160;</div>
<div class="line"><a name="l00215"></a><span class="lineno">  215</span>&#160;                <span class="comment">//Ist die &quot;Spalte&quot; breiter als 0 Zeichen?</span></div>
<div class="line"><a name="l00216"></a><span class="lineno">  216</span>&#160;                <span class="keywordflow">if</span> (substr == <span class="stringliteral">&quot;&quot;</span>) {</div>
<div class="line"><a name="l00217"></a><span class="lineno">  217</span>&#160;                    position++;</div>
<div class="line"><a name="l00218"></a><span class="lineno">  218</span>&#160;                }</div>
<div class="line"><a name="l00219"></a><span class="lineno">  219</span>&#160;</div>
<div class="line"><a name="l00220"></a><span class="lineno">  220</span>&#160;                <span class="comment">//Löschen des Zeileninhalts vor dem Separatorzeichen und des Separatorzeichens aus der Zeile</span></div>
<div class="line"><a name="l00221"></a><span class="lineno">  221</span>&#160;                line.erase(0, sep_pos + 1);</div>
<div class="line"><a name="l00222"></a><span class="lineno">  222</span>&#160;</div>
<div class="line"><a name="l00223"></a><span class="lineno">  223</span>&#160;            } <span class="keywordflow">while</span> (sep_pos == 0);</div>
<div class="line"><a name="l00224"></a><span class="lineno">  224</span>&#160;</div>
<div class="line"><a name="l00226"></a><span class="lineno">  226</span>&#160;            <span class="keywordflow">if</span> (opts.replace_comma_with_point) {</div>
<div class="line"><a name="l00227"></a><span class="lineno">  227</span>&#160;                replaceAll(substr, <span class="stringliteral">&quot;,&quot;</span>, <span class="stringliteral">&quot;.&quot;</span>);</div>
<div class="line"><a name="l00228"></a><span class="lineno">  228</span>&#160;            }</div>
<div class="line"><a name="l00229"></a><span class="lineno">  229</span>&#160;</div>
<div class="line"><a name="l00230"></a><span class="lineno">  230</span>&#160;            <span class="comment">//Enthält die Spalte Sensordaten?</span></div>
<div class="line"><a name="l00231"></a><span class="lineno">  231</span>&#160;            <span class="keywordflow">if</span> (row_count &gt; opts.startrow &amp;&amp; col_index &gt; opts.timecol) {</div>
<div class="line"><a name="l00232"></a><span class="lineno">  232</span>&#160;</div>
<div class="line"><a name="l00233"></a><span class="lineno">  233</span>&#160;                <span class="comment">//Speichern der Daten aus der Spalte in die Ausgabeliste</span></div>
<div class="line"><a name="l00234"></a><span class="lineno">  234</span>&#160;                debug_positions-&gt;resize(debug_positions-&gt;size() + 1,</div>
<div class="line"><a name="l00235"></a><span class="lineno">  235</span>&#160;                        position + 2);</div>
<div class="line"><a name="l00236"></a><span class="lineno">  236</span>&#160;</div>
<div class="line"><a name="l00237"></a><span class="lineno">  237</span>&#160;                <span class="comment">//Speichern der Position in der Datei</span></div>
<div class="line"><a name="l00238"></a><span class="lineno">  238</span>&#160;                out-&gt;resize(out-&gt;size() + 1, atof(substr.c_str()));</div>
<div class="line"><a name="l00239"></a><span class="lineno">  239</span>&#160;            }</div>
<div class="line"><a name="l00240"></a><span class="lineno">  240</span>&#160;</div>
<div class="line"><a name="l00241"></a><span class="lineno">  241</span>&#160;            <span class="comment">//Enthält die Spalte Zeitstempel?</span></div>
<div class="line"><a name="l00242"></a><span class="lineno">  242</span>&#160;            <span class="keywordflow">if</span> (col_index == opts.timecol &amp;&amp; times != NULL) {</div>
<div class="line"><a name="l00243"></a><span class="lineno">  243</span>&#160;</div>
<div class="line"><a name="l00244"></a><span class="lineno">  244</span>&#160;                <span class="comment">//Speichern der Zeitstempel in die Ausgabeliste</span></div>
<div class="line"><a name="l00245"></a><span class="lineno">  245</span>&#160;                times-&gt;resize(times-&gt;size() + 1, atof(substr.c_str()));</div>
<div class="line"><a name="l00246"></a><span class="lineno">  246</span>&#160;            }</div>
<div class="line"><a name="l00247"></a><span class="lineno">  247</span>&#160;</div>
<div class="line"><a name="l00248"></a><span class="lineno">  248</span>&#160;            <span class="comment">//Faserpositionen auslesen?</span></div>
<div class="line"><a name="l00249"></a><span class="lineno">  249</span>&#160;            <span class="keywordflow">if</span> (row_count == opts.startrow) {</div>
<div class="line"><a name="l00250"></a><span class="lineno">  250</span>&#160;</div>
<div class="line"><a name="l00251"></a><span class="lineno">  251</span>&#160;                <span class="comment">//Speichern der Faserpositionen in der Ausgabeliste</span></div>
<div class="line"><a name="l00252"></a><span class="lineno">  252</span>&#160;                out-&gt;resize(out-&gt;size() + 1, atof(substr.c_str()));</div>
<div class="line"><a name="l00253"></a><span class="lineno">  253</span>&#160;            }</div>
<div class="line"><a name="l00254"></a><span class="lineno">  254</span>&#160;</div>
<div class="line"><a name="l00255"></a><span class="lineno">  255</span>&#160;            col_index++;</div>
<div class="line"><a name="l00256"></a><span class="lineno">  256</span>&#160;            <span class="comment">//Mitführen der Position in der Zeile</span></div>
<div class="line"><a name="l00257"></a><span class="lineno">  257</span>&#160;            position += sep_pos + 1;</div>
<div class="line"><a name="l00258"></a><span class="lineno">  258</span>&#160;        }</div>
<div class="line"><a name="l00259"></a><span class="lineno">  259</span>&#160;    }</div>
<div class="line"><a name="l00260"></a><span class="lineno">  260</span>&#160;</div>
<div class="line"><a name="l00266"></a><span class="lineno"><a class="line" href="classOdisiToSdConverter.xhtml#a8c6bc01ae2c063d89dc64c0a7d68c033">  266</a></span>&#160;    <span class="keywordtype">bool</span> <a class="code" href="classOdisiToSdConverter.xhtml#a8c6bc01ae2c063d89dc64c0a7d68c033">readConfiguration</a>(<span class="keywordtype">string</span> binary_path) {</div>
<div class="line"><a name="l00267"></a><span class="lineno">  267</span>&#160;</div>
<div class="line"><a name="l00268"></a><span class="lineno">  268</span>&#160;        ifstream cfgfile;</div>
<div class="line"><a name="l00269"></a><span class="lineno">  269</span>&#160;</div>
<div class="line"><a name="l00270"></a><span class="lineno">  270</span>&#160;        <span class="comment">//Versuch, die Konfiguration im Verzeichnis der Binärdatei zu öffnen</span></div>
<div class="line"><a name="l00271"></a><span class="lineno">  271</span>&#160;        cfgfile.open(<span class="keywordtype">string</span>(<span class="keywordtype">string</span>(binary_path) + <span class="stringliteral">&quot;.conf&quot;</span>));</div>
<div class="line"><a name="l00272"></a><span class="lineno">  272</span>&#160;</div>
<div class="line"><a name="l00273"></a><span class="lineno">  273</span>&#160;        <span class="comment">//Erfolgreich geöffnet?</span></div>
<div class="line"><a name="l00274"></a><span class="lineno">  274</span>&#160;        <span class="keywordflow">if</span> (!cfgfile.is_open()) {</div>
<div class="line"><a name="l00275"></a><span class="lineno">  275</span>&#160;</div>
<div class="line"><a name="l00276"></a><span class="lineno">  276</span>&#160;            <span class="comment">//Testen der Standardpfade für die Konfigurationsdatei</span></div>
<div class="line"><a name="l00277"></a><span class="lineno">  277</span>&#160;            <span class="keywordflow">for</span> (<span class="keywordtype">int</span> i = 0; i &lt; NUMBEROFPATHS; i++) {</div>
<div class="line"><a name="l00278"></a><span class="lineno">  278</span>&#160;                cfgfile.open(configpaths[i]);</div>
<div class="line"><a name="l00279"></a><span class="lineno">  279</span>&#160;                <span class="comment">//Erfolgreich geöffnet?</span></div>
<div class="line"><a name="l00280"></a><span class="lineno">  280</span>&#160;                <span class="keywordflow">if</span> (cfgfile.is_open()) {</div>
<div class="line"><a name="l00281"></a><span class="lineno">  281</span>&#160;                    <span class="keywordflow">break</span>;</div>
<div class="line"><a name="l00282"></a><span class="lineno">  282</span>&#160;                }</div>
<div class="line"><a name="l00283"></a><span class="lineno">  283</span>&#160;            }</div>
<div class="line"><a name="l00284"></a><span class="lineno">  284</span>&#160;</div>
<div class="line"><a name="l00285"></a><span class="lineno">  285</span>&#160;            <span class="comment">//Konfigurationsdatei nirgendwo gefunden?</span></div>
<div class="line"><a name="l00286"></a><span class="lineno">  286</span>&#160;            <span class="keywordflow">if</span> (!cfgfile.is_open()) {</div>
<div class="line"><a name="l00287"></a><span class="lineno">  287</span>&#160;                cout &lt;&lt; <span class="stringliteral">&quot;configuration file odisitosd.conf not found!&quot;</span> &lt;&lt; endl;</div>
<div class="line"><a name="l00288"></a><span class="lineno">  288</span>&#160;                <span class="comment">//Lesen der Konfiguration fehlgeschlagen</span></div>
<div class="line"><a name="l00289"></a><span class="lineno">  289</span>&#160;                <span class="keywordflow">return</span> <span class="keyword">false</span>;</div>
<div class="line"><a name="l00290"></a><span class="lineno">  290</span>&#160;            }</div>
<div class="line"><a name="l00291"></a><span class="lineno">  291</span>&#160;        }</div>
<div class="line"><a name="l00292"></a><span class="lineno">  292</span>&#160;</div>
<div class="line"><a name="l00293"></a><span class="lineno">  293</span>&#160;        <span class="keywordtype">string</span> line;</div>
<div class="line"><a name="l00294"></a><span class="lineno">  294</span>&#160;</div>
<div class="line"><a name="l00295"></a><span class="lineno">  295</span>&#160;        getline(cfgfile, line);</div>
<div class="line"><a name="l00296"></a><span class="lineno">  296</span>&#160;        <span class="comment">//Lesen des Index für die erste Sensordatenzeile</span></div>
<div class="line"><a name="l00297"></a><span class="lineno">  297</span>&#160;        opts.startrow = atoi(<a class="code" href="Importer_8cpp.xhtml#a0dd0686c00e64af27b47b4c16399d747">getTextBlock</a>(line, 0).c_str());</div>
<div class="line"><a name="l00298"></a><span class="lineno">  298</span>&#160;        getline(cfgfile, line);</div>
<div class="line"><a name="l00299"></a><span class="lineno">  299</span>&#160;        <span class="comment">//Lesen, ob Komma durch Punkt ersetzt werden soll</span></div>
<div class="line"><a name="l00300"></a><span class="lineno">  300</span>&#160;        opts.replace_comma_with_point = atoi(<a class="code" href="Importer_8cpp.xhtml#a0dd0686c00e64af27b47b4c16399d747">getTextBlock</a>(line, 0).c_str());</div>
<div class="line"><a name="l00301"></a><span class="lineno">  301</span>&#160;        getline(cfgfile, line);</div>
<div class="line"><a name="l00302"></a><span class="lineno">  302</span>&#160;        <span class="comment">//Maximal zulässige Differenz zum Vorgängerwert für einen gültigen Messwert bei der Fehlerkorrektur</span></div>
<div class="line"><a name="l00303"></a><span class="lineno">  303</span>&#160;        opts.error_threshold = atof(<a class="code" href="Importer_8cpp.xhtml#a0dd0686c00e64af27b47b4c16399d747">getTextBlock</a>(line, 0).c_str());</div>
<div class="line"><a name="l00304"></a><span class="lineno">  304</span>&#160;        getline(cfgfile, line);</div>
<div class="line"><a name="l00305"></a><span class="lineno">  305</span>&#160;        <span class="comment">//Maximale Schrittanzahl zum finden eines gültigen Messwertes bei der Fehlerkorrektur</span></div>
<div class="line"><a name="l00306"></a><span class="lineno">  306</span>&#160;        opts.maxfwcount = atoi(<a class="code" href="Importer_8cpp.xhtml#a0dd0686c00e64af27b47b4c16399d747">getTextBlock</a>(line, 0).c_str());</div>
<div class="line"><a name="l00307"></a><span class="lineno">  307</span>&#160;        getline(cfgfile, line);</div>
<div class="line"><a name="l00308"></a><span class="lineno">  308</span>&#160;        <span class="comment">//Anzahl der Leerzeichen für TAB (Für die Positionsangabe in der Log-Datei)</span></div>
<div class="line"><a name="l00309"></a><span class="lineno">  309</span>&#160;        opts.tab_space_count = atoi(<a class="code" href="Importer_8cpp.xhtml#a0dd0686c00e64af27b47b4c16399d747">getTextBlock</a>(line, 0).c_str()) - 1;</div>
<div class="line"><a name="l00310"></a><span class="lineno">  310</span>&#160;        getline(cfgfile, line);</div>
<div class="line"><a name="l00311"></a><span class="lineno">  311</span>&#160;        <span class="comment">//Temperatur zu Beginn des Versuches (Die Odisi-Daten sind Differenzen zu dieser Anfangstemperatur)</span></div>
<div class="line"><a name="l00312"></a><span class="lineno">  312</span>&#160;        opts.basetemp = atof(<a class="code" href="Importer_8cpp.xhtml#a0dd0686c00e64af27b47b4c16399d747">getTextBlock</a>(line, 0).c_str());</div>
<div class="line"><a name="l00313"></a><span class="lineno">  313</span>&#160;        getline(cfgfile, line);</div>
<div class="line"><a name="l00314"></a><span class="lineno">  314</span>&#160;        <span class="comment">//Position auf der X-Achse spiegeln?</span></div>
<div class="line"><a name="l00315"></a><span class="lineno">  315</span>&#160;        opts.flipobj = atoi(<a class="code" href="Importer_8cpp.xhtml#a0dd0686c00e64af27b47b4c16399d747">getTextBlock</a>(line, 0).c_str());</div>
<div class="line"><a name="l00316"></a><span class="lineno">  316</span>&#160;        getline(cfgfile, line);</div>
<div class="line"><a name="l00317"></a><span class="lineno">  317</span>&#160;        <span class="comment">//Höhe der Faserebene in m</span></div>
<div class="line"><a name="l00318"></a><span class="lineno">  318</span>&#160;        opts.height = atof(<a class="code" href="Importer_8cpp.xhtml#a0dd0686c00e64af27b47b4c16399d747">getTextBlock</a>(line, 0).c_str());</div>
<div class="line"><a name="l00319"></a><span class="lineno">  319</span>&#160;        getline(cfgfile, line);</div>
<div class="line"><a name="l00320"></a><span class="lineno">  320</span>&#160;        <span class="comment">//Position der Messwerte auf der X-Achse um diesen Wert verschieben</span></div>
<div class="line"><a name="l00321"></a><span class="lineno">  321</span>&#160;        opts.objwidth = atof(<a class="code" href="Importer_8cpp.xhtml#a0dd0686c00e64af27b47b4c16399d747">getTextBlock</a>(line, 0).c_str());</div>
<div class="line"><a name="l00322"></a><span class="lineno">  322</span>&#160;</div>
<div class="line"><a name="l00323"></a><span class="lineno">  323</span>&#160;        cfgfile.close();</div>
<div class="line"><a name="l00324"></a><span class="lineno">  324</span>&#160;</div>
<div class="line"><a name="l00325"></a><span class="lineno">  325</span>&#160;        <span class="comment">//Lesen der Konfiguration erfolgreich</span></div>
<div class="line"><a name="l00326"></a><span class="lineno">  326</span>&#160;        <span class="keywordflow">return</span> <span class="keyword">true</span>;</div>
<div class="line"><a name="l00327"></a><span class="lineno">  327</span>&#160;    }</div>
<div class="line"><a name="l00328"></a><span class="lineno">  328</span>&#160;</div>
<div class="line"><a name="l00339"></a><span class="lineno"><a class="line" href="classOdisiToSdConverter.xhtml#ac8d40f3edad9af5004d516809e0e40a2">  339</a></span>&#160;    <span class="keywordtype">bool</span> <a class="code" href="classOdisiToSdConverter.xhtml#ac8d40f3edad9af5004d516809e0e40a2">parseArguments</a>(<span class="keywordtype">int</span> argc, <span class="keywordtype">char</span>* argv[], <span class="keywordtype">string</span>&amp; def_filename,</div>
<div class="line"><a name="l00340"></a><span class="lineno">  340</span>&#160;            <span class="keywordtype">string</span>&amp; data_filename, <span class="keywordtype">string</span>&amp; out_filename, <span class="keywordtype">string</span>&amp; err_filename) {</div>
<div class="line"><a name="l00341"></a><span class="lineno">  341</span>&#160;</div>
<div class="line"><a name="l00342"></a><span class="lineno">  342</span>&#160;        <span class="comment">//Für alle Argumente...</span></div>
<div class="line"><a name="l00343"></a><span class="lineno">  343</span>&#160;        <span class="keywordflow">for</span> (<span class="keywordtype">int</span> i = 1; i &lt; argc; i++) {</div>
<div class="line"><a name="l00344"></a><span class="lineno">  344</span>&#160;</div>
<div class="line"><a name="l00345"></a><span class="lineno">  345</span>&#160;            <span class="comment">//aktuelles Argument</span></div>
<div class="line"><a name="l00346"></a><span class="lineno">  346</span>&#160;            <span class="keywordtype">string</span> arg = string(argv[i]);</div>
<div class="line"><a name="l00347"></a><span class="lineno">  347</span>&#160;</div>
<div class="line"><a name="l00348"></a><span class="lineno">  348</span>&#160;            <span class="comment">//Eingabedatei?</span></div>
<div class="line"><a name="l00349"></a><span class="lineno">  349</span>&#160;            <span class="keywordflow">if</span> (arg == <span class="stringliteral">&quot;-in&quot;</span> || arg == <span class="stringliteral">&quot;-i&quot;</span>) {</div>
<div class="line"><a name="l00350"></a><span class="lineno">  350</span>&#160;                data_filename = string(argv[i + 1]);</div>
<div class="line"><a name="l00351"></a><span class="lineno">  351</span>&#160;                <span class="comment">//Den Argumentwert nicht als Argument einlesen</span></div>
<div class="line"><a name="l00352"></a><span class="lineno">  352</span>&#160;                i++;</div>
<div class="line"><a name="l00353"></a><span class="lineno">  353</span>&#160;                <span class="keywordflow">continue</span>;</div>
<div class="line"><a name="l00354"></a><span class="lineno">  354</span>&#160;            }</div>
<div class="line"><a name="l00355"></a><span class="lineno">  355</span>&#160;</div>
<div class="line"><a name="l00356"></a><span class="lineno">  356</span>&#160;            <span class="comment">//Ausgabedatei?</span></div>
<div class="line"><a name="l00357"></a><span class="lineno">  357</span>&#160;            <span class="keywordflow">if</span> (arg == <span class="stringliteral">&quot;-out&quot;</span> || arg == <span class="stringliteral">&quot;-o&quot;</span>) {</div>
<div class="line"><a name="l00358"></a><span class="lineno">  358</span>&#160;                out_filename = string(argv[i + 1]);</div>
<div class="line"><a name="l00359"></a><span class="lineno">  359</span>&#160;                <span class="comment">//Den Argumentwert nicht als Argument einlesen</span></div>
<div class="line"><a name="l00360"></a><span class="lineno">  360</span>&#160;                i++;</div>
<div class="line"><a name="l00361"></a><span class="lineno">  361</span>&#160;                <span class="keywordflow">continue</span>;</div>
<div class="line"><a name="l00362"></a><span class="lineno">  362</span>&#160;            }</div>
<div class="line"><a name="l00363"></a><span class="lineno">  363</span>&#160;</div>
<div class="line"><a name="l00364"></a><span class="lineno">  364</span>&#160;            <span class="comment">//Sensordefinitionsdatei?</span></div>
<div class="line"><a name="l00365"></a><span class="lineno">  365</span>&#160;            <span class="keywordflow">if</span> (arg == <span class="stringliteral">&quot;-sensor-def&quot;</span> || arg == <span class="stringliteral">&quot;-s&quot;</span>) {</div>
<div class="line"><a name="l00366"></a><span class="lineno">  366</span>&#160;                def_filename = string(argv[i + 1]);</div>
<div class="line"><a name="l00367"></a><span class="lineno">  367</span>&#160;                <span class="comment">//Den Argumentwert nicht als Argument einlesen</span></div>
<div class="line"><a name="l00368"></a><span class="lineno">  368</span>&#160;                i++;</div>
<div class="line"><a name="l00369"></a><span class="lineno">  369</span>&#160;                <span class="keywordflow">continue</span>;</div>
<div class="line"><a name="l00370"></a><span class="lineno">  370</span>&#160;            }</div>
<div class="line"><a name="l00371"></a><span class="lineno">  371</span>&#160;</div>
<div class="line"><a name="l00372"></a><span class="lineno">  372</span>&#160;            <span class="comment">//Logdatei?</span></div>
<div class="line"><a name="l00373"></a><span class="lineno">  373</span>&#160;            <span class="keywordflow">if</span> (arg == <span class="stringliteral">&quot;-log&quot;</span> || arg == <span class="stringliteral">&quot;-l&quot;</span>) {</div>
<div class="line"><a name="l00374"></a><span class="lineno">  374</span>&#160;                err_filename = string(argv[i + 1]);</div>
<div class="line"><a name="l00375"></a><span class="lineno">  375</span>&#160;                <span class="comment">//Den Argumentwert nicht als Argument einlesen</span></div>
<div class="line"><a name="l00376"></a><span class="lineno">  376</span>&#160;                i++;</div>
<div class="line"><a name="l00377"></a><span class="lineno">  377</span>&#160;                <span class="keywordflow">continue</span>;</div>
<div class="line"><a name="l00378"></a><span class="lineno">  378</span>&#160;            }</div>
<div class="line"><a name="l00379"></a><span class="lineno">  379</span>&#160;</div>
<div class="line"><a name="l00380"></a><span class="lineno">  380</span>&#160;            <span class="comment">//Zeitl. Schrittweite?</span></div>
<div class="line"><a name="l00381"></a><span class="lineno">  381</span>&#160;            <span class="keywordflow">if</span> (arg == <span class="stringliteral">&quot;-step-time&quot;</span>) {</div>
<div class="line"><a name="l00382"></a><span class="lineno">  382</span>&#160;                opts.time_step_delta = atoi(argv[i + 1]);</div>
<div class="line"><a name="l00383"></a><span class="lineno">  383</span>&#160;</div>
<div class="line"><a name="l00384"></a><span class="lineno">  384</span>&#160;                <span class="comment">//Gültige Schrittweite?</span></div>
<div class="line"><a name="l00385"></a><span class="lineno">  385</span>&#160;                <span class="keywordflow">if</span> (opts.time_step_delta &lt; 1) {</div>
<div class="line"><a name="l00386"></a><span class="lineno">  386</span>&#160;                    cerr &lt;&lt; <span class="stringliteral">&quot;-step-time must be &gt;0!&quot;</span> &lt;&lt; endl;</div>
<div class="line"><a name="l00387"></a><span class="lineno">  387</span>&#160;                    <span class="keywordflow">return</span> <span class="keyword">false</span>;</div>
<div class="line"><a name="l00388"></a><span class="lineno">  388</span>&#160;                }</div>
<div class="line"><a name="l00389"></a><span class="lineno">  389</span>&#160;</div>
<div class="line"><a name="l00390"></a><span class="lineno">  390</span>&#160;                <span class="comment">//Den Argumentwert nicht als Argument einlesen</span></div>
<div class="line"><a name="l00391"></a><span class="lineno">  391</span>&#160;                i++;</div>
<div class="line"><a name="l00392"></a><span class="lineno">  392</span>&#160;                <span class="keywordflow">continue</span>;</div>
<div class="line"><a name="l00393"></a><span class="lineno">  393</span>&#160;            }</div>
<div class="line"><a name="l00394"></a><span class="lineno">  394</span>&#160;</div>
<div class="line"><a name="l00395"></a><span class="lineno">  395</span>&#160;            <span class="comment">//Örtliche Schrittweite auf der Faser?</span></div>
<div class="line"><a name="l00396"></a><span class="lineno">  396</span>&#160;            <span class="keywordflow">if</span> (arg == <span class="stringliteral">&quot;-step-fiber&quot;</span>) {</div>
<div class="line"><a name="l00397"></a><span class="lineno">  397</span>&#160;                opts.fiber_step_delta = atoi(argv[i + 1]);</div>
<div class="line"><a name="l00398"></a><span class="lineno">  398</span>&#160;</div>
<div class="line"><a name="l00399"></a><span class="lineno">  399</span>&#160;                <span class="comment">//Gültige Schrittweite?</span></div>
<div class="line"><a name="l00400"></a><span class="lineno">  400</span>&#160;                <span class="keywordflow">if</span> (opts.fiber_step_delta &lt; 1) {</div>
<div class="line"><a name="l00401"></a><span class="lineno">  401</span>&#160;                    cerr &lt;&lt; <span class="stringliteral">&quot;-step-fiber must be &gt;0!&quot;</span> &lt;&lt; endl;</div>
<div class="line"><a name="l00402"></a><span class="lineno">  402</span>&#160;                    <span class="keywordflow">return</span> <span class="keyword">false</span>;</div>
<div class="line"><a name="l00403"></a><span class="lineno">  403</span>&#160;                }</div>
<div class="line"><a name="l00404"></a><span class="lineno">  404</span>&#160;</div>
<div class="line"><a name="l00405"></a><span class="lineno">  405</span>&#160;                <span class="comment">//Den Argumentwert nicht als Argument einlesen</span></div>
<div class="line"><a name="l00406"></a><span class="lineno">  406</span>&#160;                i++;</div>
<div class="line"><a name="l00407"></a><span class="lineno">  407</span>&#160;                <span class="keywordflow">continue</span>;</div>
<div class="line"><a name="l00408"></a><span class="lineno">  408</span>&#160;            }</div>
<div class="line"><a name="l00409"></a><span class="lineno">  409</span>&#160;</div>
<div class="line"><a name="l00410"></a><span class="lineno">  410</span>&#160;            <span class="comment">//Höhe der Faserebene?</span></div>
<div class="line"><a name="l00411"></a><span class="lineno">  411</span>&#160;            <span class="keywordflow">if</span> (arg == <span class="stringliteral">&quot;-height&quot;</span>) {</div>
<div class="line"><a name="l00412"></a><span class="lineno">  412</span>&#160;                opts.height = atof(argv[i + 1]);</div>
<div class="line"><a name="l00413"></a><span class="lineno">  413</span>&#160;                <span class="comment">//Den Argumentwert nicht als Argument einlesen</span></div>
<div class="line"><a name="l00414"></a><span class="lineno">  414</span>&#160;                i++;</div>
<div class="line"><a name="l00415"></a><span class="lineno">  415</span>&#160;                <span class="keywordflow">continue</span>;</div>
<div class="line"><a name="l00416"></a><span class="lineno">  416</span>&#160;            }</div>
<div class="line"><a name="l00417"></a><span class="lineno">  417</span>&#160;</div>
<div class="line"><a name="l00418"></a><span class="lineno">  418</span>&#160;            <span class="comment">//Maximaler Zeitstempel?</span></div>
<div class="line"><a name="l00419"></a><span class="lineno">  419</span>&#160;            <span class="keywordflow">if</span> (arg == <span class="stringliteral">&quot;-max-time&quot;</span>) {</div>
<div class="line"><a name="l00420"></a><span class="lineno">  420</span>&#160;                opts.max_time = atof(argv[i + 1]);</div>
<div class="line"><a name="l00421"></a><span class="lineno">  421</span>&#160;</div>
<div class="line"><a name="l00422"></a><span class="lineno">  422</span>&#160;                <span class="comment">//Standard bei Fehleingabe</span></div>
<div class="line"><a name="l00423"></a><span class="lineno">  423</span>&#160;                <span class="keywordflow">if</span> (opts.max_time &lt; 0) {</div>
<div class="line"><a name="l00424"></a><span class="lineno">  424</span>&#160;                    opts.max_time = -1;</div>
<div class="line"><a name="l00425"></a><span class="lineno">  425</span>&#160;                }</div>
<div class="line"><a name="l00426"></a><span class="lineno">  426</span>&#160;                <span class="comment">//Den Argumentwert nicht als Argument einlesen</span></div>
<div class="line"><a name="l00427"></a><span class="lineno">  427</span>&#160;                i++;</div>
<div class="line"><a name="l00428"></a><span class="lineno">  428</span>&#160;                <span class="keywordflow">continue</span>;</div>
<div class="line"><a name="l00429"></a><span class="lineno">  429</span>&#160;            }</div>
<div class="line"><a name="l00430"></a><span class="lineno">  430</span>&#160;</div>
<div class="line"><a name="l00431"></a><span class="lineno">  431</span>&#160;            <span class="comment">//Minimaler Zeitstempel?</span></div>
<div class="line"><a name="l00432"></a><span class="lineno">  432</span>&#160;            <span class="keywordflow">if</span> (arg == <span class="stringliteral">&quot;-min-time&quot;</span>) {</div>
<div class="line"><a name="l00433"></a><span class="lineno">  433</span>&#160;                opts.min_time = atof(argv[i + 1]);</div>
<div class="line"><a name="l00434"></a><span class="lineno">  434</span>&#160;</div>
<div class="line"><a name="l00435"></a><span class="lineno">  435</span>&#160;                <span class="comment">//Standard bei Fehleingabe</span></div>
<div class="line"><a name="l00436"></a><span class="lineno">  436</span>&#160;                <span class="keywordflow">if</span> (opts.min_time &lt; 0) {</div>
<div class="line"><a name="l00437"></a><span class="lineno">  437</span>&#160;                    opts.min_time = -1;</div>
<div class="line"><a name="l00438"></a><span class="lineno">  438</span>&#160;                }</div>
<div class="line"><a name="l00439"></a><span class="lineno">  439</span>&#160;</div>
<div class="line"><a name="l00440"></a><span class="lineno">  440</span>&#160;                <span class="comment">//Den Argumentwert nicht als Argument einlesen</span></div>
<div class="line"><a name="l00441"></a><span class="lineno">  441</span>&#160;                i++;</div>
<div class="line"><a name="l00442"></a><span class="lineno">  442</span>&#160;                <span class="keywordflow">continue</span>;</div>
<div class="line"><a name="l00443"></a><span class="lineno">  443</span>&#160;            }</div>
<div class="line"><a name="l00444"></a><span class="lineno">  444</span>&#160;</div>
<div class="line"><a name="l00445"></a><span class="lineno">  445</span>&#160;            <span class="comment">//Hilfetext?</span></div>
<div class="line"><a name="l00446"></a><span class="lineno">  446</span>&#160;            <span class="keywordflow">if</span> (arg == <span class="stringliteral">&quot;-h&quot;</span>) {</div>
<div class="line"><a name="l00447"></a><span class="lineno">  447</span>&#160;                cout</div>
<div class="line"><a name="l00448"></a><span class="lineno">  448</span>&#160;                        &lt;&lt; <span class="stringliteral">&quot;odisitosd converts data files from the odisi sensor into timed sensor data (tsd) for SimpleAnalyzer.\n&quot;</span></div>
<div class="line"><a name="l00449"></a><span class="lineno">  449</span>&#160;                        &lt;&lt; <span class="stringliteral">&quot;usage: mergetsd ARGUMENT1 VALUE1 ARGUMENT2 VALUE2...\n&quot;</span></div>
<div class="line"><a name="l00450"></a><span class="lineno">  450</span>&#160;                        &lt;&lt; <span class="stringliteral">&quot;program arguments: \n&quot;</span></div>
<div class="line"><a name="l00451"></a><span class="lineno">  451</span>&#160;                        &lt;&lt; <span class="stringliteral">&quot;\t-i,\t-in\t\tpath to csv input file\n\n&quot;</span></div>
<div class="line"><a name="l00452"></a><span class="lineno">  452</span>&#160;                        &lt;&lt; <span class="stringliteral">&quot;\t-o,\t-out\t\tpath to tsd output file\n\n&quot;</span></div>
<div class="line"><a name="l00453"></a><span class="lineno">  453</span>&#160;                        &lt;&lt; <span class="stringliteral">&quot;\t-s,\t-sensor-def\tpath to sensor definition file\n\n&quot;</span></div>
<div class="line"><a name="l00454"></a><span class="lineno">  454</span>&#160;                        &lt;&lt; <span class="stringliteral">&quot;\t-l,\t-log\t\tpath to log file (optional)\n\n&quot;</span></div>
<div class="line"><a name="l00455"></a><span class="lineno">  455</span>&#160;                        &lt;&lt; <span class="stringliteral">&quot;\t\t-height\t\theight of the fiber level (optional, default 0.0)\n\n&quot;</span></div>
<div class="line"><a name="l00456"></a><span class="lineno">  456</span>&#160;                        &lt;&lt; <span class="stringliteral">&quot;\t\t-step-time\tstepwidth in time (take every n-th data set) (optional, default 1)\n\n&quot;</span></div>
<div class="line"><a name="l00457"></a><span class="lineno">  457</span>&#160;                        &lt;&lt; <span class="stringliteral">&quot;\t\t-step-fiber\tstepwidth on fiber (take every n-th measuring point) (optional, default 1)\n\n&quot;</span></div>
<div class="line"><a name="l00458"></a><span class="lineno">  458</span>&#160;                        &lt;&lt; <span class="stringliteral">&quot;\t\t-min-time\tread only from this time on (optional, default -1 (means no restriction))\n\n&quot;</span></div>
<div class="line"><a name="l00459"></a><span class="lineno">  459</span>&#160;                        &lt;&lt; <span class="stringliteral">&quot;\t\t-max-time\tread only until this time (optional, default -1 (means no restriction))\n\n&quot;</span></div>
<div class="line"><a name="l00460"></a><span class="lineno">  460</span>&#160;                        &lt;&lt; <span class="stringliteral">&quot;\t-h,\t-help\t\tprint this help\n\n&quot;</span></div>
<div class="line"><a name="l00461"></a><span class="lineno">  461</span>&#160;                        &lt;&lt; <span class="stringliteral">&quot;configuration details can be set in configuration file: odisitosd.conf\n&quot;</span>;</div>
<div class="line"><a name="l00462"></a><span class="lineno">  462</span>&#160;</div>
<div class="line"><a name="l00463"></a><span class="lineno">  463</span>&#160;                <span class="comment">//Kein weiterer Programmablauf nach Hilfetext.</span></div>
<div class="line"><a name="l00464"></a><span class="lineno">  464</span>&#160;                <span class="keywordflow">return</span> <span class="keyword">false</span>;</div>
<div class="line"><a name="l00465"></a><span class="lineno">  465</span>&#160;            }</div>
<div class="line"><a name="l00466"></a><span class="lineno">  466</span>&#160;            cout &lt;&lt; <span class="stringliteral">&quot;invalid argument: &quot;</span> &lt;&lt; argv[i] &lt;&lt; endl;</div>
<div class="line"><a name="l00467"></a><span class="lineno">  467</span>&#160;        }</div>
<div class="line"><a name="l00468"></a><span class="lineno">  468</span>&#160;        <span class="keywordflow">return</span> <span class="keyword">true</span>;</div>
<div class="line"><a name="l00469"></a><span class="lineno">  469</span>&#160;    }</div>
<div class="line"><a name="l00470"></a><span class="lineno">  470</span>&#160;</div>
<div class="line"><a name="l00481"></a><span class="lineno"><a class="line" href="classOdisiToSdConverter.xhtml#a8db961a716d43b3d4de4f2e4e19b0706">  481</a></span>&#160;    <span class="keywordtype">bool</span> <a class="code" href="classOdisiToSdConverter.xhtml#a8db961a716d43b3d4de4f2e4e19b0706">readSensorDefinitions</a>(<span class="keywordtype">string</span> path, <a class="code" href="classstd_1_1vector.xhtml">vector&lt;float&gt;</a>&amp; inlist,</div>
<div class="line"><a name="l00482"></a><span class="lineno">  482</span>&#160;            <a class="code" href="classstd_1_1vector.xhtml">vector&lt;float&gt;</a>&amp; outlist, <a class="code" href="classstd_1_1vector.xhtml">vector&lt;float&gt;</a>&amp; in_x, <a class="code" href="classstd_1_1vector.xhtml">vector&lt;float&gt;</a>&amp; out_x,</div>
<div class="line"><a name="l00483"></a><span class="lineno">  483</span>&#160;            <a class="code" href="classstd_1_1vector.xhtml">vector&lt;bool&gt;</a>&amp; dirlist) {</div>
<div class="line"><a name="l00484"></a><span class="lineno">  484</span>&#160;</div>
<div class="line"><a name="l00485"></a><span class="lineno">  485</span>&#160;        ifstream deffile;</div>
<div class="line"><a name="l00486"></a><span class="lineno">  486</span>&#160;        <span class="comment">//Öffnen der Sensordefinitionsdatei</span></div>
<div class="line"><a name="l00487"></a><span class="lineno">  487</span>&#160;        deffile.open(path);</div>
<div class="line"><a name="l00488"></a><span class="lineno">  488</span>&#160;</div>
<div class="line"><a name="l00489"></a><span class="lineno">  489</span>&#160;        <span class="comment">//Öffnen der Datei fehlgeschlagen?</span></div>
<div class="line"><a name="l00490"></a><span class="lineno">  490</span>&#160;        <span class="keywordflow">if</span> (!deffile.is_open()) {</div>
<div class="line"><a name="l00491"></a><span class="lineno">  491</span>&#160;            cerr &lt;&lt; <span class="stringliteral">&quot;sensor definition file \&quot;&quot;</span> &lt;&lt; path &lt;&lt; <span class="stringliteral">&quot;\&quot; not found!&quot;</span></div>
<div class="line"><a name="l00492"></a><span class="lineno">  492</span>&#160;                    &lt;&lt; endl;</div>
<div class="line"><a name="l00493"></a><span class="lineno">  493</span>&#160;            <span class="comment">//Laden der Sensordefinitionen fehlgeschlagen</span></div>
<div class="line"><a name="l00494"></a><span class="lineno">  494</span>&#160;            <span class="keywordflow">return</span> <span class="keyword">false</span>;</div>
<div class="line"><a name="l00495"></a><span class="lineno">  495</span>&#160;        }</div>
<div class="line"><a name="l00496"></a><span class="lineno">  496</span>&#160;</div>
<div class="line"><a name="l00497"></a><span class="lineno">  497</span>&#160;        <span class="keywordtype">string</span> line;</div>
<div class="line"><a name="l00498"></a><span class="lineno">  498</span>&#160;</div>
<div class="line"><a name="l00499"></a><span class="lineno">  499</span>&#160;        <span class="comment">//Alle Zeilen...</span></div>
<div class="line"><a name="l00500"></a><span class="lineno">  500</span>&#160;        <span class="keywordflow">while</span> (deffile.good()) {</div>
<div class="line"><a name="l00501"></a><span class="lineno">  501</span>&#160;</div>
<div class="line"><a name="l00502"></a><span class="lineno">  502</span>&#160;            getline(deffile, line);</div>
<div class="line"><a name="l00503"></a><span class="lineno">  503</span>&#160;</div>
<div class="line"><a name="l00504"></a><span class="lineno">  504</span>&#160;            <span class="comment">//Leerzeilen überspringen</span></div>
<div class="line"><a name="l00505"></a><span class="lineno">  505</span>&#160;            <span class="keywordflow">if</span> (line.length() == 0) {</div>
<div class="line"><a name="l00506"></a><span class="lineno">  506</span>&#160;                <span class="keywordflow">continue</span>;</div>
<div class="line"><a name="l00507"></a><span class="lineno">  507</span>&#160;            }</div>
<div class="line"><a name="l00508"></a><span class="lineno">  508</span>&#160;</div>
<div class="line"><a name="l00509"></a><span class="lineno">  509</span>&#160;            <span class="comment">//Kommentarzeilen überspringen</span></div>
<div class="line"><a name="l00510"></a><span class="lineno">  510</span>&#160;            <span class="keywordflow">if</span> (line.at(0) == <span class="charliteral">&#39;#&#39;</span>) {</div>
<div class="line"><a name="l00511"></a><span class="lineno">  511</span>&#160;                <span class="keywordflow">continue</span>;</div>
<div class="line"><a name="l00512"></a><span class="lineno">  512</span>&#160;            }</div>
<div class="line"><a name="l00513"></a><span class="lineno">  513</span>&#160;</div>
<div class="line"><a name="l00514"></a><span class="lineno">  514</span>&#160;            <span class="comment">//Fasereingang</span></div>
<div class="line"><a name="l00515"></a><span class="lineno">  515</span>&#160;            <span class="keywordflow">if</span> (line.at(0) == <span class="charliteral">&#39;i&#39;</span>) {</div>
<div class="line"><a name="l00516"></a><span class="lineno">  516</span>&#160;                <span class="comment">//Position auf der Faser speichern</span></div>
<div class="line"><a name="l00517"></a><span class="lineno">  517</span>&#160;                inlist.resize(inlist.size() + 1,</div>
<div class="line"><a name="l00518"></a><span class="lineno">  518</span>&#160;                        atof(<a class="code" href="Importer_8cpp.xhtml#a0dd0686c00e64af27b47b4c16399d747">getTextBlock</a>(line, 1).c_str()));</div>
<div class="line"><a name="l00519"></a><span class="lineno">  519</span>&#160;                <span class="comment">//X-Position speichern</span></div>
<div class="line"><a name="l00520"></a><span class="lineno">  520</span>&#160;                in_x.resize(in_x.size() + 1,</div>
<div class="line"><a name="l00521"></a><span class="lineno">  521</span>&#160;                        atof(<a class="code" href="Importer_8cpp.xhtml#a0dd0686c00e64af27b47b4c16399d747">getTextBlock</a>(line, 2).c_str()));</div>
<div class="line"><a name="l00522"></a><span class="lineno">  522</span>&#160;</div>
<div class="line"><a name="l00523"></a><span class="lineno">  523</span>&#160;                <span class="comment">//Soll das Objekt gespiegelt werden?</span></div>
<div class="line"><a name="l00524"></a><span class="lineno">  524</span>&#160;                <span class="keywordflow">if</span> (opts.flipobj) {</div>
<div class="line"><a name="l00525"></a><span class="lineno">  525</span>&#160;                    in_x.at(in_x.size() - 1) = opts.objwidth</div>
<div class="line"><a name="l00526"></a><span class="lineno">  526</span>&#160;                            - in_x.at(in_x.size() - 1);</div>
<div class="line"><a name="l00527"></a><span class="lineno">  527</span>&#160;                }</div>
<div class="line"><a name="l00528"></a><span class="lineno">  528</span>&#160;            }</div>
<div class="line"><a name="l00529"></a><span class="lineno">  529</span>&#160;</div>
<div class="line"><a name="l00530"></a><span class="lineno">  530</span>&#160;            <span class="comment">//Faserausgang</span></div>
<div class="line"><a name="l00531"></a><span class="lineno">  531</span>&#160;            <span class="keywordflow">if</span> (line.at(0) == <span class="charliteral">&#39;o&#39;</span>) {</div>
<div class="line"><a name="l00532"></a><span class="lineno">  532</span>&#160;                <span class="comment">//Position auf der Faser speichern</span></div>
<div class="line"><a name="l00533"></a><span class="lineno">  533</span>&#160;                outlist.resize(outlist.size() + 1,</div>
<div class="line"><a name="l00534"></a><span class="lineno">  534</span>&#160;                        atof(<a class="code" href="Importer_8cpp.xhtml#a0dd0686c00e64af27b47b4c16399d747">getTextBlock</a>(line, 1).c_str()));</div>
<div class="line"><a name="l00535"></a><span class="lineno">  535</span>&#160;                <span class="comment">//X-Position speichern</span></div>
<div class="line"><a name="l00536"></a><span class="lineno">  536</span>&#160;                out_x.resize(out_x.size() + 1,</div>
<div class="line"><a name="l00537"></a><span class="lineno">  537</span>&#160;                        atof(<a class="code" href="Importer_8cpp.xhtml#a0dd0686c00e64af27b47b4c16399d747">getTextBlock</a>(line, 2).c_str()));</div>
<div class="line"><a name="l00538"></a><span class="lineno">  538</span>&#160;</div>
<div class="line"><a name="l00539"></a><span class="lineno">  539</span>&#160;                <span class="comment">//Soll das Objekt gespiegelt werden?</span></div>
<div class="line"><a name="l00540"></a><span class="lineno">  540</span>&#160;                <span class="keywordflow">if</span> (opts.flipobj) {</div>
<div class="line"><a name="l00541"></a><span class="lineno">  541</span>&#160;                    out_x.at(out_x.size() - 1) = opts.objwidth</div>
<div class="line"><a name="l00542"></a><span class="lineno">  542</span>&#160;                            - out_x.at(out_x.size() - 1);</div>
<div class="line"><a name="l00543"></a><span class="lineno">  543</span>&#160;                }</div>
<div class="line"><a name="l00544"></a><span class="lineno">  544</span>&#160;            }</div>
<div class="line"><a name="l00545"></a><span class="lineno">  545</span>&#160;</div>
<div class="line"><a name="l00546"></a><span class="lineno">  546</span>&#160;            <span class="comment">//Faserrichtungen</span></div>
<div class="line"><a name="l00547"></a><span class="lineno">  547</span>&#160;            <span class="keywordflow">if</span> (line.at(0) == <span class="charliteral">&#39;d&#39;</span>) {</div>
<div class="line"><a name="l00548"></a><span class="lineno">  548</span>&#160;                <span class="comment">//Gesamtwert auslesen</span></div>
<div class="line"><a name="l00549"></a><span class="lineno">  549</span>&#160;                <span class="keywordtype">string</span> dirs = <a class="code" href="Importer_8cpp.xhtml#a0dd0686c00e64af27b47b4c16399d747">getTextBlock</a>(line, 1);</div>
<div class="line"><a name="l00550"></a><span class="lineno">  550</span>&#160;</div>
<div class="line"><a name="l00551"></a><span class="lineno">  551</span>&#160;                cout &lt;&lt; <span class="stringliteral">&quot;fibre directions: &quot;</span> &lt;&lt; endl;</div>
<div class="line"><a name="l00552"></a><span class="lineno">  552</span>&#160;</div>
<div class="line"><a name="l00553"></a><span class="lineno">  553</span>&#160;                <span class="comment">//Einzelne Richtungen auslesen</span></div>
<div class="line"><a name="l00554"></a><span class="lineno">  554</span>&#160;                <span class="keywordflow">for</span> (<span class="keywordtype">int</span> i = 0; i &lt; int(dirs.size()); i++) {</div>
<div class="line"><a name="l00555"></a><span class="lineno">  555</span>&#160;                    dirlist.resize(dirlist.size() + 1,</div>
<div class="line"><a name="l00556"></a><span class="lineno">  556</span>&#160;                            (dirs.at(i) == <span class="charliteral">&#39;+&#39;</span>) ? <span class="keyword">false</span> : <span class="keyword">true</span>);</div>
<div class="line"><a name="l00557"></a><span class="lineno">  557</span>&#160;                    cout &lt;&lt; ((dirs.at(i) == <span class="charliteral">&#39;+&#39;</span>) ? <span class="stringliteral">&quot;►&quot;</span> : <span class="stringliteral">&quot;◄&quot;</span>) &lt;&lt; endl;</div>
<div class="line"><a name="l00558"></a><span class="lineno">  558</span>&#160;                }</div>
<div class="line"><a name="l00559"></a><span class="lineno">  559</span>&#160;</div>
<div class="line"><a name="l00560"></a><span class="lineno">  560</span>&#160;                cout &lt;&lt; endl;</div>
<div class="line"><a name="l00561"></a><span class="lineno">  561</span>&#160;            }</div>
<div class="line"><a name="l00562"></a><span class="lineno">  562</span>&#160;        }</div>
<div class="line"><a name="l00563"></a><span class="lineno">  563</span>&#160;</div>
<div class="line"><a name="l00564"></a><span class="lineno">  564</span>&#160;        <span class="comment">//Gleiche Anzahl an Faser-Ein- und Ausgang</span></div>
<div class="line"><a name="l00565"></a><span class="lineno">  565</span>&#160;        <span class="keywordflow">if</span> (outlist.size() != inlist.size()) {</div>
<div class="line"><a name="l00566"></a><span class="lineno">  566</span>&#160;            cerr &lt;&lt; <span class="stringliteral">&quot;number of fiber in and outs not equal! (in: &quot;</span></div>
<div class="line"><a name="l00567"></a><span class="lineno">  567</span>&#160;                    &lt;&lt; inlist.size() &lt;&lt; <span class="stringliteral">&quot; out: &quot;</span> &lt;&lt; outlist.size() &lt;&lt; <span class="stringliteral">&quot;)&quot;</span></div>
<div class="line"><a name="l00568"></a><span class="lineno">  568</span>&#160;                    &lt;&lt; endl;</div>
<div class="line"><a name="l00569"></a><span class="lineno">  569</span>&#160;            <span class="keywordflow">return</span> <span class="keyword">false</span>;</div>
<div class="line"><a name="l00570"></a><span class="lineno">  570</span>&#160;        }</div>
<div class="line"><a name="l00571"></a><span class="lineno">  571</span>&#160;</div>
<div class="line"><a name="l00572"></a><span class="lineno">  572</span>&#160;        deffile.close();</div>
<div class="line"><a name="l00573"></a><span class="lineno">  573</span>&#160;</div>
<div class="line"><a name="l00574"></a><span class="lineno">  574</span>&#160;        <span class="comment">//Laden der Sensordefinitionen erfolgreich</span></div>
<div class="line"><a name="l00575"></a><span class="lineno">  575</span>&#160;        <span class="keywordflow">return</span> <span class="keyword">true</span>;</div>
<div class="line"><a name="l00576"></a><span class="lineno">  576</span>&#160;    }</div>
<div class="line"><a name="l00577"></a><span class="lineno">  577</span>&#160;</div>
<div class="line"><a name="l00587"></a><span class="lineno"><a class="line" href="classOdisiToSdConverter.xhtml#a270932ed908757ac477370eef64db442">  587</a></span>&#160;    <span class="keywordtype">bool</span> <a class="code" href="classOdisiToSdConverter.xhtml#a270932ed908757ac477370eef64db442">readInputFile</a>(<span class="keywordtype">string</span> path, <a class="code" href="classstd_1_1vector.xhtml">vector</a>&lt;<a class="code" href="classstd_1_1vector.xhtml">vector&lt;float&gt;</a> &gt;&amp; values,</div>
<div class="line"><a name="l00588"></a><span class="lineno">  588</span>&#160;            <a class="code" href="classstd_1_1vector.xhtml">vector</a>&lt;<a class="code" href="classstd_1_1vector.xhtml">vector&lt;int&gt;</a> &gt;&amp; debug_positions, <a class="code" href="classstd_1_1vector.xhtml">vector&lt;float&gt;</a>&amp; times,</div>
<div class="line"><a name="l00589"></a><span class="lineno">  589</span>&#160;            <a class="code" href="classstd_1_1vector.xhtml">vector&lt;float&gt;</a>&amp; lin_positions) {</div>
<div class="line"><a name="l00590"></a><span class="lineno">  590</span>&#160;</div>
<div class="line"><a name="l00591"></a><span class="lineno">  591</span>&#160;        ifstream file;</div>
<div class="line"><a name="l00592"></a><span class="lineno">  592</span>&#160;        <span class="comment">//Öffnen der Sensordefinitionsdatei</span></div>
<div class="line"><a name="l00593"></a><span class="lineno">  593</span>&#160;        file.open(path);</div>
<div class="line"><a name="l00594"></a><span class="lineno">  594</span>&#160;</div>
<div class="line"><a name="l00595"></a><span class="lineno">  595</span>&#160;        <span class="comment">//Öffnen der Datei fehlgeschlagen?</span></div>
<div class="line"><a name="l00596"></a><span class="lineno">  596</span>&#160;        <span class="keywordflow">if</span> (!file.is_open()) {</div>
<div class="line"><a name="l00597"></a><span class="lineno">  597</span>&#160;            cerr &lt;&lt; <span class="stringliteral">&quot;input file \&quot;&quot;</span> &lt;&lt; path &lt;&lt; <span class="stringliteral">&quot;\&quot; not found!&quot;</span> &lt;&lt; endl;</div>
<div class="line"><a name="l00598"></a><span class="lineno">  598</span>&#160;            <span class="comment">//Laden der Sensordefinitionen fehlgeschlagen</span></div>
<div class="line"><a name="l00599"></a><span class="lineno">  599</span>&#160;            <span class="keywordflow">return</span> <span class="keyword">false</span>;</div>
<div class="line"><a name="l00600"></a><span class="lineno">  600</span>&#160;        }</div>
<div class="line"><a name="l00601"></a><span class="lineno">  601</span>&#160;</div>
<div class="line"><a name="l00602"></a><span class="lineno">  602</span>&#160;        <span class="comment">//Index der aktuellen Zeile</span></div>
<div class="line"><a name="l00603"></a><span class="lineno">  603</span>&#160;        <span class="keywordtype">size_t</span> row_index = 0;</div>
<div class="line"><a name="l00604"></a><span class="lineno">  604</span>&#160;        <span class="comment">//aktuelle Zeile</span></div>
<div class="line"><a name="l00605"></a><span class="lineno">  605</span>&#160;        <span class="keywordtype">string</span> line;</div>
<div class="line"><a name="l00606"></a><span class="lineno">  606</span>&#160;        <span class="comment">//Sind die Positionen auf der Faser für die Spalten eingelesen?</span></div>
<div class="line"><a name="l00607"></a><span class="lineno">  607</span>&#160;        <span class="keywordtype">bool</span> positions_read = <span class="keyword">false</span>;</div>
<div class="line"><a name="l00608"></a><span class="lineno">  608</span>&#160;</div>
<div class="line"><a name="l00609"></a><span class="lineno">  609</span>&#160;        <span class="comment">//Für die gesamte Datei...</span></div>
<div class="line"><a name="l00610"></a><span class="lineno">  610</span>&#160;        <span class="keywordflow">while</span> (file.good()) {</div>
<div class="line"><a name="l00611"></a><span class="lineno">  611</span>&#160;</div>
<div class="line"><a name="l00612"></a><span class="lineno">  612</span>&#160;            getline(file, line);</div>
<div class="line"><a name="l00613"></a><span class="lineno">  613</span>&#160;</div>
<div class="line"><a name="l00614"></a><span class="lineno">  614</span>&#160;            <span class="comment">//Zeile im relevanten Bereich?</span></div>
<div class="line"><a name="l00615"></a><span class="lineno">  615</span>&#160;            <span class="keywordflow">if</span> (row_index &gt;= opts.startrow) {</div>
<div class="line"><a name="l00616"></a><span class="lineno">  616</span>&#160;</div>
<div class="line"><a name="l00617"></a><span class="lineno">  617</span>&#160;                <span class="comment">//Leerzeilen ignorieren</span></div>
<div class="line"><a name="l00618"></a><span class="lineno">  618</span>&#160;                <span class="keywordflow">if</span> (line == (<span class="stringliteral">&quot;&quot;</span>)) {</div>
<div class="line"><a name="l00619"></a><span class="lineno">  619</span>&#160;                    <span class="keywordflow">continue</span>;</div>
<div class="line"><a name="l00620"></a><span class="lineno">  620</span>&#160;                }</div>
<div class="line"><a name="l00621"></a><span class="lineno">  621</span>&#160;</div>
<div class="line"><a name="l00622"></a><span class="lineno">  622</span>&#160;                <span class="comment">//Die Positionen auf der Faser für die Spalten auslesen?</span></div>
<div class="line"><a name="l00623"></a><span class="lineno">  623</span>&#160;                <span class="keywordflow">if</span> (!positions_read) {</div>
<div class="line"><a name="l00624"></a><span class="lineno">  624</span>&#160;                    <span class="comment">//Einlesen der Positionen auf der Faser</span></div>
<div class="line"><a name="l00625"></a><span class="lineno">  625</span>&#160;                    parseLine(line, &amp;lin_positions, NULL, NULL, row_index);</div>
<div class="line"><a name="l00626"></a><span class="lineno">  626</span>&#160;                    positions_read = <span class="keyword">true</span>;</div>
<div class="line"><a name="l00627"></a><span class="lineno">  627</span>&#160;                } <span class="keywordflow">else</span> {</div>
<div class="line"><a name="l00628"></a><span class="lineno">  628</span>&#160;</div>
<div class="line"><a name="l00629"></a><span class="lineno">  629</span>&#160;                    values.resize(values.size() + 1);</div>
<div class="line"><a name="l00630"></a><span class="lineno">  630</span>&#160;                    debug_positions.resize(debug_positions.size() + 1);</div>
<div class="line"><a name="l00631"></a><span class="lineno">  631</span>&#160;                    <span class="comment">//Einlesen der aktuellen Zeile</span></div>
<div class="line"><a name="l00632"></a><span class="lineno">  632</span>&#160;                    parseLine(line, &amp;values.at(values.size() - 1), &amp;times,</div>
<div class="line"><a name="l00633"></a><span class="lineno">  633</span>&#160;                            &amp;debug_positions.at(debug_positions.size() - 1),</div>
<div class="line"><a name="l00634"></a><span class="lineno">  634</span>&#160;                            row_index);</div>
<div class="line"><a name="l00635"></a><span class="lineno">  635</span>&#160;                }</div>
<div class="line"><a name="l00636"></a><span class="lineno">  636</span>&#160;</div>
<div class="line"><a name="l00637"></a><span class="lineno">  637</span>&#160;                <span class="comment">//Ist der Zeitstempel kleiner als der minimale Zeitstempel?</span></div>
<div class="line"><a name="l00638"></a><span class="lineno">  638</span>&#160;                <span class="keywordflow">if</span> (times.size() &gt; 0</div>
<div class="line"><a name="l00639"></a><span class="lineno">  639</span>&#160;                        &amp;&amp; times.at(times.size() - 1) &lt; opts.min_time</div>
<div class="line"><a name="l00640"></a><span class="lineno">  640</span>&#160;                        &amp;&amp; opts.min_time != -1) {</div>
<div class="line"><a name="l00641"></a><span class="lineno">  641</span>&#160;</div>
<div class="line"><a name="l00642"></a><span class="lineno">  642</span>&#160;                    <span class="comment">//Datensatz löschen</span></div>
<div class="line"><a name="l00643"></a><span class="lineno">  643</span>&#160;                    values.resize(times.size() - 1);</div>
<div class="line"><a name="l00644"></a><span class="lineno">  644</span>&#160;                    debug_positions.resize(times.size() - 1);</div>
<div class="line"><a name="l00645"></a><span class="lineno">  645</span>&#160;                    times.resize(times.size() - 1);</div>
<div class="line"><a name="l00646"></a><span class="lineno">  646</span>&#160;                }</div>
<div class="line"><a name="l00647"></a><span class="lineno">  647</span>&#160;</div>
<div class="line"><a name="l00648"></a><span class="lineno">  648</span>&#160;                <span class="comment">//Ist der Zeitstempel kleiner als der maximale Zeitstempel?</span></div>
<div class="line"><a name="l00649"></a><span class="lineno">  649</span>&#160;                <span class="keywordflow">if</span> (times.size() &gt; 0</div>
<div class="line"><a name="l00650"></a><span class="lineno">  650</span>&#160;                        &amp;&amp; times.at(times.size() - 1) &gt; opts.max_time</div>
<div class="line"><a name="l00651"></a><span class="lineno">  651</span>&#160;                        &amp;&amp; opts.max_time != -1) {</div>
<div class="line"><a name="l00652"></a><span class="lineno">  652</span>&#160;</div>
<div class="line"><a name="l00653"></a><span class="lineno">  653</span>&#160;                    <span class="comment">//Datensatz löschen</span></div>
<div class="line"><a name="l00654"></a><span class="lineno">  654</span>&#160;                    values.resize(times.size() - 1);</div>
<div class="line"><a name="l00655"></a><span class="lineno">  655</span>&#160;                    debug_positions.resize(times.size() - 1);</div>
<div class="line"><a name="l00656"></a><span class="lineno">  656</span>&#160;                    times.resize(times.size() - 1);</div>
<div class="line"><a name="l00657"></a><span class="lineno">  657</span>&#160;</div>
<div class="line"><a name="l00658"></a><span class="lineno">  658</span>&#160;                    <span class="comment">//Mit dem Einlesen aufhören</span></div>
<div class="line"><a name="l00659"></a><span class="lineno">  659</span>&#160;                    <span class="keywordflow">break</span>;</div>
<div class="line"><a name="l00660"></a><span class="lineno">  660</span>&#160;                }</div>
<div class="line"><a name="l00661"></a><span class="lineno">  661</span>&#160;            }</div>
<div class="line"><a name="l00662"></a><span class="lineno">  662</span>&#160;</div>
<div class="line"><a name="l00663"></a><span class="lineno">  663</span>&#160;            row_index++;</div>
<div class="line"><a name="l00664"></a><span class="lineno">  664</span>&#160;        }</div>
<div class="line"><a name="l00665"></a><span class="lineno">  665</span>&#160;</div>
<div class="line"><a name="l00666"></a><span class="lineno">  666</span>&#160;        file.close();</div>
<div class="line"><a name="l00667"></a><span class="lineno">  667</span>&#160;</div>
<div class="line"><a name="l00668"></a><span class="lineno">  668</span>&#160;        <span class="comment">//Laden der Eingabedatei erfolgreich</span></div>
<div class="line"><a name="l00669"></a><span class="lineno">  669</span>&#160;        <span class="keywordflow">return</span> <span class="keyword">true</span>;</div>
<div class="line"><a name="l00670"></a><span class="lineno">  670</span>&#160;    }</div>
<div class="line"><a name="l00671"></a><span class="lineno">  671</span>&#160;</div>
<div class="line"><a name="l00687"></a><span class="lineno"><a class="line" href="classOdisiToSdConverter.xhtml#a58c9836341b5aa5d8fa8eb28021b070b">  687</a></span>&#160;    <span class="keywordtype">bool</span> <a class="code" href="classOdisiToSdConverter.xhtml#a58c9836341b5aa5d8fa8eb28021b070b">writeOutputFile</a>(<span class="keywordtype">string</span> path, <span class="keywordtype">string</span> logpath,</div>
<div class="line"><a name="l00688"></a><span class="lineno">  688</span>&#160;            <a class="code" href="classstd_1_1vector.xhtml">vector</a>&lt;<a class="code" href="classstd_1_1vector.xhtml">vector&lt;float&gt;</a> &gt;&amp; values,</div>
<div class="line"><a name="l00689"></a><span class="lineno">  689</span>&#160;            <a class="code" href="classstd_1_1vector.xhtml">vector</a>&lt;<a class="code" href="classstd_1_1vector.xhtml">vector&lt;int&gt;</a> &gt;&amp; debug_positions, <a class="code" href="classstd_1_1vector.xhtml">vector&lt;float&gt;</a>&amp; times,</div>
<div class="line"><a name="l00690"></a><span class="lineno">  690</span>&#160;            <a class="code" href="classstd_1_1vector.xhtml">vector&lt;float&gt;</a>&amp; lin_positions, <a class="code" href="classstd_1_1vector.xhtml">vector&lt;float&gt;</a>&amp; inlist,</div>
<div class="line"><a name="l00691"></a><span class="lineno">  691</span>&#160;            <a class="code" href="classstd_1_1vector.xhtml">vector&lt;float&gt;</a>&amp; outlist, <a class="code" href="classstd_1_1vector.xhtml">vector&lt;float&gt;</a>&amp; in_x, <a class="code" href="classstd_1_1vector.xhtml">vector&lt;float&gt;</a>&amp; out_x,</div>
<div class="line"><a name="l00692"></a><span class="lineno">  692</span>&#160;            <a class="code" href="classstd_1_1vector.xhtml">vector&lt;bool&gt;</a>&amp; dirlist) {</div>
<div class="line"><a name="l00693"></a><span class="lineno">  693</span>&#160;</div>
<div class="line"><a name="l00694"></a><span class="lineno">  694</span>&#160;        ofstream errfile;</div>
<div class="line"><a name="l00695"></a><span class="lineno">  695</span>&#160;        ofstream outfile;</div>
<div class="line"><a name="l00696"></a><span class="lineno">  696</span>&#160;        <span class="comment">//Öffnen der Ausgabedatei</span></div>
<div class="line"><a name="l00697"></a><span class="lineno">  697</span>&#160;        outfile.open(path);</div>
<div class="line"><a name="l00698"></a><span class="lineno">  698</span>&#160;</div>
<div class="line"><a name="l00699"></a><span class="lineno">  699</span>&#160;        <span class="comment">//Öffnen erfolgreich?</span></div>
<div class="line"><a name="l00700"></a><span class="lineno">  700</span>&#160;        <span class="keywordflow">if</span> (!outfile.is_open()) {</div>
<div class="line"><a name="l00701"></a><span class="lineno">  701</span>&#160;            cerr &lt;&lt; <span class="stringliteral">&quot;output file path \&quot;&quot;</span> &lt;&lt; path &lt;&lt; <span class="stringliteral">&quot;\&quot; is invalid!&quot;</span> &lt;&lt; endl;</div>
<div class="line"><a name="l00702"></a><span class="lineno">  702</span>&#160;            <span class="comment">//Schreiben der Ausgabedatei fehlgeschlagen</span></div>
<div class="line"><a name="l00703"></a><span class="lineno">  703</span>&#160;            <span class="keywordflow">return</span> <span class="keyword">false</span>;</div>
<div class="line"><a name="l00704"></a><span class="lineno">  704</span>&#160;        }</div>
<div class="line"><a name="l00705"></a><span class="lineno">  705</span>&#160;</div>
<div class="line"><a name="l00706"></a><span class="lineno">  706</span>&#160;        <span class="comment">//Eine Logdatei anlegen?</span></div>
<div class="line"><a name="l00707"></a><span class="lineno">  707</span>&#160;        <span class="keywordflow">if</span> (logpath != <span class="stringliteral">&quot;&quot;</span>) {</div>
<div class="line"><a name="l00708"></a><span class="lineno">  708</span>&#160;            errfile.open(logpath);</div>
<div class="line"><a name="l00709"></a><span class="lineno">  709</span>&#160;            <span class="comment">//Öffnen erfolgreich?</span></div>
<div class="line"><a name="l00710"></a><span class="lineno">  710</span>&#160;            <span class="keywordflow">if</span> (!errfile.is_open()) {</div>
<div class="line"><a name="l00711"></a><span class="lineno">  711</span>&#160;                cerr &lt;&lt; <span class="stringliteral">&quot;log file path \&quot;&quot;</span> &lt;&lt; logpath &lt;&lt; <span class="stringliteral">&quot;\&quot; is invalid!&quot;</span></div>
<div class="line"><a name="l00712"></a><span class="lineno">  712</span>&#160;                        &lt;&lt; endl;</div>
<div class="line"><a name="l00713"></a><span class="lineno">  713</span>&#160;                <span class="comment">//Schreiben der Logdatei fehlgeschlagen</span></div>
<div class="line"><a name="l00714"></a><span class="lineno">  714</span>&#160;                <span class="keywordflow">return</span> <span class="keyword">false</span>;</div>
<div class="line"><a name="l00715"></a><span class="lineno">  715</span>&#160;            }</div>
<div class="line"><a name="l00716"></a><span class="lineno">  716</span>&#160;        }</div>
<div class="line"><a name="l00717"></a><span class="lineno">  717</span>&#160;</div>
<div class="line"><a name="l00718"></a><span class="lineno">  718</span>&#160;        <span class="comment">//Statistikvariablen für innen/außen liegende Punkte und deren Wert</span></div>
<div class="line"><a name="l00719"></a><span class="lineno">  719</span>&#160;        <span class="keywordtype">int</span> insidecount = 0;</div>
<div class="line"><a name="l00720"></a><span class="lineno">  720</span>&#160;        <span class="keywordtype">int</span> outsidecount = 0;</div>
<div class="line"><a name="l00721"></a><span class="lineno">  721</span>&#160;        <span class="keywordtype">double</span> insideval = 0;</div>
<div class="line"><a name="l00722"></a><span class="lineno">  722</span>&#160;        <span class="keywordtype">double</span> outsideval = 0;</div>
<div class="line"><a name="l00723"></a><span class="lineno">  723</span>&#160;</div>
<div class="line"><a name="l00724"></a><span class="lineno">  724</span>&#160;        <span class="comment">//Für alle Datensätze</span></div>
<div class="line"><a name="l00725"></a><span class="lineno">  725</span>&#160;        <span class="keywordflow">for</span> (<span class="keywordtype">size_t</span> i = 0; i &lt; values.size(); i++) {</div>
<div class="line"><a name="l00726"></a><span class="lineno">  726</span>&#160;</div>
<div class="line"><a name="l00727"></a><span class="lineno">  727</span>&#160;            <span class="comment">//Fällt die akuelle Zeile durch die zeitliche Schrittweite?</span></div>
<div class="line"><a name="l00728"></a><span class="lineno">  728</span>&#160;            <span class="keywordflow">if</span> (!((i + 1) % opts.time_step_delta == 0)) {</div>
<div class="line"><a name="l00729"></a><span class="lineno">  729</span>&#160;                <span class="keywordflow">continue</span>;</div>
<div class="line"><a name="l00730"></a><span class="lineno">  730</span>&#160;            }</div>
<div class="line"><a name="l00731"></a><span class="lineno">  731</span>&#160;</div>
<div class="line"><a name="l00732"></a><span class="lineno">  732</span>&#160;            <span class="comment">//Aller hundert Datensätze den prozentualen Fortschritt ausgeben</span></div>
<div class="line"><a name="l00733"></a><span class="lineno">  733</span>&#160;            <span class="keywordflow">if</span> (i % 100) {</div>
<div class="line"><a name="l00734"></a><span class="lineno">  734</span>&#160;                cout &lt;&lt; <span class="stringliteral">&quot;\r&quot;</span> &lt;&lt; int((<span class="keywordtype">float</span>) i / values.size() * 100.) &lt;&lt; <span class="stringliteral">&quot;%&quot;</span>;</div>
<div class="line"><a name="l00735"></a><span class="lineno">  735</span>&#160;            }</div>
<div class="line"><a name="l00736"></a><span class="lineno">  736</span>&#160;</div>
<div class="line"><a name="l00737"></a><span class="lineno">  737</span>&#160;            <span class="comment">//Zeitstempel schreiben</span></div>
<div class="line"><a name="l00738"></a><span class="lineno">  738</span>&#160;            outfile &lt;&lt; <span class="stringliteral">&quot;t &quot;</span> &lt;&lt; int(times.at(i)) &lt;&lt; endl;</div>
<div class="line"><a name="l00739"></a><span class="lineno">  739</span>&#160;            <span class="comment">//Namen schreiben</span></div>
<div class="line"><a name="l00740"></a><span class="lineno">  740</span>&#160;            outfile &lt;&lt; <span class="stringliteral">&quot;n &quot;</span> &lt;&lt; times.at(i) &lt;&lt; endl;</div>
<div class="line"><a name="l00741"></a><span class="lineno">  741</span>&#160;</div>
<div class="line"><a name="l00742"></a><span class="lineno">  742</span>&#160;            <span class="comment">//Für alle Messwerte</span></div>
<div class="line"><a name="l00743"></a><span class="lineno">  743</span>&#160;            <span class="keywordflow">for</span> (<span class="keywordtype">size_t</span> j = 0; j &lt; values.at(i).size(); j++) {</div>
<div class="line"><a name="l00744"></a><span class="lineno">  744</span>&#160;</div>
<div class="line"><a name="l00745"></a><span class="lineno">  745</span>&#160;                <span class="comment">//aktuelle Faserposition</span></div>
<div class="line"><a name="l00746"></a><span class="lineno">  746</span>&#160;                <span class="keywordtype">float</span> l_pos = lin_positions.at(j);</div>
<div class="line"><a name="l00747"></a><span class="lineno">  747</span>&#160;                <span class="comment">//Position des Fasereingangs auf der Faser</span></div>
<div class="line"><a name="l00748"></a><span class="lineno">  748</span>&#160;                <span class="keywordtype">float</span> l_in = 0;</div>
<div class="line"><a name="l00749"></a><span class="lineno">  749</span>&#160;                <span class="comment">//Position des Faserausgangs auf der Faser</span></div>
<div class="line"><a name="l00750"></a><span class="lineno">  750</span>&#160;                <span class="keywordtype">float</span> l_out = 0;</div>
<div class="line"><a name="l00751"></a><span class="lineno">  751</span>&#160;                <span class="comment">//Position des Fasereingangs</span></div>
<div class="line"><a name="l00752"></a><span class="lineno">  752</span>&#160;                <span class="keywordtype">float</span> x_in = 0;</div>
<div class="line"><a name="l00753"></a><span class="lineno">  753</span>&#160;                <span class="comment">//Position des Faserausgangs</span></div>
<div class="line"><a name="l00754"></a><span class="lineno">  754</span>&#160;                <span class="keywordtype">float</span> x_out = 0;</div>
<div class="line"><a name="l00755"></a><span class="lineno">  755</span>&#160;                <span class="comment">//Ist der Punkt außerhalb des Objekts?</span></div>
<div class="line"><a name="l00756"></a><span class="lineno">  756</span>&#160;                <span class="keywordtype">bool</span> outside = <span class="keyword">false</span>;</div>
<div class="line"><a name="l00757"></a><span class="lineno">  757</span>&#160;                <span class="comment">//Verläuft die Faserrichtung entgegen der Z-Achse?</span></div>
<div class="line"><a name="l00758"></a><span class="lineno">  758</span>&#160;                <span class="keywordtype">bool</span> flip_z = <span class="keyword">false</span>;</div>
<div class="line"><a name="l00759"></a><span class="lineno">  759</span>&#160;</div>
<div class="line"><a name="l00760"></a><span class="lineno">  760</span>&#160;                <span class="comment">//Suchen des eingrenzenden Faser-Ein- und Ausgangs</span></div>
<div class="line"><a name="l00761"></a><span class="lineno">  761</span>&#160;                <span class="keywordflow">for</span> (<span class="keywordtype">size_t</span> li = 0; li &lt; inlist.size(); li++) {</div>
<div class="line"><a name="l00762"></a><span class="lineno">  762</span>&#160;</div>
<div class="line"><a name="l00763"></a><span class="lineno">  763</span>&#160;                    <span class="keywordflow">if</span> (inlist.at(li) &lt;= l_pos &amp;&amp; outlist.at(li) &gt;= l_pos) {</div>
<div class="line"><a name="l00764"></a><span class="lineno">  764</span>&#160;                        l_in = inlist.at(li);</div>
<div class="line"><a name="l00765"></a><span class="lineno">  765</span>&#160;                        l_out = outlist.at(li);</div>
<div class="line"><a name="l00766"></a><span class="lineno">  766</span>&#160;                        x_in = in_x.at(li);</div>
<div class="line"><a name="l00767"></a><span class="lineno">  767</span>&#160;                        x_out = out_x.at(li);</div>
<div class="line"><a name="l00768"></a><span class="lineno">  768</span>&#160;</div>
<div class="line"><a name="l00769"></a><span class="lineno">  769</span>&#160;                        <span class="comment">//Suchen der Faserrichtungsinformationen</span></div>
<div class="line"><a name="l00770"></a><span class="lineno">  770</span>&#160;                        <span class="keywordflow">if</span> (dirlist.size()!=0) {</div>
<div class="line"><a name="l00771"></a><span class="lineno">  771</span>&#160;                            <span class="keywordflow">if</span> (dirlist.size()&gt;li) {</div>
<div class="line"><a name="l00772"></a><span class="lineno">  772</span>&#160;                                flip_z = dirlist.at(li);</div>
<div class="line"><a name="l00773"></a><span class="lineno">  773</span>&#160;                            } <span class="keywordflow">else</span> {</div>
<div class="line"><a name="l00774"></a><span class="lineno">  774</span>&#160;                                cerr &lt;&lt; <span class="stringliteral">&quot;WARNING: fibre direction information not found for pass &quot;</span> &lt;&lt; li+1 &lt;&lt; endl&lt;&lt;<span class="stringliteral">&quot;!&quot;</span>;</div>
<div class="line"><a name="l00775"></a><span class="lineno">  775</span>&#160;                            }</div>
<div class="line"><a name="l00776"></a><span class="lineno">  776</span>&#160;                        }</div>
<div class="line"><a name="l00777"></a><span class="lineno">  777</span>&#160;</div>
<div class="line"><a name="l00778"></a><span class="lineno">  778</span>&#160;                        <span class="keywordflow">break</span>;</div>
<div class="line"><a name="l00779"></a><span class="lineno">  779</span>&#160;                    }</div>
<div class="line"><a name="l00780"></a><span class="lineno">  780</span>&#160;</div>
<div class="line"><a name="l00781"></a><span class="lineno">  781</span>&#160;                    <span class="comment">//Nichts gefunden? -&gt; Punkt liegt außerhalb des Objekts</span></div>
<div class="line"><a name="l00782"></a><span class="lineno">  782</span>&#160;                    <span class="keywordflow">if</span> (li == inlist.size() - 1) {</div>
<div class="line"><a name="l00783"></a><span class="lineno">  783</span>&#160;                        outside = <span class="keyword">true</span>;</div>
<div class="line"><a name="l00784"></a><span class="lineno">  784</span>&#160;                    }</div>
<div class="line"><a name="l00785"></a><span class="lineno">  785</span>&#160;                }</div>
<div class="line"><a name="l00786"></a><span class="lineno">  786</span>&#160;</div>
<div class="line"><a name="l00787"></a><span class="lineno">  787</span>&#160;                <span class="comment">//Ist der Punkt innerhalb des Objekts?</span></div>
<div class="line"><a name="l00788"></a><span class="lineno">  788</span>&#160;                <span class="keywordflow">if</span> (!outside) {</div>
<div class="line"><a name="l00789"></a><span class="lineno">  789</span>&#160;</div>
<div class="line"><a name="l00790"></a><span class="lineno">  790</span>&#160;                    <span class="comment">//Fällt die akuelle Zeile durch die Schrittweite auf der Faser?</span></div>
<div class="line"><a name="l00791"></a><span class="lineno">  791</span>&#160;                    <span class="keywordflow">if</span> (!(j % opts.fiber_step_delta == 0)) {</div>
<div class="line"><a name="l00792"></a><span class="lineno">  792</span>&#160;                        <span class="keywordflow">continue</span>;</div>
<div class="line"><a name="l00793"></a><span class="lineno">  793</span>&#160;                    }</div>
<div class="line"><a name="l00794"></a><span class="lineno">  794</span>&#160;</div>
<div class="line"><a name="l00795"></a><span class="lineno">  795</span>&#160;                    <span class="comment">//Punkte innerhalb des Objekts mitzählen</span></div>
<div class="line"><a name="l00796"></a><span class="lineno">  796</span>&#160;                    insidecount++;</div>
<div class="line"><a name="l00797"></a><span class="lineno">  797</span>&#160;</div>
<div class="line"><a name="l00798"></a><span class="lineno">  798</span>&#160;                    <span class="comment">//Kann der Wert korrigiert werden? -&gt; Testen auf Fehler und Versuch der Korrektur</span></div>
<div class="line"><a name="l00799"></a><span class="lineno">  799</span>&#160;                    <span class="keywordflow">if</span> (i &gt; 0) {</div>
<div class="line"><a name="l00800"></a><span class="lineno">  800</span>&#160;                        <span class="comment">//Wert des vorherigen Datensatzes</span></div>
<div class="line"><a name="l00801"></a><span class="lineno">  801</span>&#160;                        <span class="keywordtype">float</span> prev_val = values.at(i - 1).at(j);</div>
<div class="line"><a name="l00802"></a><span class="lineno">  802</span>&#160;                        <span class="comment">//Originalwert</span></div>
<div class="line"><a name="l00803"></a><span class="lineno">  803</span>&#160;                        <span class="keywordtype">float</span> original_val = values.at(i).at(j);</div>
<div class="line"><a name="l00804"></a><span class="lineno">  804</span>&#160;</div>
<div class="line"><a name="l00805"></a><span class="lineno">  805</span>&#160;                        <span class="comment">//Suchschritte bei der Messwertkorrektur</span></div>
<div class="line"><a name="l00806"></a><span class="lineno">  806</span>&#160;                        <span class="keywordtype">int</span> search_step_count = 0;</div>
<div class="line"><a name="l00807"></a><span class="lineno">  807</span>&#160;</div>
<div class="line"><a name="l00808"></a><span class="lineno">  808</span>&#160;                        <span class="comment">//Solange der Wert nicht innerhalb der zugelassenen Grenzen liegt...</span></div>
<div class="line"><a name="l00809"></a><span class="lineno">  809</span>&#160;                        <span class="keywordflow">while</span> ((i + search_step_count + 1 &lt; values.size())</div>
<div class="line"><a name="l00810"></a><span class="lineno">  810</span>&#160;                                &amp;&amp; (abs(</div>
<div class="line"><a name="l00811"></a><span class="lineno">  811</span>&#160;                                        values.at(i + search_step_count).at(j)</div>
<div class="line"><a name="l00812"></a><span class="lineno">  812</span>&#160;                                                - prev_val)</div>
<div class="line"><a name="l00813"></a><span class="lineno">  813</span>&#160;                                        &gt; (search_step_count + 1)</div>
<div class="line"><a name="l00814"></a><span class="lineno">  814</span>&#160;                                                * opts.error_threshold)) {</div>
<div class="line"><a name="l00815"></a><span class="lineno">  815</span>&#160;</div>
<div class="line"><a name="l00816"></a><span class="lineno">  816</span>&#160;                            search_step_count++;</div>
<div class="line"><a name="l00817"></a><span class="lineno">  817</span>&#160;</div>
<div class="line"><a name="l00818"></a><span class="lineno">  818</span>&#160;                            <span class="comment">//Maximale Suchweite erreicht?</span></div>
<div class="line"><a name="l00819"></a><span class="lineno">  819</span>&#160;                            <span class="keywordflow">if</span> (search_step_count == opts.maxfwcount) {</div>
<div class="line"><a name="l00820"></a><span class="lineno">  820</span>&#160;</div>
<div class="line"><a name="l00821"></a><span class="lineno">  821</span>&#160;                                <span class="comment">//Logdatei verwenden?</span></div>
<div class="line"><a name="l00822"></a><span class="lineno">  822</span>&#160;                                <span class="keywordflow">if</span> (logpath != <span class="stringliteral">&quot;&quot;</span>)</div>
<div class="line"><a name="l00823"></a><span class="lineno">  823</span>&#160;                                    errfile</div>
<div class="line"><a name="l00824"></a><span class="lineno">  824</span>&#160;                                            &lt;&lt; <span class="stringliteral">&quot;count of invalid values too big -&gt; nothing changed!&quot;</span></div>
<div class="line"><a name="l00825"></a><span class="lineno">  825</span>&#160;                                            &lt;&lt; <span class="stringliteral">&quot; (l. &quot;</span> &lt;&lt; i + opts.startrow + 2</div>
<div class="line"><a name="l00826"></a><span class="lineno">  826</span>&#160;                                            &lt;&lt; <span class="stringliteral">&quot;, c. &quot;</span></div>
<div class="line"><a name="l00827"></a><span class="lineno">  827</span>&#160;                                            &lt;&lt; debug_positions.at(i).at(j)</div>
<div class="line"><a name="l00828"></a><span class="lineno">  828</span>&#160;                                            &lt;&lt; <span class="stringliteral">&quot;)&quot;</span> &lt;&lt; endl;</div>
<div class="line"><a name="l00829"></a><span class="lineno">  829</span>&#160;                                <span class="comment">//weitere Suche abbrechen</span></div>
<div class="line"><a name="l00830"></a><span class="lineno">  830</span>&#160;                                <span class="keywordflow">break</span>;</div>
<div class="line"><a name="l00831"></a><span class="lineno">  831</span>&#160;                            }</div>
<div class="line"><a name="l00832"></a><span class="lineno">  832</span>&#160;                        }</div>
<div class="line"><a name="l00833"></a><span class="lineno">  833</span>&#160;</div>
<div class="line"><a name="l00834"></a><span class="lineno">  834</span>&#160;                        <span class="comment">//Suche nach validem Wert erfolgreich?</span></div>
<div class="line"><a name="l00835"></a><span class="lineno">  835</span>&#160;                        <span class="keywordflow">if</span> (search_step_count &gt; 0) {</div>
<div class="line"><a name="l00836"></a><span class="lineno">  836</span>&#160;                            <span class="comment">//Korrektur durch lineare Interpolation</span></div>
<div class="line"><a name="l00837"></a><span class="lineno">  837</span>&#160;                            values.at(i).at(j) = prev_val</div>
<div class="line"><a name="l00838"></a><span class="lineno">  838</span>&#160;                                    + (values.at(i + search_step_count).at(j)</div>
<div class="line"><a name="l00839"></a><span class="lineno">  839</span>&#160;                                            - prev_val)</div>
<div class="line"><a name="l00840"></a><span class="lineno">  840</span>&#160;                                            / (search_step_count + 1);</div>
<div class="line"><a name="l00841"></a><span class="lineno">  841</span>&#160;</div>
<div class="line"><a name="l00842"></a><span class="lineno">  842</span>&#160;                            <span class="comment">//Logdatei verwenden?</span></div>
<div class="line"><a name="l00843"></a><span class="lineno">  843</span>&#160;                            <span class="keywordflow">if</span> (logpath != <span class="stringliteral">&quot;&quot;</span>)</div>
<div class="line"><a name="l00844"></a><span class="lineno">  844</span>&#160;                                errfile &lt;&lt; <span class="stringliteral">&quot;changed &quot;</span> &lt;&lt; original_val &lt;&lt; <span class="stringliteral">&quot; (l. &quot;</span></div>
<div class="line"><a name="l00845"></a><span class="lineno">  845</span>&#160;                                        &lt;&lt; i + opts.startrow + 2 &lt;&lt; <span class="stringliteral">&quot;, c. &quot;</span></div>
<div class="line"><a name="l00846"></a><span class="lineno">  846</span>&#160;                                        &lt;&lt; debug_positions.at(i).at(j)</div>
<div class="line"><a name="l00847"></a><span class="lineno">  847</span>&#160;                                        &lt;&lt; <span class="stringliteral">&quot;) to &quot;</span> &lt;&lt; values.at(i).at(j)</div>
<div class="line"><a name="l00848"></a><span class="lineno">  848</span>&#160;                                        &lt;&lt; endl;</div>
<div class="line"><a name="l00849"></a><span class="lineno">  849</span>&#160;                        }</div>
<div class="line"><a name="l00850"></a><span class="lineno">  850</span>&#160;                    }</div>
<div class="line"><a name="l00851"></a><span class="lineno">  851</span>&#160;</div>
<div class="line"><a name="l00852"></a><span class="lineno">  852</span>&#160;                    <span class="comment">//Position des Messpunktes Berechnen</span></div>
<div class="line"><a name="l00853"></a><span class="lineno">  853</span>&#160;                    <span class="keywordtype">float</span> x = x_in</div>
<div class="line"><a name="l00854"></a><span class="lineno">  854</span>&#160;                            + ((x_out - x_in) / (l_out - l_in))</div>
<div class="line"><a name="l00855"></a><span class="lineno">  855</span>&#160;                                    * (l_pos - l_in);</div>
<div class="line"><a name="l00856"></a><span class="lineno">  856</span>&#160;</div>
<div class="line"><a name="l00857"></a><span class="lineno">  857</span>&#160;                    <span class="keywordtype">float</span> y = opts.height;</div>
<div class="line"><a name="l00858"></a><span class="lineno">  858</span>&#160;                    <span class="comment">//Winkel der Faserrichtung zur Z-Achse</span></div>
<div class="line"><a name="l00859"></a><span class="lineno">  859</span>&#160;                    <span class="keywordtype">float</span> z_angle = cos(</div>
<div class="line"><a name="l00860"></a><span class="lineno">  860</span>&#160;                            asin(((x_out - x_in) / (l_out - l_in))));</div>
<div class="line"><a name="l00861"></a><span class="lineno">  861</span>&#160;                    <span class="keywordtype">float</span> z = z_angle * (l_pos - l_in);</div>
<div class="line"><a name="l00862"></a><span class="lineno">  862</span>&#160;</div>
<div class="line"><a name="l00863"></a><span class="lineno">  863</span>&#160;                    <span class="comment">//Richtung der Faser umkehren?</span></div>
<div class="line"><a name="l00864"></a><span class="lineno">  864</span>&#160;                    <span class="keywordflow">if</span> (flip_z) {</div>
<div class="line"><a name="l00865"></a><span class="lineno">  865</span>&#160;                        z = z_angle * (l_out - l_in) - z;</div>
<div class="line"><a name="l00866"></a><span class="lineno">  866</span>&#160;                    }</div>
<div class="line"><a name="l00867"></a><span class="lineno">  867</span>&#160;</div>
<div class="line"><a name="l00868"></a><span class="lineno">  868</span>&#160;                    <span class="comment">//Schreiben des Messpunktes</span></div>
<div class="line"><a name="l00869"></a><span class="lineno">  869</span>&#160;                    outfile &lt;&lt; <span class="stringliteral">&quot;s &quot;</span> &lt;&lt; x &lt;&lt; <span class="stringliteral">&quot; &quot;</span> &lt;&lt; y &lt;&lt; <span class="stringliteral">&quot; &quot;</span> &lt;&lt; z &lt;&lt; <span class="stringliteral">&quot; &quot;</span></div>
<div class="line"><a name="l00870"></a><span class="lineno">  870</span>&#160;                            &lt;&lt; opts.basetemp + values.at(i).at(j) &lt;&lt; endl;</div>
<div class="line"><a name="l00871"></a><span class="lineno">  871</span>&#160;                    <span class="comment">//Mitführen der Statistikdaten</span></div>
<div class="line"><a name="l00872"></a><span class="lineno">  872</span>&#160;                    insideval += values.at(i).at(j);</div>
<div class="line"><a name="l00873"></a><span class="lineno">  873</span>&#160;                } <span class="keywordflow">else</span> {</div>
<div class="line"><a name="l00874"></a><span class="lineno">  874</span>&#160;                    <span class="comment">//Statistik für die ausßerhalb gelegenen Messpunkte</span></div>
<div class="line"><a name="l00875"></a><span class="lineno">  875</span>&#160;                    outsidecount++;</div>
<div class="line"><a name="l00876"></a><span class="lineno">  876</span>&#160;                    outsideval += values.at(i).at(j);</div>
<div class="line"><a name="l00877"></a><span class="lineno">  877</span>&#160;                }</div>
<div class="line"><a name="l00878"></a><span class="lineno">  878</span>&#160;            }</div>
<div class="line"><a name="l00879"></a><span class="lineno">  879</span>&#160;</div>
<div class="line"><a name="l00880"></a><span class="lineno">  880</span>&#160;            outfile &lt;&lt; endl;</div>
<div class="line"><a name="l00881"></a><span class="lineno">  881</span>&#160;        }</div>
<div class="line"><a name="l00882"></a><span class="lineno">  882</span>&#160;</div>
<div class="line"><a name="l00883"></a><span class="lineno">  883</span>&#160;        <span class="comment">//Ausgeben der statistischen Daten.</span></div>
<div class="line"><a name="l00884"></a><span class="lineno">  884</span>&#160;        cout &lt;&lt; <span class="stringliteral">&quot;\r&quot;</span> &lt;&lt; endl;</div>
<div class="line"><a name="l00885"></a><span class="lineno">  885</span>&#160;        cout &lt;&lt; insidecount &lt;&lt; <span class="stringliteral">&quot; values inside object, &quot;</span> &lt;&lt; outsidecount</div>
<div class="line"><a name="l00886"></a><span class="lineno">  886</span>&#160;                &lt;&lt; <span class="stringliteral">&quot; outside object &quot;</span> &lt;&lt; endl;</div>
<div class="line"><a name="l00887"></a><span class="lineno">  887</span>&#160;        cout &lt;&lt; <span class="stringliteral">&quot;Inside average: &quot;</span> &lt;&lt; insideval / insidecount</div>
<div class="line"><a name="l00888"></a><span class="lineno">  888</span>&#160;                &lt;&lt; <span class="stringliteral">&quot; Outside average: &quot;</span> &lt;&lt; outsideval / outsidecount</div>
<div class="line"><a name="l00889"></a><span class="lineno">  889</span>&#160;                &lt;&lt; <span class="stringliteral">&quot; (uncorrected)&quot;</span> &lt;&lt; endl;</div>
<div class="line"><a name="l00890"></a><span class="lineno">  890</span>&#160;</div>
<div class="line"><a name="l00891"></a><span class="lineno">  891</span>&#160;        outfile.close();</div>
<div class="line"><a name="l00892"></a><span class="lineno">  892</span>&#160;        <span class="keywordflow">if</span> (logpath != <span class="stringliteral">&quot;&quot;</span>)</div>
<div class="line"><a name="l00893"></a><span class="lineno">  893</span>&#160;            errfile.close();</div>
<div class="line"><a name="l00894"></a><span class="lineno">  894</span>&#160;</div>
<div class="line"><a name="l00895"></a><span class="lineno">  895</span>&#160;        <span class="comment">//Schreiben der Ausgabe- und Logdatei erfolgreich</span></div>
<div class="line"><a name="l00896"></a><span class="lineno">  896</span>&#160;        <span class="keywordflow">return</span> <span class="keyword">true</span>;</div>
<div class="line"><a name="l00897"></a><span class="lineno">  897</span>&#160;    }</div>
<div class="line"><a name="l00898"></a><span class="lineno">  898</span>&#160;</div>
<div class="line"><a name="l00899"></a><span class="lineno">  899</span>&#160;<span class="keyword">public</span>:</div>
<div class="line"><a name="l00900"></a><span class="lineno">  900</span>&#160;</div>
<div class="line"><a name="l00908"></a><span class="lineno"><a class="line" href="classOdisiToSdConverter.xhtml#ab4e518bcb8d7588180bb4e1edec50c06">  908</a></span>&#160;    <span class="keywordtype">int</span> <a class="code" href="classOdisiToSdConverter.xhtml#ab4e518bcb8d7588180bb4e1edec50c06">convert</a>(<span class="keywordtype">int</span> argc, <span class="keywordtype">char</span> *argv[]) {</div>
<div class="line"><a name="l00909"></a><span class="lineno">  909</span>&#160;</div>
<div class="line"><a name="l00910"></a><span class="lineno">  910</span>&#160;        <span class="comment">//Standardwerte für die Progammoptionen</span></div>
<div class="line"><a name="l00911"></a><span class="lineno">  911</span>&#160;        opts.startrow = 4;</div>
<div class="line"><a name="l00912"></a><span class="lineno">  912</span>&#160;        opts.separator = <span class="charliteral">&#39; &#39;</span>;</div>
<div class="line"><a name="l00913"></a><span class="lineno">  913</span>&#160;        opts.replace_comma_with_point = <span class="keyword">true</span>;</div>
<div class="line"><a name="l00914"></a><span class="lineno">  914</span>&#160;        opts.timecol = 0;</div>
<div class="line"><a name="l00915"></a><span class="lineno">  915</span>&#160;        opts.error_threshold = 5;</div>
<div class="line"><a name="l00916"></a><span class="lineno">  916</span>&#160;        opts.maxfwcount = 10;</div>
<div class="line"><a name="l00917"></a><span class="lineno">  917</span>&#160;        opts.tab_space_count = 8 - 1;</div>
<div class="line"><a name="l00918"></a><span class="lineno">  918</span>&#160;        opts.height = .0;</div>
<div class="line"><a name="l00919"></a><span class="lineno">  919</span>&#160;        opts.basetemp = 20;</div>
<div class="line"><a name="l00920"></a><span class="lineno">  920</span>&#160;        opts.objwidth = .5;</div>
<div class="line"><a name="l00921"></a><span class="lineno">  921</span>&#160;        opts.flipobj = <span class="keyword">true</span>;</div>
<div class="line"><a name="l00922"></a><span class="lineno">  922</span>&#160;        opts.fiber_step_delta = 1;</div>
<div class="line"><a name="l00923"></a><span class="lineno">  923</span>&#160;        opts.time_step_delta = 1;</div>
<div class="line"><a name="l00924"></a><span class="lineno">  924</span>&#160;        opts.max_time = -1;</div>
<div class="line"><a name="l00925"></a><span class="lineno">  925</span>&#160;        opts.min_time = -1;</div>
<div class="line"><a name="l00926"></a><span class="lineno">  926</span>&#160;</div>
<div class="line"><a name="l00927"></a><span class="lineno">  927</span>&#160;        <span class="comment">//Pfad zur Sensordefinitionsdatei</span></div>
<div class="line"><a name="l00928"></a><span class="lineno">  928</span>&#160;        <span class="keywordtype">string</span> def_filename;</div>
<div class="line"><a name="l00929"></a><span class="lineno">  929</span>&#160;        <span class="comment">//Pfad zur Eingabedatei</span></div>
<div class="line"><a name="l00930"></a><span class="lineno">  930</span>&#160;        <span class="keywordtype">string</span> data_filename;</div>
<div class="line"><a name="l00931"></a><span class="lineno">  931</span>&#160;        <span class="comment">//Pfad zur Logdatei</span></div>
<div class="line"><a name="l00932"></a><span class="lineno">  932</span>&#160;        <span class="keywordtype">string</span> err_filename;</div>
<div class="line"><a name="l00933"></a><span class="lineno">  933</span>&#160;        <span class="comment">//Pfad zur Ausgabedatei</span></div>
<div class="line"><a name="l00934"></a><span class="lineno">  934</span>&#160;        <span class="keywordtype">string</span> out_filename;</div>
<div class="line"><a name="l00935"></a><span class="lineno">  935</span>&#160;</div>
<div class="line"><a name="l00936"></a><span class="lineno">  936</span>&#160;        <span class="comment">//Einlesen der Konfiguration aus der Konfigurationsdatei erfolgreich?</span></div>
<div class="line"><a name="l00937"></a><span class="lineno">  937</span>&#160;        <span class="keywordflow">if</span> (!readConfiguration(<span class="keywordtype">string</span>(argv[0]))) {</div>
<div class="line"><a name="l00938"></a><span class="lineno">  938</span>&#160;            <span class="keywordflow">return</span> 1;</div>
<div class="line"><a name="l00939"></a><span class="lineno">  939</span>&#160;        }</div>
<div class="line"><a name="l00940"></a><span class="lineno">  940</span>&#160;</div>
<div class="line"><a name="l00941"></a><span class="lineno">  941</span>&#160;        <span class="comment">//Alle Programmargumente auslesen, weiterer Programmablauf?</span></div>
<div class="line"><a name="l00942"></a><span class="lineno">  942</span>&#160;        <span class="keywordflow">if</span> (!parseArguments(argc, argv, def_filename, data_filename,</div>
<div class="line"><a name="l00943"></a><span class="lineno">  943</span>&#160;                out_filename, err_filename)) {</div>
<div class="line"><a name="l00944"></a><span class="lineno">  944</span>&#160;            <span class="keywordflow">return</span> 1;</div>
<div class="line"><a name="l00945"></a><span class="lineno">  945</span>&#160;        }</div>
<div class="line"><a name="l00946"></a><span class="lineno">  946</span>&#160;</div>
<div class="line"><a name="l00947"></a><span class="lineno">  947</span>&#160;        <span class="comment">//Sind die Zeitbeschränkungen sinnvoll?</span></div>
<div class="line"><a name="l00948"></a><span class="lineno">  948</span>&#160;        <span class="keywordflow">if</span> (opts.min_time &gt; opts.max_time and opts.max_time != -1) {</div>
<div class="line"><a name="l00949"></a><span class="lineno">  949</span>&#160;            cerr &lt;&lt; <span class="stringliteral">&quot;-min-time can&#39;t be greater than -max-time!&quot;</span> &lt;&lt; endl;</div>
<div class="line"><a name="l00950"></a><span class="lineno">  950</span>&#160;            <span class="keywordflow">return</span> 1;</div>
<div class="line"><a name="l00951"></a><span class="lineno">  951</span>&#160;        }</div>
<div class="line"><a name="l00952"></a><span class="lineno">  952</span>&#160;</div>
<div class="line"><a name="l00953"></a><span class="lineno">  953</span>&#160;        <span class="comment">//Liste für die Positionen der Ein- und Ausgänge auf der Faser</span></div>
<div class="line"><a name="l00954"></a><span class="lineno">  954</span>&#160;        <a class="code" href="classstd_1_1vector.xhtml">vector&lt;float&gt;</a> inlist;</div>
<div class="line"><a name="l00955"></a><span class="lineno">  955</span>&#160;        <a class="code" href="classstd_1_1vector.xhtml">vector&lt;float&gt;</a> outlist;</div>
<div class="line"><a name="l00956"></a><span class="lineno">  956</span>&#160;        <span class="comment">//Liste für die X-Positionen der Ein- und Ausgänge</span></div>
<div class="line"><a name="l00957"></a><span class="lineno">  957</span>&#160;        <a class="code" href="classstd_1_1vector.xhtml">vector&lt;float&gt;</a> in_x;</div>
<div class="line"><a name="l00958"></a><span class="lineno">  958</span>&#160;        <a class="code" href="classstd_1_1vector.xhtml">vector&lt;float&gt;</a> out_x;</div>
<div class="line"><a name="l00959"></a><span class="lineno">  959</span>&#160;        <span class="comment">//Liste für die Richtungen der Faser zwischen Ein-und Ausgang bezüglich der Z-Richtung.</span></div>
<div class="line"><a name="l00960"></a><span class="lineno">  960</span>&#160;        <a class="code" href="classstd_1_1vector.xhtml">vector&lt;bool&gt;</a> dirlist;</div>
<div class="line"><a name="l00961"></a><span class="lineno">  961</span>&#160;</div>
<div class="line"><a name="l00962"></a><span class="lineno">  962</span>&#160;        <span class="comment">//Einlesen der Sensordefinitionen erfolgreich?</span></div>
<div class="line"><a name="l00963"></a><span class="lineno">  963</span>&#160;        <span class="keywordflow">if</span> (!readSensorDefinitions(def_filename, inlist, outlist, in_x,</div>
<div class="line"><a name="l00964"></a><span class="lineno">  964</span>&#160;                out_x, dirlist)) {</div>
<div class="line"><a name="l00965"></a><span class="lineno">  965</span>&#160;            <span class="keywordflow">return</span> 1;</div>
<div class="line"><a name="l00966"></a><span class="lineno">  966</span>&#160;        }</div>
<div class="line"><a name="l00967"></a><span class="lineno">  967</span>&#160;</div>
<div class="line"><a name="l00968"></a><span class="lineno">  968</span>&#160;        <span class="comment">//Liste für die Messwerte</span></div>
<div class="line"><a name="l00969"></a><span class="lineno">  969</span>&#160;        <a class="code" href="classstd_1_1vector.xhtml">vector&lt;vector&lt;float&gt;</a> &gt; dataset_values;</div>
<div class="line"><a name="l00970"></a><span class="lineno">  970</span>&#160;        <span class="comment">//Liste für die Position der Werte in der Datei</span></div>
<div class="line"><a name="l00971"></a><span class="lineno">  971</span>&#160;        <a class="code" href="classstd_1_1vector.xhtml">vector&lt;vector&lt;int&gt;</a> &gt; debug_positions;</div>
<div class="line"><a name="l00972"></a><span class="lineno">  972</span>&#160;        <span class="comment">//Liste für die Zeitstempel der Datensätze</span></div>
<div class="line"><a name="l00973"></a><span class="lineno">  973</span>&#160;        <a class="code" href="classstd_1_1vector.xhtml">vector&lt;float&gt;</a> dataset_times;</div>
<div class="line"><a name="l00974"></a><span class="lineno">  974</span>&#160;        <span class="comment">//Liste für die Position der Messpunkte auf der Faser</span></div>
<div class="line"><a name="l00975"></a><span class="lineno">  975</span>&#160;        <a class="code" href="classstd_1_1vector.xhtml">vector&lt;float&gt;</a> lin_positions;</div>
<div class="line"><a name="l00976"></a><span class="lineno">  976</span>&#160;</div>
<div class="line"><a name="l00977"></a><span class="lineno">  977</span>&#160;        <span class="comment">//Einlesen der Messwerte erfolgreich?</span></div>
<div class="line"><a name="l00978"></a><span class="lineno">  978</span>&#160;        <span class="keywordflow">if</span> (!readInputFile(data_filename, dataset_values, debug_positions,</div>
<div class="line"><a name="l00979"></a><span class="lineno">  979</span>&#160;                dataset_times, lin_positions)) {</div>
<div class="line"><a name="l00980"></a><span class="lineno">  980</span>&#160;            <span class="keywordflow">return</span> 1;</div>
<div class="line"><a name="l00981"></a><span class="lineno">  981</span>&#160;        }</div>
<div class="line"><a name="l00982"></a><span class="lineno">  982</span>&#160;</div>
<div class="line"><a name="l00983"></a><span class="lineno">  983</span>&#160;        <span class="comment">//Schreiben der Ausgabe- und Logdatei erfolgreich?</span></div>
<div class="line"><a name="l00984"></a><span class="lineno">  984</span>&#160;        <span class="keywordflow">if</span> (!writeOutputFile(out_filename, err_filename, dataset_values,</div>
<div class="line"><a name="l00985"></a><span class="lineno">  985</span>&#160;                debug_positions, dataset_times, lin_positions, inlist, outlist,</div>
<div class="line"><a name="l00986"></a><span class="lineno">  986</span>&#160;                in_x, out_x, dirlist)) {</div>
<div class="line"><a name="l00987"></a><span class="lineno">  987</span>&#160;            <span class="keywordflow">return</span> 1;</div>
<div class="line"><a name="l00988"></a><span class="lineno">  988</span>&#160;        }</div>
<div class="line"><a name="l00989"></a><span class="lineno">  989</span>&#160;</div>
<div class="line"><a name="l00990"></a><span class="lineno">  990</span>&#160;        cout &lt;&lt; <span class="stringliteral">&quot;files successfully created.&quot;</span> &lt;&lt; endl;</div>
<div class="line"><a name="l00991"></a><span class="lineno">  991</span>&#160;        <span class="keywordflow">return</span> 0;</div>
<div class="line"><a name="l00992"></a><span class="lineno">  992</span>&#160;    };</div>
<div class="line"><a name="l00993"></a><span class="lineno">  993</span>&#160;</div>
<div class="line"><a name="l00994"></a><span class="lineno">  994</span>&#160;};</div>
<div class="line"><a name="l00995"></a><span class="lineno">  995</span>&#160;</div>
<div class="line"><a name="l00996"></a><span class="lineno"><a class="line" href="odisitosd_2main_8cpp.xhtml#a0ddf1224851353fc92bfbff6f499fa97">  996</a></span>&#160;<span class="keywordtype">int</span> <a class="code" href="csvtosd_2main_8cpp.xhtml#a0ddf1224851353fc92bfbff6f499fa97">main</a>(<span class="keywordtype">int</span> argc, <span class="keywordtype">char</span> *argv[]) {</div>
<div class="line"><a name="l00997"></a><span class="lineno">  997</span>&#160;    <a class="code" href="classOdisiToSdConverter.xhtml">OdisiToSdConverter</a> converter;</div>
<div class="line"><a name="l00998"></a><span class="lineno">  998</span>&#160;    <span class="keywordflow">return</span> converter.<a class="code" href="classOdisiToSdConverter.xhtml#ab4e518bcb8d7588180bb4e1edec50c06">convert</a>(argc, argv);</div>
<div class="line"><a name="l00999"></a><span class="lineno">  999</span>&#160;};</div>
<div class="ttc" id="structOdisiToSdConverter_1_1Options_xhtml_a0117562823f70067df979f4975e5b076"><div class="ttname"><a href="structOdisiToSdConverter_1_1Options.xhtml#a0117562823f70067df979f4975e5b076">OdisiToSdConverter::Options::flipobj</a></div><div class="ttdeci">bool flipobj</div><div class="ttdoc">Position auf der X-Achse spiegeln? </div><div class="ttdef"><b>Definition:</b> <a href="odisitosd_2main_8cpp_source.xhtml#l00052">main.cpp:52</a></div></div>
<div class="ttc" id="classOdisiToSdConverter_xhtml_a270932ed908757ac477370eef64db442"><div class="ttname"><a href="classOdisiToSdConverter.xhtml#a270932ed908757ac477370eef64db442">OdisiToSdConverter::readInputFile</a></div><div class="ttdeci">bool readInputFile(string path, vector&lt; vector&lt; float &gt; &gt; &amp;values, vector&lt; vector&lt; int &gt; &gt; &amp;debug_positions, vector&lt; float &gt; &amp;times, vector&lt; float &gt; &amp;lin_positions)</div><div class="ttdoc">Liest die Daten aus der Eingabedatei. </div><div class="ttdef"><b>Definition:</b> <a href="odisitosd_2main_8cpp_source.xhtml#l00587">main.cpp:587</a></div></div>
<div class="ttc" id="structOdisiToSdConverter_1_1Options_xhtml_a550a9730db03bc568f8ac51a269dd286"><div class="ttname"><a href="structOdisiToSdConverter_1_1Options.xhtml#a550a9730db03bc568f8ac51a269dd286">OdisiToSdConverter::Options::fiber_step_delta</a></div><div class="ttdeci">int fiber_step_delta</div><div class="ttdoc">Schrittweite beim Auslesen der Sensordaten (nur jeder fiber_step_delta Messpunkt auf der Faser wird v...</div><div class="ttdef"><b>Definition:</b> <a href="odisitosd_2main_8cpp_source.xhtml#l00053">main.cpp:53</a></div></div>
<div class="ttc" id="structOdisiToSdConverter_1_1Options_xhtml_a43e744e0769d2b436c56ee6a9e410613"><div class="ttname"><a href="structOdisiToSdConverter_1_1Options.xhtml#a43e744e0769d2b436c56ee6a9e410613">OdisiToSdConverter::Options::timecol</a></div><div class="ttdeci">size_t timecol</div><div class="ttdoc">Index der Spalte, die die Zeitstempel enthält. </div><div class="ttdef"><b>Definition:</b> <a href="odisitosd_2main_8cpp_source.xhtml#l00045">main.cpp:45</a></div></div>
<div class="ttc" id="classOdisiToSdConverter_xhtml_ac8d40f3edad9af5004d516809e0e40a2"><div class="ttname"><a href="classOdisiToSdConverter.xhtml#ac8d40f3edad9af5004d516809e0e40a2">OdisiToSdConverter::parseArguments</a></div><div class="ttdeci">bool parseArguments(int argc, char *argv[], string &amp;def_filename, string &amp;data_filename, string &amp;out_filename, string &amp;err_filename)</div><div class="ttdoc">Wertet die Programmargumente aus. </div><div class="ttdef"><b>Definition:</b> <a href="odisitosd_2main_8cpp_source.xhtml#l00339">main.cpp:339</a></div></div>
<div class="ttc" id="classstd_1_1vector_xhtml"><div class="ttname"><a href="classstd_1_1vector.xhtml">std::vector&lt; string &gt;</a></div></div>
<div class="ttc" id="classOdisiToSdConverter_xhtml_a8db961a716d43b3d4de4f2e4e19b0706"><div class="ttname"><a href="classOdisiToSdConverter.xhtml#a8db961a716d43b3d4de4f2e4e19b0706">OdisiToSdConverter::readSensorDefinitions</a></div><div class="ttdeci">bool readSensorDefinitions(string path, vector&lt; float &gt; &amp;inlist, vector&lt; float &gt; &amp;outlist, vector&lt; float &gt; &amp;in_x, vector&lt; float &gt; &amp;out_x, vector&lt; bool &gt; &amp;dirlist)</div><div class="ttdoc">Liest die Daten aus der Sensordefinitionsdatei. </div><div class="ttdef"><b>Definition:</b> <a href="odisitosd_2main_8cpp_source.xhtml#l00481">main.cpp:481</a></div></div>
<div class="ttc" id="classOdisiToSdConverter_xhtml_ad851e258c9aad4ab07887fc19f9cc89d"><div class="ttname"><a href="classOdisiToSdConverter.xhtml#ad851e258c9aad4ab07887fc19f9cc89d">OdisiToSdConverter::contains</a></div><div class="ttdeci">bool contains(std::vector&lt; string &gt; &amp;Vec, const string &amp;Element)</div><div class="ttdoc">Testet, ob sich ein String in einer Liste von Strings befindet. </div><div class="ttdef"><b>Definition:</b> <a href="odisitosd_2main_8cpp_source.xhtml#l00065">main.cpp:65</a></div></div>
<div class="ttc" id="structOdisiToSdConverter_1_1Options_xhtml_afb526c278f5e4273379c0e6345ce01c0"><div class="ttname"><a href="structOdisiToSdConverter_1_1Options.xhtml#afb526c278f5e4273379c0e6345ce01c0">OdisiToSdConverter::Options::max_time</a></div><div class="ttdeci">double max_time</div><div class="ttdoc">Nur bis maximal zu diesem Zeitstempel auslesen. </div><div class="ttdef"><b>Definition:</b> <a href="odisitosd_2main_8cpp_source.xhtml#l00055">main.cpp:55</a></div></div>
<div class="ttc" id="structOdisiToSdConverter_1_1Options_xhtml_a3bda06d5caa4384aba4bd5302b44cde0"><div class="ttname"><a href="structOdisiToSdConverter_1_1Options.xhtml#a3bda06d5caa4384aba4bd5302b44cde0">OdisiToSdConverter::Options::basetemp</a></div><div class="ttdeci">float basetemp</div><div class="ttdoc">Temperatur zu Beginn des Versuches (Die Odisi-Daten sind Differenzen zu dieser Anfangstemperatur). </div><div class="ttdef"><b>Definition:</b> <a href="odisitosd_2main_8cpp_source.xhtml#l00050">main.cpp:50</a></div></div>
<div class="ttc" id="classOdisiToSdConverter_xhtml_a01498491495ce740686843f6575859fd"><div class="ttname"><a href="classOdisiToSdConverter.xhtml#a01498491495ce740686843f6575859fd">OdisiToSdConverter::floattostr</a></div><div class="ttdeci">string floattostr(float val)</div><div class="ttdoc">Wandelt eine Zeichenkette (String) um. </div><div class="ttdef"><b>Definition:</b> <a href="odisitosd_2main_8cpp_source.xhtml#l00119">main.cpp:119</a></div></div>
<div class="ttc" id="classOdisiToSdConverter_xhtml_a8c6bc01ae2c063d89dc64c0a7d68c033"><div class="ttname"><a href="classOdisiToSdConverter.xhtml#a8c6bc01ae2c063d89dc64c0a7d68c033">OdisiToSdConverter::readConfiguration</a></div><div class="ttdeci">bool readConfiguration(string binary_path)</div><div class="ttdoc">Liest und setzt die Programmkonfiguration aus der Konfigurationsdatei. </div><div class="ttdef"><b>Definition:</b> <a href="odisitosd_2main_8cpp_source.xhtml#l00266">main.cpp:266</a></div></div>
<div class="ttc" id="structOdisiToSdConverter_1_1Options_xhtml_a7dda0229b360a29cd7e4b1ed26e2e71d"><div class="ttname"><a href="structOdisiToSdConverter_1_1Options.xhtml#a7dda0229b360a29cd7e4b1ed26e2e71d">OdisiToSdConverter::Options::tab_space_count</a></div><div class="ttdeci">int tab_space_count</div><div class="ttdoc">Anzahl der Leerzeichen für TAB (Für die Positionsangabe in der Log-Datei). </div><div class="ttdef"><b>Definition:</b> <a href="odisitosd_2main_8cpp_source.xhtml#l00048">main.cpp:48</a></div></div>
<div class="ttc" id="structOdisiToSdConverter_1_1Options_xhtml_ad5adb03bbad593944fb94802f9efffe1"><div class="ttname"><a href="structOdisiToSdConverter_1_1Options.xhtml#ad5adb03bbad593944fb94802f9efffe1">OdisiToSdConverter::Options::replace_comma_with_point</a></div><div class="ttdeci">bool replace_comma_with_point</div><div class="ttdoc">Sollen Kommata durch Punkte ersetzt werrden? </div><div class="ttdef"><b>Definition:</b> <a href="odisitosd_2main_8cpp_source.xhtml#l00044">main.cpp:44</a></div></div>
<div class="ttc" id="structOdisiToSdConverter_1_1Options_xhtml_a2d540b0bd36d458de7797792efb13f13"><div class="ttname"><a href="structOdisiToSdConverter_1_1Options.xhtml#a2d540b0bd36d458de7797792efb13f13">OdisiToSdConverter::Options::error_threshold</a></div><div class="ttdeci">float error_threshold</div><div class="ttdoc">Maximal zulässige Differenz zum Vorgängerwert für einen gültigen Messwert bei der Fehlerkorrektur...</div><div class="ttdef"><b>Definition:</b> <a href="odisitosd_2main_8cpp_source.xhtml#l00046">main.cpp:46</a></div></div>
<div class="ttc" id="structOdisiToSdConverter_1_1Options_xhtml_acb8ca8c36555d0fa3d1b87e2c8800fe6"><div class="ttname"><a href="structOdisiToSdConverter_1_1Options.xhtml#acb8ca8c36555d0fa3d1b87e2c8800fe6">OdisiToSdConverter::Options::startrow</a></div><div class="ttdeci">size_t startrow</div><div class="ttdoc">Index der ersten Zeile in der Odisi-Datei, die Sensordaten enthält. </div><div class="ttdef"><b>Definition:</b> <a href="odisitosd_2main_8cpp_source.xhtml#l00042">main.cpp:42</a></div></div>
<div class="ttc" id="classOdisiToSdConverter_xhtml_ab4e518bcb8d7588180bb4e1edec50c06"><div class="ttname"><a href="classOdisiToSdConverter.xhtml#ab4e518bcb8d7588180bb4e1edec50c06">OdisiToSdConverter::convert</a></div><div class="ttdeci">int convert(int argc, char *argv[])</div><div class="ttdoc">Liest die Programmargumente, die Konfiguration, die Sensordefinitionsdatei und die ODiSI-Datei um ein...</div><div class="ttdef"><b>Definition:</b> <a href="odisitosd_2main_8cpp_source.xhtml#l00908">main.cpp:908</a></div></div>
<div class="ttc" id="structOdisiToSdConverter_1_1Options_xhtml_a9e9609b45b425d128550508772ad69f6"><div class="ttname"><a href="structOdisiToSdConverter_1_1Options.xhtml#a9e9609b45b425d128550508772ad69f6">OdisiToSdConverter::Options::height</a></div><div class="ttdeci">float height</div><div class="ttdoc">Höhe der Faserebene in . </div><div class="ttdef"><b>Definition:</b> <a href="odisitosd_2main_8cpp_source.xhtml#l00049">main.cpp:49</a></div></div>
<div class="ttc" id="csvtosd_2main_8cpp_xhtml_a0ddf1224851353fc92bfbff6f499fa97"><div class="ttname"><a href="csvtosd_2main_8cpp.xhtml#a0ddf1224851353fc92bfbff6f499fa97">main</a></div><div class="ttdeci">int main(int argc, char *argv[])</div><div class="ttdef"><b>Definition:</b> <a href="csvtosd_2main_8cpp_source.xhtml#l00694">main.cpp:694</a></div></div>
<div class="ttc" id="structOdisiToSdConverter_1_1Options_xhtml_ae4c74d1fdfbaf37eb4b38f4b684cfa31"><div class="ttname"><a href="structOdisiToSdConverter_1_1Options.xhtml#ae4c74d1fdfbaf37eb4b38f4b684cfa31">OdisiToSdConverter::Options::separator</a></div><div class="ttdeci">char separator</div><div class="ttdoc">Das verwendete Separatorzeichen. </div><div class="ttdef"><b>Definition:</b> <a href="odisitosd_2main_8cpp_source.xhtml#l00043">main.cpp:43</a></div></div>
<div class="ttc" id="classOdisiToSdConverter_xhtml_af7ff6a5280429bfa3ade6202e4651e25"><div class="ttname"><a href="classOdisiToSdConverter.xhtml#af7ff6a5280429bfa3ade6202e4651e25">OdisiToSdConverter::getTextBlock</a></div><div class="ttdeci">string getTextBlock(string data, int n)</div><div class="ttdoc">Gibt den n-ten durch Leerzeichen abgetrennten Block aus einem String zurück. </div><div class="ttdef"><b>Definition:</b> <a href="odisitosd_2main_8cpp_source.xhtml#l00132">main.cpp:132</a></div></div>
<div class="ttc" id="classOdisiToSdConverter_xhtml_a8bf5e68acbe7e6388db98b1e1d321709"><div class="ttname"><a href="classOdisiToSdConverter.xhtml#a8bf5e68acbe7e6388db98b1e1d321709">OdisiToSdConverter::replaceAll</a></div><div class="ttdeci">void replaceAll(string &amp;str, const string from, const string to)</div><div class="ttdoc">Ersetzt in einem String alle Vorkommen eines Teilstrings durch einen Anderen. </div><div class="ttdef"><b>Definition:</b> <a href="odisitosd_2main_8cpp_source.xhtml#l00097">main.cpp:97</a></div></div>
<div class="ttc" id="classOdisiToSdConverter_xhtml_a22b9cc047c31d81b84e74d68d69ba2c6"><div class="ttname"><a href="classOdisiToSdConverter.xhtml#a22b9cc047c31d81b84e74d68d69ba2c6">OdisiToSdConverter::contains</a></div><div class="ttdeci">bool contains(std::vector&lt; int &gt; &amp;Vec, const int &amp;Element)</div><div class="ttdoc">Testet, ob sich eine Ganzzahl in einer Liste von Ganzzahlen befindet. </div><div class="ttdef"><b>Definition:</b> <a href="odisitosd_2main_8cpp_source.xhtml#l00081">main.cpp:81</a></div></div>
<div class="ttc" id="structOdisiToSdConverter_1_1Options_xhtml_a88d153166692e5bb6a4a37d453b2193c"><div class="ttname"><a href="structOdisiToSdConverter_1_1Options.xhtml#a88d153166692e5bb6a4a37d453b2193c">OdisiToSdConverter::Options::objwidth</a></div><div class="ttdeci">float objwidth</div><div class="ttdoc">Position der Messwerte auf der X-Achse um diesen Wert verschieben. </div><div class="ttdef"><b>Definition:</b> <a href="odisitosd_2main_8cpp_source.xhtml#l00051">main.cpp:51</a></div></div>
<div class="ttc" id="structOdisiToSdConverter_1_1Options_xhtml"><div class="ttname"><a href="structOdisiToSdConverter_1_1Options.xhtml">OdisiToSdConverter::Options</a></div><div class="ttdoc">Strunktur für die Programmeinstellungen. </div><div class="ttdef"><b>Definition:</b> <a href="odisitosd_2main_8cpp_source.xhtml#l00041">main.cpp:41</a></div></div>
<div class="ttc" id="structOdisiToSdConverter_1_1Options_xhtml_a2c97daa31cfdd315fd1d9a3307665edb"><div class="ttname"><a href="structOdisiToSdConverter_1_1Options.xhtml#a2c97daa31cfdd315fd1d9a3307665edb">OdisiToSdConverter::Options::min_time</a></div><div class="ttdeci">double min_time</div><div class="ttdoc">Ab diesem Zeitstempel auslesen. </div><div class="ttdef"><b>Definition:</b> <a href="odisitosd_2main_8cpp_source.xhtml#l00056">main.cpp:56</a></div></div>
<div class="ttc" id="structOdisiToSdConverter_1_1Options_xhtml_a2e5c6038a0ff5ca7d32be89740b82aa4"><div class="ttname"><a href="structOdisiToSdConverter_1_1Options.xhtml#a2e5c6038a0ff5ca7d32be89740b82aa4">OdisiToSdConverter::Options::time_step_delta</a></div><div class="ttdeci">int time_step_delta</div><div class="ttdoc">Schrittweite beim Auslesen der Sensordaten (nur jeder time_step_delta Zeitpunkt wird verwendet)...</div><div class="ttdef"><b>Definition:</b> <a href="odisitosd_2main_8cpp_source.xhtml#l00054">main.cpp:54</a></div></div>
<div class="ttc" id="classOdisiToSdConverter_xhtml_a58c9836341b5aa5d8fa8eb28021b070b"><div class="ttname"><a href="classOdisiToSdConverter.xhtml#a58c9836341b5aa5d8fa8eb28021b070b">OdisiToSdConverter::writeOutputFile</a></div><div class="ttdeci">bool writeOutputFile(string path, string logpath, vector&lt; vector&lt; float &gt; &gt; &amp;values, vector&lt; vector&lt; int &gt; &gt; &amp;debug_positions, vector&lt; float &gt; &amp;times, vector&lt; float &gt; &amp;lin_positions, vector&lt; float &gt; &amp;inlist, vector&lt; float &gt; &amp;outlist, vector&lt; float &gt; &amp;in_x, vector&lt; float &gt; &amp;out_x, vector&lt; bool &gt; &amp;dirlist)</div><div class="ttdoc">Schreibt die Ausgabedatei. </div><div class="ttdef"><b>Definition:</b> <a href="odisitosd_2main_8cpp_source.xhtml#l00687">main.cpp:687</a></div></div>
<div class="ttc" id="structOdisiToSdConverter_1_1Options_xhtml_aca66edaa34e64581ddb68bca902634df"><div class="ttname"><a href="structOdisiToSdConverter_1_1Options.xhtml#aca66edaa34e64581ddb68bca902634df">OdisiToSdConverter::Options::maxfwcount</a></div><div class="ttdeci">int maxfwcount</div><div class="ttdoc">Maximale Schrittanzahl zum finden eines gültigen Messwertes bei der Fehlerkorrektur. </div><div class="ttdef"><b>Definition:</b> <a href="odisitosd_2main_8cpp_source.xhtml#l00047">main.cpp:47</a></div></div>
<div class="ttc" id="Importer_8cpp_xhtml_a0dd0686c00e64af27b47b4c16399d747"><div class="ttname"><a href="Importer_8cpp.xhtml#a0dd0686c00e64af27b47b4c16399d747">getTextBlock</a></div><div class="ttdeci">string getTextBlock(string data, int n)</div><div class="ttdoc">Gibt den n-ten durch Leerzeichen abgetrennten Block aus einem String zurück. </div><div class="ttdef"><b>Definition:</b> <a href="Importer_8cpp_source.xhtml#l00051">Importer.cpp:51</a></div></div>
<div class="ttc" id="classOdisiToSdConverter_xhtml"><div class="ttname"><a href="classOdisiToSdConverter.xhtml">OdisiToSdConverter</a></div><div class="ttdoc">Konverter von ODiSI zu .tsd. </div><div class="ttdef"><b>Definition:</b> <a href="odisitosd_2main_8cpp_source.xhtml#l00022">main.cpp:22</a></div></div>
<div class="ttc" id="classOdisiToSdConverter_xhtml_a0497baba5fd610c206b57a80154425b8"><div class="ttname"><a href="classOdisiToSdConverter.xhtml#a0497baba5fd610c206b57a80154425b8">OdisiToSdConverter::parseLine</a></div><div class="ttdeci">void parseLine(string line, vector&lt; float &gt; *out, vector&lt; float &gt; *times, vector&lt; int &gt; *debug_positions, size_t row_count)</div><div class="ttdoc">Sammelt Daten aus einer Textzeile (string). </div><div class="ttdef"><b>Definition:</b> <a href="odisitosd_2main_8cpp_source.xhtml#l00174">main.cpp:174</a></div></div>
</div><!-- fragment --></div><!-- contents -->
<!-- start footer part -->
<hr class="footer"/><address class="footer"><small>
Erzeugt am Fre Mai 30 2014 10:51:08 für Simple Analyzer von &#160;<a href="http://www.doxygen.org/index.html">
<img class="footer" src="doxygen.png" alt="doxygen"/>
</a> 1.8.6
</small></address>
</body>
</html>
