<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.4"/>
<title>Simple Analyzer: simpleanalyzer-gui/src/fileIO/Importer.cpp Quellcode</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/javascript">
  $(document).ready(function() { searchBox.OnSelectItem(0); });
</script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="doc_icon.png"/></td>
  <td style="padding-left: 0.5em;">
   <div id="projectname">Simple Analyzer
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Erzeugt von Doxygen 1.8.4 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Suchen');
</script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.xhtml"><span>Hauptseite</span></a></li>
      <li><a href="pages.xhtml"><span>Zusätzliche&#160;Informationen</span></a></li>
      <li><a href="namespaces.xhtml"><span>Namensbereiche</span></a></li>
      <li><a href="annotated.xhtml"><span>Klassen</span></a></li>
      <li class="current"><a href="files.xhtml"><span>Dateien</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Suchen" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="files.xhtml"><span>Auflistung&#160;der&#160;Dateien</span></a></li>
      <li><a href="globals.xhtml"><span>Datei-Elemente</span></a></li>
    </ul>
  </div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
<a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(0)"><span class="SelectionMark">&#160;</span>Alle</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(1)"><span class="SelectionMark">&#160;</span>Klassen</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(2)"><span class="SelectionMark">&#160;</span>Namensbereiche</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(3)"><span class="SelectionMark">&#160;</span>Dateien</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(4)"><span class="SelectionMark">&#160;</span>Funktionen</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(5)"><span class="SelectionMark">&#160;</span>Variablen</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(6)"><span class="SelectionMark">&#160;</span>Aufzählungen</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(7)"><span class="SelectionMark">&#160;</span>Aufzählungswerte</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(8)"><span class="SelectionMark">&#160;</span>Freundbeziehungen</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(9)"><span class="SelectionMark">&#160;</span>Makrodefinitionen</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(10)"><span class="SelectionMark">&#160;</span>Seiten</a></div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="dir_c77ee61374efdb50c23b8fd1bc609a29.xhtml">simpleanalyzer-gui</a></li><li class="navelem"><a class="el" href="dir_fc69cc80a9959f5f4d9fc5f3e2f537ca.xhtml">src</a></li><li class="navelem"><a class="el" href="dir_2349201c047e2c0ea730b171cb17a436.xhtml">fileIO</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="headertitle">
<div class="title">Importer.cpp</div>  </div>
</div><!--header-->
<div class="contents">
<a href="Importer_8cpp.xhtml">gehe zur Dokumentation dieser Datei</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="comment">/*</span></div>
<div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="comment"> * Importer.cpp</span></div>
<div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="comment"> *  Created on: 31.08.2013</span></div>
<div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="comment"> *      Author: valentin</span></div>
<div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="comment"> */</span></div>
<div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;</div>
<div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="Importer_8h.xhtml">Importer.h</a>&quot;</span></div>
<div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;<span class="preprocessor">#include &lt;iostream&gt;</span></div>
<div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;<span class="preprocessor">#include &lt;fstream&gt;</span></div>
<div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;<span class="preprocessor">#include &lt;string&gt;</span></div>
<div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;<span class="preprocessor">#include &lt;vector&gt;</span></div>
<div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;<span class="preprocessor">#include &lt;algorithm&gt;</span></div>
<div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;<span class="preprocessor">#include &quot;../processing/ObjectData.h&quot;</span></div>
<div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;<span class="keyword">using namespace </span>std;</div>
<div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;</div>
<div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;<span class="preprocessor">#ifdef _WIN32</span></div>
<div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;<span class="preprocessor"></span><span class="preprocessor">#define PATH_SEPARATOR &#39;\\&#39;</span></div>
<div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;<span class="preprocessor"></span><span class="preprocessor">#else</span></div>
<div class="line"><a name="l00020"></a><span class="lineno"><a class="code" href="Importer_8cpp.xhtml#a256a5721249aa3309437212cc21a9fe4">   20</a></span>&#160;<span class="preprocessor"></span><span class="preprocessor">#define PATH_SEPARATOR &#39;/&#39;</span></div>
<div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;<span class="preprocessor"></span><span class="preprocessor">#endif</span></div>
<div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;<span class="preprocessor"></span></div>
<div class="line"><a name="l00023"></a><span class="lineno"><a class="code" href="classImporter.xhtml#afaf93b56e3558a92405ab627ab8ee1d1">   23</a></span>&#160;<a class="code" href="classImporter.xhtml#afaf93b56e3558a92405ab627ab8ee1d1" title="Der Konstruktor. ">Importer::Importer</a>() {</div>
<div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;</div>
<div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;}</div>
<div class="line"><a name="l00026"></a><span class="lineno"><a class="code" href="Importer_8cpp.xhtml#a0903d5717f5c64c86b68bf17c4783e91">   26</a></span>&#160;<span class="keywordtype">int</span> <a class="code" href="Importer_8cpp.xhtml#a0903d5717f5c64c86b68bf17c4783e91">getFaceIndex</a>(<span class="keywordtype">string</span> data,<span class="keywordtype">bool</span> withUV) {</div>
<div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;    <span class="keywordflow">if</span> (withUV) {</div>
<div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;        <span class="keywordflow">return</span> int(atof(data.substr(0,data.find(<span class="stringliteral">&quot;/&quot;</span>)).c_str()));</div>
<div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;    } <span class="keywordflow">else</span> {</div>
<div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;        <span class="keywordflow">return</span> int(atof(data.c_str()));</div>
<div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;    }</div>
<div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;}</div>
<div class="line"><a name="l00033"></a><span class="lineno"><a class="code" href="Importer_8cpp.xhtml#a0dd0686c00e64af27b47b4c16399d747">   33</a></span>&#160;<span class="keywordtype">string</span> <a class="code" href="Importer_8cpp.xhtml#a0dd0686c00e64af27b47b4c16399d747">getTextBlock</a>(<span class="keywordtype">string</span> data,<span class="keywordtype">int</span> n) { <span class="comment">//Gibt den n-ten durch Leerzeichen abgetrennten Block zurück</span></div>
<div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;    <span class="keywordtype">int</span> pos = 0;</div>
<div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;    <span class="keywordtype">int</span> prevPos = 0;</div>
<div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;    <span class="keywordtype">size_t</span> curPos = 0;</div>
<div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;    curPos = data.find(<span class="stringliteral">&quot; &quot;</span>);</div>
<div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;    <span class="keywordflow">if</span> (curPos==data.npos) {</div>
<div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;        <span class="keywordflow">return</span> <span class="stringliteral">&quot;&quot;</span>;</div>
<div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;    }</div>
<div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;    pos = curPos;</div>
<div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;    <span class="keywordflow">for</span> (<span class="keywordtype">int</span> i=0;i&lt;n;i++) {</div>
<div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;        curPos = data.find(<span class="stringliteral">&quot; &quot;</span>,pos+1);</div>
<div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;        <span class="keywordflow">if</span> (curPos==data.npos) {</div>
<div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;            <span class="keywordflow">if</span> (n-i&gt;1) {    <span class="comment">//Mehr Blöcke als vorhanden nachgefragt</span></div>
<div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;                <span class="keywordflow">return</span> <span class="stringliteral">&quot;&quot;</span>;</div>
<div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;            } <span class="keywordflow">else</span> {</div>
<div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;                prevPos = pos+1;</div>
<div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;                pos = data.size();</div>
<div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;                <span class="keywordflow">break</span>;</div>
<div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;            }</div>
<div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;        }</div>
<div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;        prevPos = pos+1;</div>
<div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;        pos = curPos;</div>
<div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;</div>
<div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;    }</div>
<div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;    <span class="keywordflow">return</span> data.substr(prevPos,pos-(prevPos));</div>
<div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;}</div>
<div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;</div>
<div class="line"><a name="l00060"></a><span class="lineno"><a class="code" href="classImporter.xhtml#a5013417fb7556dce65dba1ed3aec4e50">   60</a></span>&#160;<a class="code" href="classObjectData.xhtml#a20e8cd3cd0f8af3b571b9393aa9e6484" title="Status einer die Objektdaten betreffenden Aktion. ">ObjectData::ObjectDataStatus</a> <a class="code" href="classImporter.xhtml#a5013417fb7556dce65dba1ed3aec4e50" title="Lädt Objektdaten aus einer .obj-Datei. ">Importer::ImportObj</a>(<span class="keyword">const</span> <span class="keywordtype">char</span>* filename,<a class="code" href="classObjectData.xhtml" title="Die Daten eines Versuchsobjekts. ">ObjectData</a>* data) {</div>
<div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;    <span class="comment">// read data //</span></div>
<div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;</div>
<div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;    vector&lt;double&gt; points;</div>
<div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;    vector&lt;vector&lt;int&gt; &gt; faces;</div>
<div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;    ifstream file;</div>
<div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;    file.open(filename);</div>
<div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;    <span class="keywordflow">if</span> (!file.is_open()) {</div>
<div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;        cerr &lt;&lt; <span class="stringliteral">&quot;could not open file: &quot;</span>&lt;&lt;filename&lt;&lt;endl;</div>
<div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;        <span class="keywordflow">return</span> <a class="code" href="classObjectData.xhtml#a20e8cd3cd0f8af3b571b9393aa9e6484a755675bc74deb397209031b5197b78cb">ObjectData::OD_FAILURE</a>;</div>
<div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;    }</div>
<div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;    <span class="keywordtype">string</span> line;</div>
<div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;    <span class="keywordtype">int</span> currentMatIndex = -1;</div>
<div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;    <span class="keywordtype">int</span> currentMatPointCount = 0;</div>
<div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;    <span class="keywordtype">int</span> currentMatFirstPoint = 0;</div>
<div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;    <span class="keywordflow">while</span> (file.good()) {</div>
<div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;        getline(file,line);</div>
<div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;        <span class="keywordtype">int</span> firstspace = line.find(<span class="stringliteral">&quot; &quot;</span>);</div>
<div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;        <span class="keywordtype">string</span> type = line.substr(0,firstspace);</div>
<div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;        <span class="keywordtype">string</span> line_data = line.substr(firstspace+1);</div>
<div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;        <span class="keywordflow">if</span> (type==<span class="stringliteral">&quot;v&quot;</span>) {</div>
<div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;            points.resize(points.size()+3);</div>
<div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;            <span class="keywordtype">int</span> space1 = line_data.find(<span class="stringliteral">&quot; &quot;</span>);</div>
<div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;            <span class="keywordtype">int</span> space2 = line_data.rfind(<span class="stringliteral">&quot; &quot;</span>);</div>
<div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;            points.at(points.size()-3) = atof(line_data.substr(0,space1).c_str());</div>
<div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;            points.at(points.size()-2) = atof(line_data.substr(space1,space2).c_str());</div>
<div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;            points.at(points.size()-1) = atof(line_data.substr(space2).c_str());</div>
<div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;            currentMatPointCount++;</div>
<div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;            <span class="keywordflow">continue</span>;</div>
<div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;        }</div>
<div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;        <span class="keywordflow">if</span> (type==<span class="stringliteral">&quot;f&quot;</span>) {</div>
<div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;            <span class="keywordflow">if</span> (currentMatIndex&lt;0) {</div>
<div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;                cout &lt;&lt; <span class="stringliteral">&quot;no material set!&quot;</span> &lt;&lt; endl;</div>
<div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;            }</div>
<div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;            <span class="keywordtype">int</span> spaces = count(line_data.begin(),line_data.end(),<span class="charliteral">&#39; &#39;</span>);</div>
<div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;            <span class="keywordtype">bool</span> withUV = (line_data.find(<span class="stringliteral">&quot;/&quot;</span>)&lt;line_data.npos);</div>
<div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;            faces.resize(faces.size()+1);</div>
<div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;            vector&lt;int&gt;* subvec = &amp;faces.at(faces.size()-1);</div>
<div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;            subvec-&gt;resize(spaces+1);</div>
<div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;            <span class="keywordtype">int</span> lastpos = 0;</div>
<div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;            <span class="keywordflow">for</span> (<span class="keywordtype">int</span> i=0;i&lt;=spaces;i++) {</div>
<div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;                <span class="keywordtype">int</span> pos = line_data.find(<span class="stringliteral">&quot; &quot;</span>,lastpos);</div>
<div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;                subvec-&gt;at(i) = <a class="code" href="Importer_8cpp.xhtml#a0903d5717f5c64c86b68bf17c4783e91">getFaceIndex</a>(line_data.substr(lastpos,pos),withUV)-currentMatFirstPoint;</div>
<div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;                lastpos = pos+1;</div>
<div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;            }</div>
<div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;            <span class="keywordflow">continue</span>;</div>
<div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;        }</div>
<div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;        <span class="keywordflow">if</span> (type==<span class="stringliteral">&quot;mtllib&quot;</span>) {</div>
<div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;            <span class="keywordtype">string</span> mtlpath = <a class="code" href="Importer_8cpp.xhtml#a0dd0686c00e64af27b47b4c16399d747">getTextBlock</a>(line,1);</div>
<div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;            ifstream mtlfile;</div>
<div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;            <span class="keywordtype">string</span> fn = string(filename);</div>
<div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;            <span class="keywordtype">string</span> filedir = <span class="stringliteral">&quot;&quot;</span>;</div>
<div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;            <span class="keywordtype">size_t</span> lastps = fn.find_last_of(<a class="code" href="Importer_8cpp.xhtml#a256a5721249aa3309437212cc21a9fe4">PATH_SEPARATOR</a>);</div>
<div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;            <span class="keywordflow">if</span> (lastps!=fn.npos) {</div>
<div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;                filedir = fn.substr(0,fn.find_last_of(<a class="code" href="Importer_8cpp.xhtml#a256a5721249aa3309437212cc21a9fe4">PATH_SEPARATOR</a>)+1);</div>
<div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;            }</div>
<div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;            cout &lt;&lt; (filedir+mtlpath).c_str() &lt;&lt; endl;</div>
<div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;            mtlfile.open((filedir+mtlpath).c_str());</div>
<div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;            <span class="keywordflow">if</span> (!mtlfile.is_open()) {</div>
<div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;                cerr &lt;&lt; <span class="stringliteral">&quot;could not open file: &quot;</span>&lt;&lt;mtlpath&lt;&lt;endl;</div>
<div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;                <span class="keywordflow">return</span> <a class="code" href="classObjectData.xhtml#a20e8cd3cd0f8af3b571b9393aa9e6484a755675bc74deb397209031b5197b78cb">ObjectData::OD_FAILURE</a>;</div>
<div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;            }</div>
<div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;            <a class="code" href="structObjectData_1_1MaterialData.xhtml" title="Die Daten eines Materials. ">ObjectData::MaterialData</a>* currentMat = NULL;</div>
<div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;            <span class="keywordflow">while</span> (mtlfile.good()) {</div>
<div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;                <span class="keywordtype">string</span> mtlline;</div>
<div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;                getline(mtlfile,mtlline);</div>
<div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;                <span class="keywordtype">int</span> mtlfirstspace = mtlline.find(<span class="stringliteral">&quot; &quot;</span>);</div>
<div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;                <span class="keywordtype">string</span> mtltype = mtlline.substr(0,mtlfirstspace);</div>
<div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;                <span class="keywordtype">string</span> mtldata = mtlline.substr(mtlfirstspace+1);</div>
<div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;                <span class="keywordflow">if</span> (mtltype==<span class="stringliteral">&quot;newmtl&quot;</span>) {</div>
<div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;                    data-&gt;<a class="code" href="classObjectData.xhtml#afda67d7524b83780e431dd3a9c5ac23a" title="Gibt eine Referenz auf die Liste der Materialien (mit Materialdaten) des Objekts zurück. ">getMaterials</a>()-&gt;resize(data-&gt;<a class="code" href="classObjectData.xhtml#afda67d7524b83780e431dd3a9c5ac23a" title="Gibt eine Referenz auf die Liste der Materialien (mit Materialdaten) des Objekts zurück. ">getMaterials</a>()-&gt;size()+1);</div>
<div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;                    currentMat = &amp;data-&gt;<a class="code" href="classObjectData.xhtml#afda67d7524b83780e431dd3a9c5ac23a" title="Gibt eine Referenz auf die Liste der Materialien (mit Materialdaten) des Objekts zurück. ">getMaterials</a>()-&gt;at(data-&gt;<a class="code" href="classObjectData.xhtml#afda67d7524b83780e431dd3a9c5ac23a" title="Gibt eine Referenz auf die Liste der Materialien (mit Materialdaten) des Objekts zurück. ">getMaterials</a>()-&gt;size()-1);</div>
<div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;                    currentMat-&gt;<a class="code" href="structObjectData_1_1MaterialData.xhtml#a795f1265218b9a125559bbe9231f3c8d" title="Der Name des Materials. ">name</a> = mtldata;</div>
<div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;                    currentMat-&gt;<a class="code" href="structObjectData_1_1MaterialData.xhtml#a35d4f03b3af4349f69d5fed072118dca" title="Der zu verwendende Interpolationsmodus. ">interpolation_mode</a> = <a class="code" href="classInterpolator.xhtml#adb733b1439a2903feae57fa734ced0c2a3a3f536edbfcc38cea69d59eb5709769">Interpolator::LINEAR</a>;</div>
<div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;                    currentMat-&gt;<a class="code" href="structObjectData_1_1MaterialData.xhtml#a37980da11f6b51b30eb41c3ab4e9674a" title="Soll das Material angezeigt werden? ">visible</a> = <span class="keyword">true</span>;</div>
<div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;                    currentMat-&gt;<a class="code" href="structObjectData_1_1MaterialData.xhtml#a22bff8a90f617a5485690bd017dcf701" title="Liste, die für jeden Punkt in der aktuellen Geometrie angibt, ob er extra- (true) oder interpoliert (...">extrapolated</a> = NULL;</div>
<div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;                }</div>
<div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;                <span class="keywordflow">if</span> (mtltype==<span class="stringliteral">&quot;Kd&quot;</span>) {</div>
<div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;                    <span class="keywordflow">for</span> (<span class="keywordtype">int</span> i=0;i&lt;3;i++) {</div>
<div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;                        currentMat-&gt;<a class="code" href="structObjectData_1_1MaterialData.xhtml#a3930f8e673d50b88c9234c7f73c16a91" title="Die Farbe des Materials im RGB-Format. ">color</a>[i] = atof(<a class="code" href="Importer_8cpp.xhtml#a0dd0686c00e64af27b47b4c16399d747">getTextBlock</a>(mtldata,i).c_str());</div>
<div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;                    }</div>
<div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;                }</div>
<div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;                <span class="keywordflow">if</span> (mtltype==<span class="stringliteral">&quot;density&quot;</span>) {</div>
<div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;                    currentMat-&gt;<a class="code" href="structObjectData_1_1MaterialData.xhtml#a49cbca11f42993f41497e725fe8ca68c" title="Die Dichte in . ">density</a> = atof(<a class="code" href="Importer_8cpp.xhtml#a0dd0686c00e64af27b47b4c16399d747">getTextBlock</a>(mtlline,1).c_str());</div>
<div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;                }</div>
<div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;                <span class="keywordflow">if</span> (mtltype==<span class="stringliteral">&quot;spezcap&quot;</span>) {</div>
<div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;                    currentMat-&gt;<a class="code" href="structObjectData_1_1MaterialData.xhtml#a784e2b70f98d146979fd422d41445fea" title="Spezifische Wärmekapazität in . ">specificheatcapacity</a> = atof(<a class="code" href="Importer_8cpp.xhtml#a0dd0686c00e64af27b47b4c16399d747">getTextBlock</a>(mtlline,1).c_str());</div>
<div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;                }</div>
<div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;            }</div>
<div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;            <span class="keywordflow">continue</span>;</div>
<div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;        }</div>
<div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;        <span class="keywordflow">if</span> (type==<span class="stringliteral">&quot;usemtl&quot;</span>) {</div>
<div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;            <span class="keywordtype">string</span> mat_str = <a class="code" href="Importer_8cpp.xhtml#a0dd0686c00e64af27b47b4c16399d747">getTextBlock</a>(line,1);</div>
<div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160;            <span class="keywordflow">for</span> (<span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> i=0;i&lt;data-&gt;<a class="code" href="classObjectData.xhtml#afda67d7524b83780e431dd3a9c5ac23a" title="Gibt eine Referenz auf die Liste der Materialien (mit Materialdaten) des Objekts zurück. ">getMaterials</a>()-&gt;size();i++) {</div>
<div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160;                <span class="keywordflow">if</span> (data-&gt;<a class="code" href="classObjectData.xhtml#afda67d7524b83780e431dd3a9c5ac23a" title="Gibt eine Referenz auf die Liste der Materialien (mit Materialdaten) des Objekts zurück. ">getMaterials</a>()-&gt;at(i).name==mat_str) {</div>
<div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160;                    currentMatIndex = i;</div>
<div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160;                    <span class="keywordflow">break</span>;</div>
<div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160;                }</div>
<div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160;            }</div>
<div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160;            <span class="keywordflow">continue</span>;</div>
<div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160;        }</div>
<div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160;        <span class="keywordflow">if</span> (type==<span class="stringliteral">&quot;o&quot;</span> || !file.good()) {    <span class="comment">// Zeichen &quot;o&quot; oder Dateiende</span></div>
<div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160;            <span class="keywordflow">if</span> (currentMatPointCount&gt;0) { <span class="comment">//Objekt beenden</span></div>
<div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160;                <span class="comment">// Build tetgenio //</span></div>
<div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160;                tetgenio* io = <span class="keyword">new</span> tetgenio();</div>
<div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160;                io-&gt;firstnumber = 0;</div>
<div class="line"><a name="l00166"></a><span class="lineno">  166</span>&#160;                io-&gt;numberofpoints = currentMatPointCount;</div>
<div class="line"><a name="l00167"></a><span class="lineno">  167</span>&#160;                io-&gt;pointlist = <span class="keyword">new</span> REAL[currentMatPointCount*3];</div>
<div class="line"><a name="l00168"></a><span class="lineno">  168</span>&#160;                <span class="keywordflow">for</span> (<span class="keywordtype">int</span> i=0;i&lt;currentMatPointCount*3;i++) {</div>
<div class="line"><a name="l00169"></a><span class="lineno">  169</span>&#160;                    io-&gt;pointlist[i] = points.at(3*currentMatFirstPoint+i);</div>
<div class="line"><a name="l00170"></a><span class="lineno">  170</span>&#160;                }</div>
<div class="line"><a name="l00171"></a><span class="lineno">  171</span>&#160;                io-&gt;numberoffacets = faces.size();</div>
<div class="line"><a name="l00172"></a><span class="lineno">  172</span>&#160;                io-&gt;facetlist = <span class="keyword">new</span> tetgenio::facet[io-&gt;numberoffacets];</div>
<div class="line"><a name="l00173"></a><span class="lineno">  173</span>&#160;                <span class="keywordflow">for</span> (<span class="keywordtype">int</span> i=0;i&lt;io-&gt;numberoffacets;i++) {</div>
<div class="line"><a name="l00174"></a><span class="lineno">  174</span>&#160;                    tetgenio::facet* face = &amp;io-&gt;facetlist[i];</div>
<div class="line"><a name="l00175"></a><span class="lineno">  175</span>&#160;                    face-&gt;numberofpolygons = 1;</div>
<div class="line"><a name="l00176"></a><span class="lineno">  176</span>&#160;                    face-&gt;polygonlist = <span class="keyword">new</span> tetgenio::polygon[face-&gt;numberofpolygons];</div>
<div class="line"><a name="l00177"></a><span class="lineno">  177</span>&#160;                    face-&gt;numberofholes = 0;</div>
<div class="line"><a name="l00178"></a><span class="lineno">  178</span>&#160;                    face-&gt;holelist = NULL;</div>
<div class="line"><a name="l00179"></a><span class="lineno">  179</span>&#160;                    tetgenio::polygon* poly = &amp;face-&gt;polygonlist[0];</div>
<div class="line"><a name="l00180"></a><span class="lineno">  180</span>&#160;                    vector&lt;int&gt;* subvec = &amp;faces.at(i);</div>
<div class="line"><a name="l00181"></a><span class="lineno">  181</span>&#160;                    poly-&gt;numberofvertices = subvec-&gt;size();</div>
<div class="line"><a name="l00182"></a><span class="lineno">  182</span>&#160;                    poly-&gt;vertexlist = <span class="keyword">new</span> <span class="keywordtype">int</span>[poly-&gt;numberofvertices];</div>
<div class="line"><a name="l00183"></a><span class="lineno">  183</span>&#160;                    <span class="keywordflow">for</span> (<span class="keywordtype">int</span> j=0;j&lt;poly-&gt;numberofvertices;j++) {</div>
<div class="line"><a name="l00184"></a><span class="lineno">  184</span>&#160;                        poly-&gt;vertexlist[j] = subvec-&gt;at(j)-1;</div>
<div class="line"><a name="l00185"></a><span class="lineno">  185</span>&#160;                    }</div>
<div class="line"><a name="l00186"></a><span class="lineno">  186</span>&#160;                }</div>
<div class="line"><a name="l00187"></a><span class="lineno">  187</span>&#160;                data-&gt;<a class="code" href="classObjectData.xhtml#afda67d7524b83780e431dd3a9c5ac23a" title="Gibt eine Referenz auf die Liste der Materialien (mit Materialdaten) des Objekts zurück. ">getMaterials</a>()-&gt;at(currentMatIndex).tetgeninput = io;</div>
<div class="line"><a name="l00188"></a><span class="lineno">  188</span>&#160;            }</div>
<div class="line"><a name="l00189"></a><span class="lineno">  189</span>&#160;</div>
<div class="line"><a name="l00190"></a><span class="lineno">  190</span>&#160;            currentMatFirstPoint += currentMatPointCount;</div>
<div class="line"><a name="l00191"></a><span class="lineno">  191</span>&#160;            currentMatPointCount = 0;</div>
<div class="line"><a name="l00192"></a><span class="lineno">  192</span>&#160;            faces.clear();</div>
<div class="line"><a name="l00193"></a><span class="lineno">  193</span>&#160;            <span class="keywordflow">continue</span>;</div>
<div class="line"><a name="l00194"></a><span class="lineno">  194</span>&#160;        }</div>
<div class="line"><a name="l00195"></a><span class="lineno">  195</span>&#160;    }</div>
<div class="line"><a name="l00196"></a><span class="lineno">  196</span>&#160;    file.close();</div>
<div class="line"><a name="l00197"></a><span class="lineno">  197</span>&#160;    <span class="keywordflow">return</span> <a class="code" href="classObjectData.xhtml#a20e8cd3cd0f8af3b571b9393aa9e6484a85cb5197df82ef2c0657cbe27cd86d3b">ObjectData::OD_SUCCESS</a>;</div>
<div class="line"><a name="l00198"></a><span class="lineno">  198</span>&#160;}</div>
<div class="line"><a name="l00199"></a><span class="lineno"><a class="code" href="classImporter.xhtml#a001bd26372d94f96de66f7bcb90cc790">  199</a></span>&#160;<a class="code" href="classObjectData.xhtml#a20e8cd3cd0f8af3b571b9393aa9e6484" title="Status einer die Objektdaten betreffenden Aktion. ">ObjectData::ObjectDataStatus</a> <a class="code" href="classImporter.xhtml#a001bd26372d94f96de66f7bcb90cc790" title="Lädt von einfache Sensordaten (ohne Zeit) und Verknüpft diese mit dem Objekt. ">Importer::LoadSensorData</a>(<span class="keyword">const</span> <span class="keywordtype">char</span>* filename,<a class="code" href="classObjectData.xhtml" title="Die Daten eines Versuchsobjekts. ">ObjectData</a>* data) {</div>
<div class="line"><a name="l00200"></a><span class="lineno">  200</span>&#160;    ifstream file;</div>
<div class="line"><a name="l00201"></a><span class="lineno">  201</span>&#160;    file.open(filename);</div>
<div class="line"><a name="l00202"></a><span class="lineno">  202</span>&#160;    <span class="keywordflow">if</span> (!file.is_open()) {</div>
<div class="line"><a name="l00203"></a><span class="lineno">  203</span>&#160;        cerr &lt;&lt; <span class="stringliteral">&quot;could not open file: &quot;</span>&lt;&lt;filename&lt;&lt;endl;</div>
<div class="line"><a name="l00204"></a><span class="lineno">  204</span>&#160;        <span class="keywordflow">return</span> <a class="code" href="classObjectData.xhtml#a20e8cd3cd0f8af3b571b9393aa9e6484a755675bc74deb397209031b5197b78cb">ObjectData::OD_FAILURE</a>;</div>
<div class="line"><a name="l00205"></a><span class="lineno">  205</span>&#160;    }</div>
<div class="line"><a name="l00206"></a><span class="lineno">  206</span>&#160;    <span class="keywordtype">string</span> line;</div>
<div class="line"><a name="l00207"></a><span class="lineno">  207</span>&#160;</div>
<div class="line"><a name="l00208"></a><span class="lineno">  208</span>&#160;    data-&gt;<a class="code" href="classObjectData.xhtml#a72ac93213382f67b4d5b40c011eb1656" title="Gibt eine Referenz auf die Sensordaten des Objekts zurück. ">getSensorDataList</a>()-&gt;resize(data-&gt;<a class="code" href="classObjectData.xhtml#a72ac93213382f67b4d5b40c011eb1656" title="Gibt eine Referenz auf die Sensordaten des Objekts zurück. ">getSensorDataList</a>()-&gt;size()+1);</div>
<div class="line"><a name="l00209"></a><span class="lineno">  209</span>&#160;    <a class="code" href="structUtils_1_1SensorData.xhtml" title="Ein Sensordatensatz. ">SensorData</a>* sd = &amp;data-&gt;<a class="code" href="classObjectData.xhtml#a72ac93213382f67b4d5b40c011eb1656" title="Gibt eine Referenz auf die Sensordaten des Objekts zurück. ">getSensorDataList</a>()-&gt;at(data-&gt;<a class="code" href="classObjectData.xhtml#a72ac93213382f67b4d5b40c011eb1656" title="Gibt eine Referenz auf die Sensordaten des Objekts zurück. ">getSensorDataList</a>()-&gt;size()-1);</div>
<div class="line"><a name="l00210"></a><span class="lineno">  210</span>&#160;    sd-&gt;<a class="code" href="structUtils_1_1SensorData.xhtml#aca94c3ec7e8f2e719f7cfcff4e9da41b" title="Sind die Sensordaten zeitbezogen? Wenn nein, ist die Länge von data 1. ">timed</a> = <span class="keyword">false</span>;</div>
<div class="line"><a name="l00211"></a><span class="lineno">  211</span>&#160;    sd-&gt;<a class="code" href="structUtils_1_1SensorData.xhtml#a177d53154d56fcf1962f969ece1e7d9d" title="Index des aktuell ausgewählten Zeitpunkts. ">current_time_index</a> = 0;</div>
<div class="line"><a name="l00212"></a><span class="lineno">  212</span>&#160;    <span class="keywordtype">string</span> fn = string(filename);</div>
<div class="line"><a name="l00213"></a><span class="lineno">  213</span>&#160;    <span class="keywordtype">size_t</span> lastps = fn.find_last_of(<a class="code" href="Importer_8cpp.xhtml#a256a5721249aa3309437212cc21a9fe4">PATH_SEPARATOR</a>);</div>
<div class="line"><a name="l00214"></a><span class="lineno">  214</span>&#160;    <span class="keywordflow">if</span> (lastps!=fn.npos) {</div>
<div class="line"><a name="l00215"></a><span class="lineno">  215</span>&#160;        sd-&gt;<a class="code" href="structUtils_1_1SensorData.xhtml#a52474d0fe0dce0d3ee73c007a150a507" title="Name des Sensordatensatzes. ">name</a> = fn.substr(fn.find_last_of(<a class="code" href="Importer_8cpp.xhtml#a256a5721249aa3309437212cc21a9fe4">PATH_SEPARATOR</a>)+1,fn.size()-fn.find_last_of(<a class="code" href="Importer_8cpp.xhtml#a256a5721249aa3309437212cc21a9fe4">PATH_SEPARATOR</a>));</div>
<div class="line"><a name="l00216"></a><span class="lineno">  216</span>&#160;    } <span class="keywordflow">else</span> {</div>
<div class="line"><a name="l00217"></a><span class="lineno">  217</span>&#160;        sd-&gt;<a class="code" href="structUtils_1_1SensorData.xhtml#a52474d0fe0dce0d3ee73c007a150a507" title="Name des Sensordatensatzes. ">name</a> = fn;</div>
<div class="line"><a name="l00218"></a><span class="lineno">  218</span>&#160;    }</div>
<div class="line"><a name="l00219"></a><span class="lineno">  219</span>&#160;    sd-&gt;<a class="code" href="structUtils_1_1SensorData.xhtml#ae94e7645dc0b6adfd21571b0abd5e309" title="Daten des Datensatzes (Sensorpunkte zu versch. ">data</a>.resize(1);</div>
<div class="line"><a name="l00220"></a><span class="lineno">  220</span>&#160;    vector&lt;SensorPoint&gt; *points = &amp;sd-&gt;<a class="code" href="structUtils_1_1SensorData.xhtml#ae94e7645dc0b6adfd21571b0abd5e309" title="Daten des Datensatzes (Sensorpunkte zu versch. ">data</a>.at(0);</div>
<div class="line"><a name="l00221"></a><span class="lineno">  221</span>&#160;    <span class="keywordflow">while</span> (file.good()) {</div>
<div class="line"><a name="l00222"></a><span class="lineno">  222</span>&#160;        getline(file,line);</div>
<div class="line"><a name="l00223"></a><span class="lineno">  223</span>&#160;        <span class="keywordtype">string</span> type = line.substr(0,1);</div>
<div class="line"><a name="l00224"></a><span class="lineno">  224</span>&#160;        <span class="keywordflow">if</span> (type==<span class="stringliteral">&quot;s&quot;</span>) {    <span class="comment">//Sensordaten</span></div>
<div class="line"><a name="l00225"></a><span class="lineno">  225</span>&#160;            points-&gt;resize(points-&gt;size()+1);</div>
<div class="line"><a name="l00226"></a><span class="lineno">  226</span>&#160;            <a class="code" href="structUtils_1_1SensorPoint.xhtml" title="Daten eines Sensordatenpunktes. ">SensorPoint</a>* newpoint = &amp;points-&gt;at(points-&gt;size()-1);</div>
<div class="line"><a name="l00227"></a><span class="lineno">  227</span>&#160;            <span class="keywordflow">for</span> (<span class="keywordtype">int</span> i=0;i&lt;3;i++) {</div>
<div class="line"><a name="l00228"></a><span class="lineno">  228</span>&#160;                newpoint-&gt;<a class="code" href="structUtils_1_1SensorPoint.xhtml#aedff5493c2f6c36e9552dc3807c8ce24" title="Koordinaten des Punktes. ">coords</a>[i]= atof(<a class="code" href="Importer_8cpp.xhtml#a0dd0686c00e64af27b47b4c16399d747">getTextBlock</a>(line,i+1).c_str());</div>
<div class="line"><a name="l00229"></a><span class="lineno">  229</span>&#160;            }</div>
<div class="line"><a name="l00230"></a><span class="lineno">  230</span>&#160;            newpoint-&gt;<a class="code" href="structUtils_1_1SensorPoint.xhtml#a764d6572f865138b36cb46c910001e9a" title="Temperatur des Punktes. ">temperature</a> = atof(<a class="code" href="Importer_8cpp.xhtml#a0dd0686c00e64af27b47b4c16399d747">getTextBlock</a>(line,4).c_str());</div>
<div class="line"><a name="l00231"></a><span class="lineno">  231</span>&#160;        }</div>
<div class="line"><a name="l00232"></a><span class="lineno">  232</span>&#160;    }</div>
<div class="line"><a name="l00233"></a><span class="lineno">  233</span>&#160;    <span class="keywordflow">if</span> (data-&gt;<a class="code" href="classObjectData.xhtml#a503d63160a3afe2ea517449f78f8ac42" title="Gibt den Index des aktuell verwendeten Sensordatensatzes zurück. ">getCurrentSensorIndex</a>()&lt;0) {</div>
<div class="line"><a name="l00234"></a><span class="lineno">  234</span>&#160;        data-&gt;<a class="code" href="classObjectData.xhtml#a65bc706c460a62f98e6c24959df04c76" title="Setzt den Index des aktuell verwendeten Sensordatensatzes. ">setCurrentSensorIndex</a>(0);</div>
<div class="line"><a name="l00235"></a><span class="lineno">  235</span>&#160;    }</div>
<div class="line"><a name="l00236"></a><span class="lineno">  236</span>&#160;    <span class="keywordflow">return</span> <a class="code" href="classObjectData.xhtml#a20e8cd3cd0f8af3b571b9393aa9e6484a85cb5197df82ef2c0657cbe27cd86d3b">ObjectData::OD_SUCCESS</a>;</div>
<div class="line"><a name="l00237"></a><span class="lineno">  237</span>&#160;}</div>
<div class="line"><a name="l00238"></a><span class="lineno"><a class="code" href="classImporter.xhtml#a196e66a161a0102194580ec4b10895e5">  238</a></span>&#160;<a class="code" href="classObjectData.xhtml#a20e8cd3cd0f8af3b571b9393aa9e6484" title="Status einer die Objektdaten betreffenden Aktion. ">ObjectData::ObjectDataStatus</a> <a class="code" href="classImporter.xhtml#a196e66a161a0102194580ec4b10895e5" title="Lädt zeitgesteuerte Sensordaten und Verknüpft diese mit dem Objekt. ">Importer::LoadTimedData</a>(<span class="keyword">const</span> <span class="keywordtype">char</span>* filename,<a class="code" href="classObjectData.xhtml" title="Die Daten eines Versuchsobjekts. ">ObjectData</a>* data) {</div>
<div class="line"><a name="l00239"></a><span class="lineno">  239</span>&#160;    ifstream file;</div>
<div class="line"><a name="l00240"></a><span class="lineno">  240</span>&#160;    file.open(filename);</div>
<div class="line"><a name="l00241"></a><span class="lineno">  241</span>&#160;    <span class="keywordflow">if</span> (!file.is_open()) {</div>
<div class="line"><a name="l00242"></a><span class="lineno">  242</span>&#160;        cout &lt;&lt; <span class="stringliteral">&quot;could not open file: &quot;</span>&lt;&lt;filename&lt;&lt;endl;</div>
<div class="line"><a name="l00243"></a><span class="lineno">  243</span>&#160;        <span class="keywordflow">return</span> <a class="code" href="classObjectData.xhtml#a20e8cd3cd0f8af3b571b9393aa9e6484a755675bc74deb397209031b5197b78cb">ObjectData::OD_FAILURE</a>;</div>
<div class="line"><a name="l00244"></a><span class="lineno">  244</span>&#160;    }</div>
<div class="line"><a name="l00245"></a><span class="lineno">  245</span>&#160;    <span class="keywordtype">string</span> line;</div>
<div class="line"><a name="l00246"></a><span class="lineno">  246</span>&#160;    data-&gt;<a class="code" href="classObjectData.xhtml#a72ac93213382f67b4d5b40c011eb1656" title="Gibt eine Referenz auf die Sensordaten des Objekts zurück. ">getSensorDataList</a>()-&gt;resize(data-&gt;<a class="code" href="classObjectData.xhtml#a72ac93213382f67b4d5b40c011eb1656" title="Gibt eine Referenz auf die Sensordaten des Objekts zurück. ">getSensorDataList</a>()-&gt;size()+1);</div>
<div class="line"><a name="l00247"></a><span class="lineno">  247</span>&#160;    <a class="code" href="structUtils_1_1SensorData.xhtml" title="Ein Sensordatensatz. ">SensorData</a>* sd = &amp;data-&gt;<a class="code" href="classObjectData.xhtml#a72ac93213382f67b4d5b40c011eb1656" title="Gibt eine Referenz auf die Sensordaten des Objekts zurück. ">getSensorDataList</a>()-&gt;at(data-&gt;<a class="code" href="classObjectData.xhtml#a72ac93213382f67b4d5b40c011eb1656" title="Gibt eine Referenz auf die Sensordaten des Objekts zurück. ">getSensorDataList</a>()-&gt;size()-1);</div>
<div class="line"><a name="l00248"></a><span class="lineno">  248</span>&#160;    sd-&gt;<a class="code" href="structUtils_1_1SensorData.xhtml#aca94c3ec7e8f2e719f7cfcff4e9da41b" title="Sind die Sensordaten zeitbezogen? Wenn nein, ist die Länge von data 1. ">timed</a> = <span class="keyword">true</span>;</div>
<div class="line"><a name="l00249"></a><span class="lineno">  249</span>&#160;    sd-&gt;<a class="code" href="structUtils_1_1SensorData.xhtml#a177d53154d56fcf1962f969ece1e7d9d" title="Index des aktuell ausgewählten Zeitpunkts. ">current_time_index</a> = 0;</div>
<div class="line"><a name="l00250"></a><span class="lineno">  250</span>&#160;    <span class="keywordtype">string</span> fn = string(filename);</div>
<div class="line"><a name="l00251"></a><span class="lineno">  251</span>&#160;    <span class="keywordtype">size_t</span> lastps = fn.find_last_of(<a class="code" href="Importer_8cpp.xhtml#a256a5721249aa3309437212cc21a9fe4">PATH_SEPARATOR</a>);</div>
<div class="line"><a name="l00252"></a><span class="lineno">  252</span>&#160;    <span class="keywordflow">if</span> (lastps!=fn.npos) {</div>
<div class="line"><a name="l00253"></a><span class="lineno">  253</span>&#160;        sd-&gt;<a class="code" href="structUtils_1_1SensorData.xhtml#a52474d0fe0dce0d3ee73c007a150a507" title="Name des Sensordatensatzes. ">name</a> = fn.substr(fn.find_last_of(<a class="code" href="Importer_8cpp.xhtml#a256a5721249aa3309437212cc21a9fe4">PATH_SEPARATOR</a>)+1,fn.size()-fn.find_last_of(<a class="code" href="Importer_8cpp.xhtml#a256a5721249aa3309437212cc21a9fe4">PATH_SEPARATOR</a>));</div>
<div class="line"><a name="l00254"></a><span class="lineno">  254</span>&#160;    } <span class="keywordflow">else</span> {</div>
<div class="line"><a name="l00255"></a><span class="lineno">  255</span>&#160;        sd-&gt;<a class="code" href="structUtils_1_1SensorData.xhtml#a52474d0fe0dce0d3ee73c007a150a507" title="Name des Sensordatensatzes. ">name</a> = fn;</div>
<div class="line"><a name="l00256"></a><span class="lineno">  256</span>&#160;    }</div>
<div class="line"><a name="l00257"></a><span class="lineno">  257</span>&#160;    vector&lt;SensorPoint&gt;* currentData = NULL;</div>
<div class="line"><a name="l00258"></a><span class="lineno">  258</span>&#160;    <span class="keywordflow">while</span> (file.good()) {</div>
<div class="line"><a name="l00259"></a><span class="lineno">  259</span>&#160;        getline(file,line);</div>
<div class="line"><a name="l00260"></a><span class="lineno">  260</span>&#160;        <span class="keywordtype">string</span> type = line.substr(0,1);</div>
<div class="line"><a name="l00261"></a><span class="lineno">  261</span>&#160;        <span class="keywordflow">if</span> (type==<span class="stringliteral">&quot;t&quot;</span>) {    <span class="comment">//Zeitstempel</span></div>
<div class="line"><a name="l00262"></a><span class="lineno">  262</span>&#160;            sd-&gt;<a class="code" href="structUtils_1_1SensorData.xhtml#ae94e7645dc0b6adfd21571b0abd5e309" title="Daten des Datensatzes (Sensorpunkte zu versch. ">data</a>.resize(sd-&gt;<a class="code" href="structUtils_1_1SensorData.xhtml#ae94e7645dc0b6adfd21571b0abd5e309" title="Daten des Datensatzes (Sensorpunkte zu versch. ">data</a>.size()+1);</div>
<div class="line"><a name="l00263"></a><span class="lineno">  263</span>&#160;            currentData = &amp;sd-&gt;<a class="code" href="structUtils_1_1SensorData.xhtml#ae94e7645dc0b6adfd21571b0abd5e309" title="Daten des Datensatzes (Sensorpunkte zu versch. ">data</a>.at(sd-&gt;<a class="code" href="structUtils_1_1SensorData.xhtml#ae94e7645dc0b6adfd21571b0abd5e309" title="Daten des Datensatzes (Sensorpunkte zu versch. ">data</a>.size()-1);</div>
<div class="line"><a name="l00264"></a><span class="lineno">  264</span>&#160;            sd-&gt;<a class="code" href="structUtils_1_1SensorData.xhtml#a654f9606c3ddc6e93afb86a116d11ea5" title="Zeitstempel der einzelnen Zeitpunkte. ">timestamps</a>.resize(sd-&gt;<a class="code" href="structUtils_1_1SensorData.xhtml#a654f9606c3ddc6e93afb86a116d11ea5" title="Zeitstempel der einzelnen Zeitpunkte. ">timestamps</a>.size()+1,atoi(<a class="code" href="Importer_8cpp.xhtml#a0dd0686c00e64af27b47b4c16399d747">getTextBlock</a>(line,1).c_str()));</div>
<div class="line"><a name="l00265"></a><span class="lineno">  265</span>&#160;        }</div>
<div class="line"><a name="l00266"></a><span class="lineno">  266</span>&#160;        <span class="keywordflow">if</span> (type==<span class="stringliteral">&quot;n&quot;</span>) {    <span class="comment">//Zeitstempel</span></div>
<div class="line"><a name="l00267"></a><span class="lineno">  267</span>&#160;            sd-&gt;<a class="code" href="structUtils_1_1SensorData.xhtml#ad5875ab7e8ebdc9dc41a7b9ef1c063ba" title="Namen der einzelnen Zeitpunkte. ">subnames</a>.resize(sd-&gt;<a class="code" href="structUtils_1_1SensorData.xhtml#ad5875ab7e8ebdc9dc41a7b9ef1c063ba" title="Namen der einzelnen Zeitpunkte. ">subnames</a>.size()+1,<a class="code" href="Importer_8cpp.xhtml#a0dd0686c00e64af27b47b4c16399d747">getTextBlock</a>(line,1).c_str());</div>
<div class="line"><a name="l00268"></a><span class="lineno">  268</span>&#160;        }</div>
<div class="line"><a name="l00269"></a><span class="lineno">  269</span>&#160;        <span class="keywordflow">if</span> (type==<span class="stringliteral">&quot;s&quot;</span>) {    <span class="comment">//Sensordaten</span></div>
<div class="line"><a name="l00270"></a><span class="lineno">  270</span>&#160;            currentData-&gt;resize(currentData-&gt;size()+1);</div>
<div class="line"><a name="l00271"></a><span class="lineno">  271</span>&#160;            <a class="code" href="structUtils_1_1SensorPoint.xhtml" title="Daten eines Sensordatenpunktes. ">SensorPoint</a>* newpoint = &amp;currentData-&gt;at(currentData-&gt;size()-1);</div>
<div class="line"><a name="l00272"></a><span class="lineno">  272</span>&#160;            <span class="keywordflow">for</span> (<span class="keywordtype">int</span> i=0;i&lt;3;i++) {</div>
<div class="line"><a name="l00273"></a><span class="lineno">  273</span>&#160;                newpoint-&gt;<a class="code" href="structUtils_1_1SensorPoint.xhtml#aedff5493c2f6c36e9552dc3807c8ce24" title="Koordinaten des Punktes. ">coords</a>[i]= atof(<a class="code" href="Importer_8cpp.xhtml#a0dd0686c00e64af27b47b4c16399d747">getTextBlock</a>(line,i+1).c_str());</div>
<div class="line"><a name="l00274"></a><span class="lineno">  274</span>&#160;            }</div>
<div class="line"><a name="l00275"></a><span class="lineno">  275</span>&#160;            newpoint-&gt;<a class="code" href="structUtils_1_1SensorPoint.xhtml#a764d6572f865138b36cb46c910001e9a" title="Temperatur des Punktes. ">temperature</a> = atof(<a class="code" href="Importer_8cpp.xhtml#a0dd0686c00e64af27b47b4c16399d747">getTextBlock</a>(line,4).c_str());</div>
<div class="line"><a name="l00276"></a><span class="lineno">  276</span>&#160;        }</div>
<div class="line"><a name="l00277"></a><span class="lineno">  277</span>&#160;    }</div>
<div class="line"><a name="l00278"></a><span class="lineno">  278</span>&#160;    <span class="keywordflow">if</span> (data-&gt;<a class="code" href="classObjectData.xhtml#a503d63160a3afe2ea517449f78f8ac42" title="Gibt den Index des aktuell verwendeten Sensordatensatzes zurück. ">getCurrentSensorIndex</a>()&lt;0) {</div>
<div class="line"><a name="l00279"></a><span class="lineno">  279</span>&#160;        data-&gt;<a class="code" href="classObjectData.xhtml#a65bc706c460a62f98e6c24959df04c76" title="Setzt den Index des aktuell verwendeten Sensordatensatzes. ">setCurrentSensorIndex</a>(0);</div>
<div class="line"><a name="l00280"></a><span class="lineno">  280</span>&#160;    }</div>
<div class="line"><a name="l00281"></a><span class="lineno">  281</span>&#160;    <span class="keywordflow">return</span> <a class="code" href="classObjectData.xhtml#a20e8cd3cd0f8af3b571b9393aa9e6484a85cb5197df82ef2c0657cbe27cd86d3b">ObjectData::OD_SUCCESS</a>;</div>
<div class="line"><a name="l00282"></a><span class="lineno">  282</span>&#160;}</div>
<div class="line"><a name="l00283"></a><span class="lineno"><a class="code" href="classImporter.xhtml#a6e61faae5020f2dc034ff3ea4032a537">  283</a></span>&#160;<a class="code" href="classImporter.xhtml#a6e61faae5020f2dc034ff3ea4032a537" title="Der Destruktor. ">Importer::~Importer</a>() {</div>
<div class="line"><a name="l00284"></a><span class="lineno">  284</span>&#160;}</div>
<div class="line"><a name="l00285"></a><span class="lineno">  285</span>&#160;</div>
</div><!-- fragment --></div><!-- contents -->
<!-- start footer part -->
<hr class="footer"/><address class="footer"><small>
Erzeugt am Son Feb 9 2014 15:44:34 für Simple Analyzer von &#160;<a href="http://www.doxygen.org/index.html">
<img class="footer" src="doxygen.png" alt="doxygen"/>
</a> 1.8.4
</small></address>
</body>
</html>
