<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.4"/>
<title>Simple Analyzer: Vector3D Klassenreferenz</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/javascript">
  $(document).ready(function() { searchBox.OnSelectItem(0); });
</script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="doc_icon.png"/></td>
  <td style="padding-left: 0.5em;">
   <div id="projectname">Simple Analyzer
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Erzeugt von Doxygen 1.8.4 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Suchen');
</script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.xhtml"><span>Hauptseite</span></a></li>
      <li><a href="pages.xhtml"><span>Zusätzliche&#160;Informationen</span></a></li>
      <li><a href="namespaces.xhtml"><span>Namensbereiche</span></a></li>
      <li class="current"><a href="annotated.xhtml"><span>Klassen</span></a></li>
      <li><a href="files.xhtml"><span>Dateien</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Suchen" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="annotated.xhtml"><span>Auflistung&#160;der&#160;Klassen</span></a></li>
      <li><a href="classes.xhtml"><span>Klassen-Verzeichnis</span></a></li>
      <li><a href="inherits.xhtml"><span>Klassenhierarchie</span></a></li>
      <li><a href="functions.xhtml"><span>Klassen-Elemente</span></a></li>
    </ul>
  </div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
<a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(0)"><span class="SelectionMark">&#160;</span>Alle</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(1)"><span class="SelectionMark">&#160;</span>Klassen</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(2)"><span class="SelectionMark">&#160;</span>Namensbereiche</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(3)"><span class="SelectionMark">&#160;</span>Dateien</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(4)"><span class="SelectionMark">&#160;</span>Funktionen</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(5)"><span class="SelectionMark">&#160;</span>Variablen</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(6)"><span class="SelectionMark">&#160;</span>Typdefinitionen</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(7)"><span class="SelectionMark">&#160;</span>Aufzählungen</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(8)"><span class="SelectionMark">&#160;</span>Aufzählungswerte</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(9)"><span class="SelectionMark">&#160;</span>Freundbeziehungen</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(10)"><span class="SelectionMark">&#160;</span>Makrodefinitionen</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(11)"><span class="SelectionMark">&#160;</span>Seiten</a></div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

</div><!-- top -->
<div class="header">
  <div class="summary">
<a href="#pub-methods">Öffentliche Methoden</a> &#124;
<a href="#pri-attribs">Private Attribute</a> &#124;
<a href="#friends">Freundbeziehungen</a> &#124;
<a href="classVector3D-members.xhtml">Aufstellung aller Elemente</a>  </div>
  <div class="headertitle">
<div class="title">Vector3D Klassenreferenz</div>  </div>
</div><!--header-->
<div class="contents">

<p>3D-Vektorklasse mit nützlichen Operationen.  
 <a href="classVector3D.xhtml#details">Mehr ...</a></p>

<p><code>#include &lt;<a class="el" href="GeometryClasses_8h_source.xhtml">GeometryClasses.h</a>&gt;</code></p>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Öffentliche Methoden</h2></td></tr>
<tr class="memitem:abd851542da40b1168edcad11fa83b7c2"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classVector3D.xhtml#abd851542da40b1168edcad11fa83b7c2">Vector3D</a> (double x, double y, double z)</td></tr>
<tr class="memdesc:abd851542da40b1168edcad11fa83b7c2"><td class="mdescLeft">&#160;</td><td class="mdescRight">Konstruktor für Konstruktion aus einzelnen Koordinaten.  <a href="#abd851542da40b1168edcad11fa83b7c2">Mehr ...</a><br/></td></tr>
<tr class="separator:abd851542da40b1168edcad11fa83b7c2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:abd023faf726edb3919c84fd8329a1f8f"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classVector3D.xhtml#abd023faf726edb3919c84fd8329a1f8f">Vector3D</a> (const double *values)</td></tr>
<tr class="memdesc:abd023faf726edb3919c84fd8329a1f8f"><td class="mdescLeft">&#160;</td><td class="mdescRight">Konstruktor für Konstruktion aus einer Koordinatenliste.  <a href="#abd023faf726edb3919c84fd8329a1f8f">Mehr ...</a><br/></td></tr>
<tr class="separator:abd023faf726edb3919c84fd8329a1f8f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a010bd55f41a082eccb1a7f513db29e69"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classVector3D.xhtml#a010bd55f41a082eccb1a7f513db29e69">Vector3D</a> (<a class="el" href="classVector3D.xhtml">Vector3D</a> *other)</td></tr>
<tr class="memdesc:a010bd55f41a082eccb1a7f513db29e69"><td class="mdescLeft">&#160;</td><td class="mdescRight">Konstruktor für die Konstruktion aus einem anderen Vektor.  <a href="#a010bd55f41a082eccb1a7f513db29e69">Mehr ...</a><br/></td></tr>
<tr class="separator:a010bd55f41a082eccb1a7f513db29e69"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a46dd0d9a849809a3857783102959e788"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classVector3D.xhtml">Vector3D</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classVector3D.xhtml#a46dd0d9a849809a3857783102959e788">copy</a> ()</td></tr>
<tr class="memdesc:a46dd0d9a849809a3857783102959e788"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gibt eine Kopie des Vektors zurück.  <a href="#a46dd0d9a849809a3857783102959e788">Mehr ...</a><br/></td></tr>
<tr class="separator:a46dd0d9a849809a3857783102959e788"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa9eaf29045bf32b95c5c7bcb2b8b68d7"><td class="memItemLeft" align="right" valign="top">double&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classVector3D.xhtml#aa9eaf29045bf32b95c5c7bcb2b8b68d7">getX</a> ()</td></tr>
<tr class="memdesc:aa9eaf29045bf32b95c5c7bcb2b8b68d7"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gibt das X-Element des Vektors zurück.  <a href="#aa9eaf29045bf32b95c5c7bcb2b8b68d7">Mehr ...</a><br/></td></tr>
<tr class="separator:aa9eaf29045bf32b95c5c7bcb2b8b68d7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa3ffff17b886274a58417dfe4bb4c4a2"><td class="memItemLeft" align="right" valign="top">double&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classVector3D.xhtml#aa3ffff17b886274a58417dfe4bb4c4a2">getY</a> ()</td></tr>
<tr class="memdesc:aa3ffff17b886274a58417dfe4bb4c4a2"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gibt das Y-Element des Vektors zurück.  <a href="#aa3ffff17b886274a58417dfe4bb4c4a2">Mehr ...</a><br/></td></tr>
<tr class="separator:aa3ffff17b886274a58417dfe4bb4c4a2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab0dcbf253ff78856eccb5ea74d080fc7"><td class="memItemLeft" align="right" valign="top">double&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classVector3D.xhtml#ab0dcbf253ff78856eccb5ea74d080fc7">getZ</a> ()</td></tr>
<tr class="memdesc:ab0dcbf253ff78856eccb5ea74d080fc7"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gibt das Z-Element des Vektors zurück.  <a href="#ab0dcbf253ff78856eccb5ea74d080fc7">Mehr ...</a><br/></td></tr>
<tr class="separator:ab0dcbf253ff78856eccb5ea74d080fc7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2e3aa1d244483abcb1a8e48e47e79512"><td class="memItemLeft" align="right" valign="top">double&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classVector3D.xhtml#a2e3aa1d244483abcb1a8e48e47e79512">getLength</a> ()</td></tr>
<tr class="memdesc:a2e3aa1d244483abcb1a8e48e47e79512"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gibt die Länge des Vektors zurück.  <a href="#a2e3aa1d244483abcb1a8e48e47e79512">Mehr ...</a><br/></td></tr>
<tr class="separator:a2e3aa1d244483abcb1a8e48e47e79512"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4bf1dcea68296f2f38f3574242933153"><td class="memItemLeft" align="right" valign="top">double&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classVector3D.xhtml#a4bf1dcea68296f2f38f3574242933153">getAngleTo</a> (<a class="el" href="classVector3D.xhtml">Vector3D</a> *other)</td></tr>
<tr class="memdesc:a4bf1dcea68296f2f38f3574242933153"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gibt den Winkel zu einem anderen Vektor in RAD zurück.  <a href="#a4bf1dcea68296f2f38f3574242933153">Mehr ...</a><br/></td></tr>
<tr class="separator:a4bf1dcea68296f2f38f3574242933153"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0808a8e6004a347d82f9214778b5968f"><td class="memItemLeft" align="right" valign="top">double&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classVector3D.xhtml#a0808a8e6004a347d82f9214778b5968f">dotProduct</a> (<a class="el" href="classVector3D.xhtml">Vector3D</a> *other)</td></tr>
<tr class="memdesc:a0808a8e6004a347d82f9214778b5968f"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gibt das Skalarprodukt mit einem anderen Vektor.  <a href="#a0808a8e6004a347d82f9214778b5968f">Mehr ...</a><br/></td></tr>
<tr class="separator:a0808a8e6004a347d82f9214778b5968f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a482cd77ce44ea7dd71fd7a43cb7b1cf5"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classVector3D.xhtml">Vector3D</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classVector3D.xhtml#a482cd77ce44ea7dd71fd7a43cb7b1cf5">crossProduct</a> (<a class="el" href="classVector3D.xhtml">Vector3D</a> *other)</td></tr>
<tr class="memdesc:a482cd77ce44ea7dd71fd7a43cb7b1cf5"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gibt das Kreuzprodukt mit einem anderen Vektor zurück.  <a href="#a482cd77ce44ea7dd71fd7a43cb7b1cf5">Mehr ...</a><br/></td></tr>
<tr class="separator:a482cd77ce44ea7dd71fd7a43cb7b1cf5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0d14ff1f789254ff90adc22628eb8347"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classVector3D.xhtml#a0d14ff1f789254ff90adc22628eb8347">add</a> (<a class="el" href="classVector3D.xhtml">Vector3D</a> *other)</td></tr>
<tr class="memdesc:a0d14ff1f789254ff90adc22628eb8347"><td class="mdescLeft">&#160;</td><td class="mdescRight">Addiert einen Vektor zu diesem Vektor.  <a href="#a0d14ff1f789254ff90adc22628eb8347">Mehr ...</a><br/></td></tr>
<tr class="separator:a0d14ff1f789254ff90adc22628eb8347"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a02364a41693ac080f5adadd776df74b4"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classVector3D.xhtml#a02364a41693ac080f5adadd776df74b4">sub</a> (<a class="el" href="classVector3D.xhtml">Vector3D</a> *other)</td></tr>
<tr class="memdesc:a02364a41693ac080f5adadd776df74b4"><td class="mdescLeft">&#160;</td><td class="mdescRight">Subtrahiert einen Vektor von diesem Vektor.  <a href="#a02364a41693ac080f5adadd776df74b4">Mehr ...</a><br/></td></tr>
<tr class="separator:a02364a41693ac080f5adadd776df74b4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3dec11494c99de7370e3877054c3ef13"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classVector3D.xhtml#a3dec11494c99de7370e3877054c3ef13">mult</a> (double scalar)</td></tr>
<tr class="memdesc:a3dec11494c99de7370e3877054c3ef13"><td class="mdescLeft">&#160;</td><td class="mdescRight">Multipliziert den Vektor mit einem Skalar.  <a href="#a3dec11494c99de7370e3877054c3ef13">Mehr ...</a><br/></td></tr>
<tr class="separator:a3dec11494c99de7370e3877054c3ef13"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:abfb12ecb9c9beb88e095cc4a1a512d3c"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classVector3D.xhtml#abfb12ecb9c9beb88e095cc4a1a512d3c">normalize</a> ()</td></tr>
<tr class="memdesc:abfb12ecb9c9beb88e095cc4a1a512d3c"><td class="mdescLeft">&#160;</td><td class="mdescRight">Normalisiert den Vektor.  <a href="#abfb12ecb9c9beb88e095cc4a1a512d3c">Mehr ...</a><br/></td></tr>
<tr class="separator:abfb12ecb9c9beb88e095cc4a1a512d3c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac83e936757114f32bc9d868ea5fabbc2"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classVector3D.xhtml#ac83e936757114f32bc9d868ea5fabbc2">equals</a> (<a class="el" href="classVector3D.xhtml">Vector3D</a> *other)</td></tr>
<tr class="memdesc:ac83e936757114f32bc9d868ea5fabbc2"><td class="mdescLeft">&#160;</td><td class="mdescRight">Testet, ob zwei Vektoren identisch sind.  <a href="#ac83e936757114f32bc9d868ea5fabbc2">Mehr ...</a><br/></td></tr>
<tr class="separator:ac83e936757114f32bc9d868ea5fabbc2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a42deb992ec2f44abfb5824ea4917135c"><td class="memItemLeft" align="right" valign="top">double&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classVector3D.xhtml#a42deb992ec2f44abfb5824ea4917135c">getDistanceTo</a> (<a class="el" href="classVector3D.xhtml">Vector3D</a> *other)</td></tr>
<tr class="memdesc:a42deb992ec2f44abfb5824ea4917135c"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gibt den Abstand zu einem anderen Vektor zurück.  <a href="#a42deb992ec2f44abfb5824ea4917135c">Mehr ...</a><br/></td></tr>
<tr class="separator:a42deb992ec2f44abfb5824ea4917135c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a89aeff2092d6a954cd449aca97c59197"><td class="memItemLeft" align="right" valign="top">double *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classVector3D.xhtml#a89aeff2092d6a954cd449aca97c59197">getXYZ</a> ()</td></tr>
<tr class="memdesc:a89aeff2092d6a954cd449aca97c59197"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gibt eine Referenz auf die Vektorelemente zurück (Vor allem zur Übergabe an OpenGL verwendet).  <a href="#a89aeff2092d6a954cd449aca97c59197">Mehr ...</a><br/></td></tr>
<tr class="separator:a89aeff2092d6a954cd449aca97c59197"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a37762d009e092a9a9eecb2de03b6f0ec"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classVector3D.xhtml#a37762d009e092a9a9eecb2de03b6f0ec">print</a> ()</td></tr>
<tr class="memdesc:a37762d009e092a9a9eecb2de03b6f0ec"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gibt den Vektor auf dem cout-Stream aus.  <a href="#a37762d009e092a9a9eecb2de03b6f0ec">Mehr ...</a><br/></td></tr>
<tr class="separator:a37762d009e092a9a9eecb2de03b6f0ec"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a93ebaebe8d2f4f15ef1f79f5fe2cb682"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classVector3D.xhtml#a93ebaebe8d2f4f15ef1f79f5fe2cb682">printTo</a> (std::ostream &amp;stream) const </td></tr>
<tr class="memdesc:a93ebaebe8d2f4f15ef1f79f5fe2cb682"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gibt den Vektor auf dem gegebenen Stream aus.  <a href="#a93ebaebe8d2f4f15ef1f79f5fe2cb682">Mehr ...</a><br/></td></tr>
<tr class="separator:a93ebaebe8d2f4f15ef1f79f5fe2cb682"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae4fde5759270bf5bcf615f12f0823a8c"><td class="memItemLeft" align="right" valign="top">virtual&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classVector3D.xhtml#ae4fde5759270bf5bcf615f12f0823a8c">~Vector3D</a> ()</td></tr>
<tr class="memdesc:ae4fde5759270bf5bcf615f12f0823a8c"><td class="mdescLeft">&#160;</td><td class="mdescRight">Der Destruktor.  <a href="#ae4fde5759270bf5bcf615f12f0823a8c">Mehr ...</a><br/></td></tr>
<tr class="separator:ae4fde5759270bf5bcf615f12f0823a8c"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pri-attribs"></a>
Private Attribute</h2></td></tr>
<tr class="memitem:a1049b9da244f538b5c1f3ac700a776ee"><td class="memItemLeft" align="right" valign="top">double&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classVector3D.xhtml#a1049b9da244f538b5c1f3ac700a776ee">coords</a> [3]</td></tr>
<tr class="memdesc:a1049b9da244f538b5c1f3ac700a776ee"><td class="mdescLeft">&#160;</td><td class="mdescRight">Die Elemente des Vektors.  <a href="#a1049b9da244f538b5c1f3ac700a776ee">Mehr ...</a><br/></td></tr>
<tr class="separator:a1049b9da244f538b5c1f3ac700a776ee"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="friends"></a>
Freundbeziehungen</h2></td></tr>
<tr class="memitem:a948421d7d2b275c202125839e5d7b843"><td class="memItemLeft" align="right" valign="top">std::ostream &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classVector3D.xhtml#a948421d7d2b275c202125839e5d7b843">operator&lt;&lt;</a> (std::ostream &amp;out, const <a class="el" href="classVector3D.xhtml">Vector3D</a> &amp;vec)</td></tr>
<tr class="memdesc:a948421d7d2b275c202125839e5d7b843"><td class="mdescLeft">&#160;</td><td class="mdescRight">Definition des &lt;&lt;-Operators für die Ausgabe eines Vektors.  <a href="#a948421d7d2b275c202125839e5d7b843">Mehr ...</a><br/></td></tr>
<tr class="separator:a948421d7d2b275c202125839e5d7b843"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Ausführliche Beschreibung</h2>
<div class="textblock"><p>3D-Vektorklasse mit nützlichen Operationen. </p>

<p>Definiert in Zeile <a class="el" href="GeometryClasses_8h_source.xhtml#l00013">13</a> der Datei <a class="el" href="GeometryClasses_8h_source.xhtml">GeometryClasses.h</a>.</p>
</div><h2 class="groupheader">Beschreibung der Konstruktoren und Destruktoren</h2>
<a class="anchor" id="abd851542da40b1168edcad11fa83b7c2"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">Vector3D::Vector3D </td>
          <td>(</td>
          <td class="paramtype">double&#160;</td>
          <td class="paramname"><em>x</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">double&#160;</td>
          <td class="paramname"><em>y</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">double&#160;</td>
          <td class="paramname"><em>z</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Konstruktor für Konstruktion aus einzelnen Koordinaten. </p>
<dl class="params"><dt>Parameter</dt><dd>
  <table class="params">
    <tr><td class="paramname">x</td><td>X-Element des Vektors. </td></tr>
    <tr><td class="paramname">y</td><td>Y-Element des Vektors. </td></tr>
    <tr><td class="paramname">z</td><td>Z-Element des Vektors. </td></tr>
  </table>
  </dd>
</dl>

<p>Definiert in Zeile <a class="el" href="GeometryClasses_8cpp_source.xhtml#l00019">19</a> der Datei <a class="el" href="GeometryClasses_8cpp_source.xhtml">GeometryClasses.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="abd023faf726edb3919c84fd8329a1f8f"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">Vector3D::Vector3D </td>
          <td>(</td>
          <td class="paramtype">const double *&#160;</td>
          <td class="paramname"><em>values</em>)</td><td></td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Konstruktor für Konstruktion aus einer Koordinatenliste. </p>
<dl class="params"><dt>Parameter</dt><dd>
  <table class="params">
    <tr><td class="paramname">values</td><td>Liste der Koordinaten (x,y und z-Wert). </td></tr>
  </table>
  </dd>
</dl>

<p>Definiert in Zeile <a class="el" href="GeometryClasses_8cpp_source.xhtml#l00025">25</a> der Datei <a class="el" href="GeometryClasses_8cpp_source.xhtml">GeometryClasses.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="a010bd55f41a082eccb1a7f513db29e69"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">Vector3D::Vector3D </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classVector3D.xhtml">Vector3D</a> *&#160;</td>
          <td class="paramname"><em>other</em>)</td><td></td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Konstruktor für die Konstruktion aus einem anderen Vektor. </p>
<dl class="params"><dt>Parameter</dt><dd>
  <table class="params">
    <tr><td class="paramname">other</td><td>Der Vektor, dessen Eigenschaften übernommen werden sollen. </td></tr>
  </table>
  </dd>
</dl>

<p>Definiert in Zeile <a class="el" href="GeometryClasses_8cpp_source.xhtml#l00031">31</a> der Datei <a class="el" href="GeometryClasses_8cpp_source.xhtml">GeometryClasses.cpp</a>.</p>

<p><div class="dynheader">
Hier ist ein Graph, der zeigt, was diese Funktion aufruft:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="classVector3D_a010bd55f41a082eccb1a7f513db29e69_cgraph.svg" width="312" height="147"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>
</p>

</div>
</div>
<a class="anchor" id="ae4fde5759270bf5bcf615f12f0823a8c"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">Vector3D::~Vector3D </td>
          <td>(</td>
          <td class="paramname">)</td><td></td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Der Destruktor. </p>

<p>Definiert in Zeile <a class="el" href="GeometryClasses_8cpp_source.xhtml#l00137">137</a> der Datei <a class="el" href="GeometryClasses_8cpp_source.xhtml">GeometryClasses.cpp</a>.</p>

</div>
</div>
<h2 class="groupheader">Dokumentation der Elementfunktionen</h2>
<a class="anchor" id="a0d14ff1f789254ff90adc22628eb8347"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void Vector3D::add </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classVector3D.xhtml">Vector3D</a> *&#160;</td>
          <td class="paramname"><em>other</em>)</td><td></td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Addiert einen Vektor zu diesem Vektor. </p>
<dl class="params"><dt>Parameter</dt><dd>
  <table class="params">
    <tr><td class="paramname">other</td><td>Der zu addierende Vektor. </td></tr>
  </table>
  </dd>
</dl>

<p>Definiert in Zeile <a class="el" href="GeometryClasses_8cpp_source.xhtml#l00088">88</a> der Datei <a class="el" href="GeometryClasses_8cpp_source.xhtml">GeometryClasses.cpp</a>.</p>

<p><div class="dynheader">
Hier ist ein Graph, der zeigt, was diese Funktion aufruft:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="classVector3D_a0d14ff1f789254ff90adc22628eb8347_cgraph.svg" width="278" height="147"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>
</p>

<p><div class="dynheader">
Hier ist ein Graph der zeigt, wo diese Funktion aufgerufen wird:</div>
<div class="dyncontent">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="classVector3D_a0d14ff1f789254ff90adc22628eb8347_icgraph.svg" width="100%" height="546"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div></div>
</div>
</p>

</div>
</div>
<a class="anchor" id="a46dd0d9a849809a3857783102959e788"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classVector3D.xhtml">Vector3D</a> * Vector3D::copy </td>
          <td>(</td>
          <td class="paramname">)</td><td></td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Gibt eine Kopie des Vektors zurück. </p>
<p>Der zurückgegebene Vektor muss manuell mit delete Freigegeben werden! </p>

<p>Definiert in Zeile <a class="el" href="GeometryClasses_8cpp_source.xhtml#l00037">37</a> der Datei <a class="el" href="GeometryClasses_8cpp_source.xhtml">GeometryClasses.cpp</a>.</p>

<p><div class="dynheader">
Hier ist ein Graph der zeigt, wo diese Funktion aufgerufen wird:</div>
<div class="dyncontent">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="classVector3D_a46dd0d9a849809a3857783102959e788_icgraph.svg" width="100%" height="600"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div></div>
</div>
</p>

</div>
</div>
<a class="anchor" id="a482cd77ce44ea7dd71fd7a43cb7b1cf5"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classVector3D.xhtml">Vector3D</a> * Vector3D::crossProduct </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classVector3D.xhtml">Vector3D</a> *&#160;</td>
          <td class="paramname"><em>other</em>)</td><td></td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Gibt das Kreuzprodukt mit einem anderen Vektor zurück. </p>
<p>Der zurückgegebene Vektor muss manuell mit delete Freigegeben werden! </p>
<dl class="params"><dt>Parameter</dt><dd>
  <table class="params">
    <tr><td class="paramname">other</td><td>Der Vektor, mit dem das Kreuzprodukt gebildet werden soll. </td></tr>
  </table>
  </dd>
</dl>

<p>Definiert in Zeile <a class="el" href="GeometryClasses_8cpp_source.xhtml#l00081">81</a> der Datei <a class="el" href="GeometryClasses_8cpp_source.xhtml">GeometryClasses.cpp</a>.</p>

<p><div class="dynheader">
Hier ist ein Graph, der zeigt, was diese Funktion aufruft:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="classVector3D_a482cd77ce44ea7dd71fd7a43cb7b1cf5_cgraph.svg" width="334" height="147"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>
</p>

<p><div class="dynheader">
Hier ist ein Graph der zeigt, wo diese Funktion aufgerufen wird:</div>
<div class="dyncontent">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="classVector3D_a482cd77ce44ea7dd71fd7a43cb7b1cf5_icgraph.svg" width="100%" height="600"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div></div>
</div>
</p>

</div>
</div>
<a class="anchor" id="a0808a8e6004a347d82f9214778b5968f"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">double Vector3D::dotProduct </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classVector3D.xhtml">Vector3D</a> *&#160;</td>
          <td class="paramname"><em>other</em>)</td><td></td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Gibt das Skalarprodukt mit einem anderen Vektor. </p>
<dl class="params"><dt>Parameter</dt><dd>
  <table class="params">
    <tr><td class="paramname">other</td><td>Der Vektor, mit dem das Skalarprodukt gebildet werden soll. </td></tr>
  </table>
  </dd>
</dl>

<p>Definiert in Zeile <a class="el" href="GeometryClasses_8cpp_source.xhtml#l00076">76</a> der Datei <a class="el" href="GeometryClasses_8cpp_source.xhtml">GeometryClasses.cpp</a>.</p>

<p><div class="dynheader">
Hier ist ein Graph, der zeigt, was diese Funktion aufruft:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="classVector3D_a0808a8e6004a347d82f9214778b5968f_cgraph.svg" width="320" height="147"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>
</p>

<p><div class="dynheader">
Hier ist ein Graph der zeigt, wo diese Funktion aufgerufen wird:</div>
<div class="dyncontent">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="classVector3D_a0808a8e6004a347d82f9214778b5968f_icgraph.svg" width="100%" height="580"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div></div>
</div>
</p>

</div>
</div>
<a class="anchor" id="ac83e936757114f32bc9d868ea5fabbc2"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool Vector3D::equals </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classVector3D.xhtml">Vector3D</a> *&#160;</td>
          <td class="paramname"><em>other</em>)</td><td></td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Testet, ob zwei Vektoren identisch sind. </p>
<dl class="params"><dt>Parameter</dt><dd>
  <table class="params">
    <tr><td class="paramname">other</td><td>Der Vektor, mit dem verglichen werden soll. </td></tr>
  </table>
  </dd>
</dl>

<p>Definiert in Zeile <a class="el" href="GeometryClasses_8cpp_source.xhtml#l00042">42</a> der Datei <a class="el" href="GeometryClasses_8cpp_source.xhtml">GeometryClasses.cpp</a>.</p>

<p><div class="dynheader">
Hier ist ein Graph, der zeigt, was diese Funktion aufruft:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="classVector3D_ac83e936757114f32bc9d868ea5fabbc2_cgraph.svg" width="294" height="147"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>
</p>

<p><div class="dynheader">
Hier ist ein Graph der zeigt, wo diese Funktion aufgerufen wird:</div>
<div class="dyncontent">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="classVector3D_ac83e936757114f32bc9d868ea5fabbc2_icgraph.svg" width="100%" height="542"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div></div>
</div>
</p>

</div>
</div>
<a class="anchor" id="a4bf1dcea68296f2f38f3574242933153"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">double Vector3D::getAngleTo </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classVector3D.xhtml">Vector3D</a> *&#160;</td>
          <td class="paramname"><em>other</em>)</td><td></td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Gibt den Winkel zu einem anderen Vektor in RAD zurück. </p>
<dl class="params"><dt>Parameter</dt><dd>
  <table class="params">
    <tr><td class="paramname">other</td><td>Der Vektor, zu dem der Winkel ermittelt werden soll. </td></tr>
  </table>
  </dd>
</dl>

<p>Definiert in Zeile <a class="el" href="GeometryClasses_8cpp_source.xhtml#l00064">64</a> der Datei <a class="el" href="GeometryClasses_8cpp_source.xhtml">GeometryClasses.cpp</a>.</p>

<p><div class="dynheader">
Hier ist ein Graph, der zeigt, was diese Funktion aufruft:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="classVector3D_a4bf1dcea68296f2f38f3574242933153_cgraph.svg" width="443" height="200"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>
</p>

<p><div class="dynheader">
Hier ist ein Graph der zeigt, wo diese Funktion aufgerufen wird:</div>
<div class="dyncontent">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="classVector3D_a4bf1dcea68296f2f38f3574242933153_icgraph.svg" width="100%" height="486"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div></div>
</div>
</p>

</div>
</div>
<a class="anchor" id="a42deb992ec2f44abfb5824ea4917135c"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">double Vector3D::getDistanceTo </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classVector3D.xhtml">Vector3D</a> *&#160;</td>
          <td class="paramname"><em>other</em>)</td><td></td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Gibt den Abstand zu einem anderen Vektor zurück. </p>
<p>Dabei werden beide Vektoren als Ortsvektoren betrachtet. </p>
<dl class="params"><dt>Parameter</dt><dd>
  <table class="params">
    <tr><td class="paramname">other</td><td>Der Vektor, zu dem der Abstand ermittelt werden soll. </td></tr>
  </table>
  </dd>
</dl>

<p>Definiert in Zeile <a class="el" href="GeometryClasses_8cpp_source.xhtml#l00117">117</a> der Datei <a class="el" href="GeometryClasses_8cpp_source.xhtml">GeometryClasses.cpp</a>.</p>

<p><div class="dynheader">
Hier ist ein Graph, der zeigt, was diese Funktion aufruft:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="classVector3D_a42deb992ec2f44abfb5824ea4917135c_cgraph.svg" width="342" height="200"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>
</p>

<p><div class="dynheader">
Hier ist ein Graph der zeigt, wo diese Funktion aufgerufen wird:</div>
<div class="dyncontent">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="classVector3D_a42deb992ec2f44abfb5824ea4917135c_icgraph.svg" width="100%" height="486"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div></div>
</div>
</p>

</div>
</div>
<a class="anchor" id="a2e3aa1d244483abcb1a8e48e47e79512"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">double Vector3D::getLength </td>
          <td>(</td>
          <td class="paramname">)</td><td></td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Gibt die Länge des Vektors zurück. </p>

<p>Definiert in Zeile <a class="el" href="GeometryClasses_8cpp_source.xhtml#l00060">60</a> der Datei <a class="el" href="GeometryClasses_8cpp_source.xhtml">GeometryClasses.cpp</a>.</p>

<p><div class="dynheader">
Hier ist ein Graph, der zeigt, was diese Funktion aufruft:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="classVector3D_a2e3aa1d244483abcb1a8e48e47e79512_cgraph.svg" width="243" height="40"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>
</p>

<p><div class="dynheader">
Hier ist ein Graph der zeigt, wo diese Funktion aufgerufen wird:</div>
<div class="dyncontent">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="classVector3D_a2e3aa1d244483abcb1a8e48e47e79512_icgraph.svg" width="100%" height="560"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div></div>
</div>
</p>

</div>
</div>
<a class="anchor" id="aa9eaf29045bf32b95c5c7bcb2b8b68d7"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">double Vector3D::getX </td>
          <td>(</td>
          <td class="paramname">)</td><td></td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Gibt das X-Element des Vektors zurück. </p>

<p>Definiert in Zeile <a class="el" href="GeometryClasses_8cpp_source.xhtml#l00048">48</a> der Datei <a class="el" href="GeometryClasses_8cpp_source.xhtml">GeometryClasses.cpp</a>.</p>

<p><div class="dynheader">
Hier ist ein Graph der zeigt, wo diese Funktion aufgerufen wird:</div>
<div class="dyncontent">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="classVector3D_aa9eaf29045bf32b95c5c7bcb2b8b68d7_icgraph.svg" width="100%" height="600"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div></div>
</div>
</p>

</div>
</div>
<a class="anchor" id="a89aeff2092d6a954cd449aca97c59197"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">double * Vector3D::getXYZ </td>
          <td>(</td>
          <td class="paramname">)</td><td></td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Gibt eine Referenz auf die Vektorelemente zurück (Vor allem zur Übergabe an OpenGL verwendet). </p>

<p>Definiert in Zeile <a class="el" href="GeometryClasses_8cpp_source.xhtml#l00113">113</a> der Datei <a class="el" href="GeometryClasses_8cpp_source.xhtml">GeometryClasses.cpp</a>.</p>

<p><div class="dynheader">
Hier ist ein Graph der zeigt, wo diese Funktion aufgerufen wird:</div>
<div class="dyncontent">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="classVector3D_a89aeff2092d6a954cd449aca97c59197_icgraph.svg" width="100%" height="533"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div></div>
</div>
</p>

</div>
</div>
<a class="anchor" id="aa3ffff17b886274a58417dfe4bb4c4a2"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">double Vector3D::getY </td>
          <td>(</td>
          <td class="paramname">)</td><td></td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Gibt das Y-Element des Vektors zurück. </p>

<p>Definiert in Zeile <a class="el" href="GeometryClasses_8cpp_source.xhtml#l00052">52</a> der Datei <a class="el" href="GeometryClasses_8cpp_source.xhtml">GeometryClasses.cpp</a>.</p>

<p><div class="dynheader">
Hier ist ein Graph der zeigt, wo diese Funktion aufgerufen wird:</div>
<div class="dyncontent">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="classVector3D_aa3ffff17b886274a58417dfe4bb4c4a2_icgraph.svg" width="100%" height="600"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div></div>
</div>
</p>

</div>
</div>
<a class="anchor" id="ab0dcbf253ff78856eccb5ea74d080fc7"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">double Vector3D::getZ </td>
          <td>(</td>
          <td class="paramname">)</td><td></td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Gibt das Z-Element des Vektors zurück. </p>

<p>Definiert in Zeile <a class="el" href="GeometryClasses_8cpp_source.xhtml#l00056">56</a> der Datei <a class="el" href="GeometryClasses_8cpp_source.xhtml">GeometryClasses.cpp</a>.</p>

<p><div class="dynheader">
Hier ist ein Graph der zeigt, wo diese Funktion aufgerufen wird:</div>
<div class="dyncontent">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="classVector3D_ab0dcbf253ff78856eccb5ea74d080fc7_icgraph.svg" width="100%" height="600"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div></div>
</div>
</p>

</div>
</div>
<a class="anchor" id="a3dec11494c99de7370e3877054c3ef13"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void Vector3D::mult </td>
          <td>(</td>
          <td class="paramtype">double&#160;</td>
          <td class="paramname"><em>scalar</em>)</td><td></td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Multipliziert den Vektor mit einem Skalar. </p>
<dl class="params"><dt>Parameter</dt><dd>
  <table class="params">
    <tr><td class="paramname">scalar</td><td>Der Skalar. </td></tr>
  </table>
  </dd>
</dl>

<p>Definiert in Zeile <a class="el" href="GeometryClasses_8cpp_source.xhtml#l00100">100</a> der Datei <a class="el" href="GeometryClasses_8cpp_source.xhtml">GeometryClasses.cpp</a>.</p>

<p><div class="dynheader">
Hier ist ein Graph der zeigt, wo diese Funktion aufgerufen wird:</div>
<div class="dyncontent">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="classVector3D_a3dec11494c99de7370e3877054c3ef13_icgraph.svg" width="100%" height="600"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div></div>
</div>
</p>

</div>
</div>
<a class="anchor" id="abfb12ecb9c9beb88e095cc4a1a512d3c"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void Vector3D::normalize </td>
          <td>(</td>
          <td class="paramname">)</td><td></td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Normalisiert den Vektor. </p>

<p>Definiert in Zeile <a class="el" href="GeometryClasses_8cpp_source.xhtml#l00106">106</a> der Datei <a class="el" href="GeometryClasses_8cpp_source.xhtml">GeometryClasses.cpp</a>.</p>

<p><div class="dynheader">
Hier ist ein Graph der zeigt, wo diese Funktion aufgerufen wird:</div>
<div class="dyncontent">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="classVector3D_abfb12ecb9c9beb88e095cc4a1a512d3c_icgraph.svg" width="100%" height="600"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div></div>
</div>
</p>

</div>
</div>
<a class="anchor" id="a37762d009e092a9a9eecb2de03b6f0ec"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void Vector3D::print </td>
          <td>(</td>
          <td class="paramname">)</td><td></td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Gibt den Vektor auf dem cout-Stream aus. </p>

<p>Definiert in Zeile <a class="el" href="GeometryClasses_8cpp_source.xhtml#l00123">123</a> der Datei <a class="el" href="GeometryClasses_8cpp_source.xhtml">GeometryClasses.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="a93ebaebe8d2f4f15ef1f79f5fe2cb682"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void Vector3D::printTo </td>
          <td>(</td>
          <td class="paramtype">std::ostream &amp;&#160;</td>
          <td class="paramname"><em>stream</em>)</td><td></td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Gibt den Vektor auf dem gegebenen Stream aus. </p>
<dl class="params"><dt>Parameter</dt><dd>
  <table class="params">
    <tr><td class="paramname">stream</td><td>Der zu verwendende Stream. </td></tr>
  </table>
  </dd>
</dl>

<p>Definiert in Zeile <a class="el" href="GeometryClasses_8cpp_source.xhtml#l00128">128</a> der Datei <a class="el" href="GeometryClasses_8cpp_source.xhtml">GeometryClasses.cpp</a>.</p>

<p><div class="dynheader">
Hier ist ein Graph der zeigt, wo diese Funktion aufgerufen wird:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="classVector3D_a93ebaebe8d2f4f15ef1f79f5fe2cb682_icgraph.svg" width="270" height="40"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>
</p>

</div>
</div>
<a class="anchor" id="a02364a41693ac080f5adadd776df74b4"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void Vector3D::sub </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classVector3D.xhtml">Vector3D</a> *&#160;</td>
          <td class="paramname"><em>other</em>)</td><td></td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Subtrahiert einen Vektor von diesem Vektor. </p>
<dl class="params"><dt>Parameter</dt><dd>
  <table class="params">
    <tr><td class="paramname">other</td><td>Der zu subtrahierende Vektor. </td></tr>
  </table>
  </dd>
</dl>

<p>Definiert in Zeile <a class="el" href="GeometryClasses_8cpp_source.xhtml#l00094">94</a> der Datei <a class="el" href="GeometryClasses_8cpp_source.xhtml">GeometryClasses.cpp</a>.</p>

<p><div class="dynheader">
Hier ist ein Graph, der zeigt, was diese Funktion aufruft:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="classVector3D_a02364a41693ac080f5adadd776df74b4_cgraph.svg" width="278" height="147"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>
</p>

<p><div class="dynheader">
Hier ist ein Graph der zeigt, wo diese Funktion aufgerufen wird:</div>
<div class="dyncontent">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="classVector3D_a02364a41693ac080f5adadd776df74b4_icgraph.svg" width="100%" height="600"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div></div>
</div>
</p>

</div>
</div>
<h2 class="groupheader">Freundbeziehungen und Funktionsdokumentation</h2>
<a class="anchor" id="a948421d7d2b275c202125839e5d7b843"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">std::ostream&amp; operator&lt;&lt; </td>
          <td>(</td>
          <td class="paramtype">std::ostream &amp;&#160;</td>
          <td class="paramname"><em>out</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classVector3D.xhtml">Vector3D</a> &amp;&#160;</td>
          <td class="paramname"><em>vec</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">friend</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Definition des &lt;&lt;-Operators für die Ausgabe eines Vektors. </p>

<p>Definiert in Zeile <a class="el" href="GeometryClasses_8cpp_source.xhtml#l00132">132</a> der Datei <a class="el" href="GeometryClasses_8cpp_source.xhtml">GeometryClasses.cpp</a>.</p>

</div>
</div>
<h2 class="groupheader">Dokumentation der Datenelemente</h2>
<a class="anchor" id="a1049b9da244f538b5c1f3ac700a776ee"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">double Vector3D::coords[3]</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Die Elemente des Vektors. </p>

<p>Definiert in Zeile <a class="el" href="GeometryClasses_8h_source.xhtml#l00139">139</a> der Datei <a class="el" href="GeometryClasses_8h_source.xhtml">GeometryClasses.h</a>.</p>

</div>
</div>
<hr/>Die Dokumentation für diese Klasse wurde erzeugt aufgrund der Dateien:<ul>
<li>/daten/Projekte/eclipse_workspace/simpleanalyzer-gui/src/libraries/interpolate/<a class="el" href="GeometryClasses_8h_source.xhtml">GeometryClasses.h</a></li>
<li>/daten/Projekte/eclipse_workspace/simpleanalyzer-gui/src/libraries/interpolate/<a class="el" href="GeometryClasses_8cpp_source.xhtml">GeometryClasses.cpp</a></li>
</ul>
</div><!-- contents -->
<!-- start footer part -->
<hr class="footer"/><address class="footer"><small>
Erzeugt am Sam Apr 12 2014 18:44:21 für Simple Analyzer von &#160;<a href="http://www.doxygen.org/index.html">
<img class="footer" src="doxygen.png" alt="doxygen"/>
</a> 1.8.4
</small></address>
</body>
</html>
