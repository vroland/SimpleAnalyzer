<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.4"/>
<title>Simple Analyzer: /daten/Projekte/eclipse_workspace/simpleanalyzer-gui/src/GUI/Renderer.cpp Quellcode</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/javascript">
  $(document).ready(function() { searchBox.OnSelectItem(0); });
</script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="doc_icon.png"/></td>
  <td style="padding-left: 0.5em;">
   <div id="projectname">Simple Analyzer
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Erzeugt von Doxygen 1.8.4 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Suchen');
</script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.xhtml"><span>Hauptseite</span></a></li>
      <li><a href="pages.xhtml"><span>Zusätzliche&#160;Informationen</span></a></li>
      <li><a href="namespaces.xhtml"><span>Namensbereiche</span></a></li>
      <li><a href="annotated.xhtml"><span>Klassen</span></a></li>
      <li class="current"><a href="files.xhtml"><span>Dateien</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Suchen" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="files.xhtml"><span>Auflistung&#160;der&#160;Dateien</span></a></li>
      <li><a href="globals.xhtml"><span>Datei-Elemente</span></a></li>
    </ul>
  </div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
<a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(0)"><span class="SelectionMark">&#160;</span>Alle</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(1)"><span class="SelectionMark">&#160;</span>Klassen</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(2)"><span class="SelectionMark">&#160;</span>Namensbereiche</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(3)"><span class="SelectionMark">&#160;</span>Dateien</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(4)"><span class="SelectionMark">&#160;</span>Funktionen</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(5)"><span class="SelectionMark">&#160;</span>Variablen</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(6)"><span class="SelectionMark">&#160;</span>Aufzählungen</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(7)"><span class="SelectionMark">&#160;</span>Aufzählungswerte</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(8)"><span class="SelectionMark">&#160;</span>Freundbeziehungen</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(9)"><span class="SelectionMark">&#160;</span>Makrodefinitionen</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(10)"><span class="SelectionMark">&#160;</span>Seiten</a></div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="dir_c77ee61374efdb50c23b8fd1bc609a29.xhtml">simpleanalyzer-gui</a></li><li class="navelem"><a class="el" href="dir_fc69cc80a9959f5f4d9fc5f3e2f537ca.xhtml">src</a></li><li class="navelem"><a class="el" href="dir_6d3502ad7ea637015e23cd162a030a27.xhtml">GUI</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="headertitle">
<div class="title">Renderer.cpp</div>  </div>
</div><!--header-->
<div class="contents">
<a href="Renderer_8cpp.xhtml">gehe zur Dokumentation dieser Datei</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="comment">/*</span></div>
<div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="comment"> * Renderer.cpp</span></div>
<div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="comment"> *  Created on: 27.07.2013</span></div>
<div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="comment"> *      Author: valentin</span></div>
<div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="comment"> */</span></div>
<div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;</div>
<div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="Renderer_8h.xhtml">Renderer.h</a>&quot;</span></div>
<div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;</div>
<div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;<span class="preprocessor">#include &lt;iostream&gt;</span></div>
<div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;<span class="preprocessor">#include &lt;cmath&gt;</span></div>
<div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;<span class="preprocessor">#include &quot;../SimpleAnalyzerApp.h&quot;</span></div>
<div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;<span class="comment">//#include &lt;GL/glew.h&gt;</span></div>
<div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;<span class="preprocessor">#include &lt;GL/gl.h&gt;</span></div>
<div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;<span class="preprocessor">#include &lt;GL/glext.h&gt;</span></div>
<div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;</div>
<div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;<span class="keyword">using namespace </span>std;</div>
<div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;</div>
<div class="line"><a name="l00019"></a><span class="lineno"><a class="code" href="classRenderer.xhtml#a7ebf46f54dab9905f79b80f7fddb76a6">   19</a></span>&#160;<a class="code" href="classRenderer.xhtml#a7ebf46f54dab9905f79b80f7fddb76a6" title="Der Konstruktor. ">Renderer::Renderer</a>() {</div>
<div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;    <span class="keywordtype">object</span> = NULL;</div>
<div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;    displayList = -1;</div>
<div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;    <span class="comment">//Anzeigeoptionen initialisieren</span></div>
<div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;    viewport.zoom = 3;</div>
<div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;    viewport.cameraPosition = <span class="keyword">new</span> <a class="code" href="classVector3D.xhtml" title="3D-Vektorklasse mit nützlichen Operationen. ">Vector3D</a>(0, 0, 0);</div>
<div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;    viewport.rotationY = 0;</div>
<div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;    viewport.rotationX = 0;</div>
<div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;    viewport.invertcut = <span class="keyword">true</span>;</div>
<div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;    viewport.cut = NULL;</div>
<div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;    viewport.showPoints = RM_NONE;</div>
<div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;    viewport.showEdges = RM_VALUECOLOR;</div>
<div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;    viewport.showFaces = RM_NONE;</div>
<div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;    viewport.show_extrapolated = <span class="keyword">true</span>;</div>
<div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;    viewport.show_sensordata = <span class="keyword">true</span>;</div>
<div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;    viewport.scale = 1;</div>
<div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;    <span class="comment">/*Vector3D *p1 = new Vector3D(0,1,-5);</span></div>
<div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;<span class="comment">     Vector3D *p2 = new Vector3D(0,1,5);</span></div>
<div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;<span class="comment">     Vector3D *p3 = new Vector3D(3,3,0);</span></div>
<div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;<span class="comment">     viewport.cut = new Triangle(p1,p2,p3);*/</span></div>
<div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;    cut_visualisation_info = NULL;</div>
<div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;}</div>
<div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;</div>
<div class="line"><a name="l00042"></a><span class="lineno"><a class="code" href="classRenderer.xhtml#a5bfa9daf1a53660f1cf6c254665253e2">   42</a></span>&#160;<a class="code" href="structRenderer_1_1Viewport__info.xhtml" title="Informationen über die Ansicht des Modells (Virtuelle Kamera) und welche Elemente dargestellt werden...">Renderer::Viewport_info</a>* <a class="code" href="classRenderer.xhtml#a5bfa9daf1a53660f1cf6c254665253e2" title="Gibt eine Referenz auf die verwendeten Anzeigeeigenschaften zurück. ">Renderer::getViewport</a>() {</div>
<div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;    <span class="keywordflow">return</span> &amp;viewport;</div>
<div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;}</div>
<div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;</div>
<div class="line"><a name="l00046"></a><span class="lineno"><a class="code" href="Renderer_8cpp.xhtml#a17ef754a4f478e115d6e7fb813702639">   46</a></span>&#160;<span class="keywordtype">bool</span> <a class="code" href="Renderer_8cpp.xhtml#a17ef754a4f478e115d6e7fb813702639">pointBehindCut</a>(<a class="code" href="classVector3D.xhtml" title="3D-Vektorklasse mit nützlichen Operationen. ">Vector3D</a>* point, <a class="code" href="classTriangle.xhtml" title="Ein durch 3 Ortsvektoren beschriebenes Dreieck. ">Triangle</a>* cut) {</div>
<div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;    <span class="comment">/*for (unsigned int i=0;i&lt;cut-&gt;size();i++) {</span></div>
<div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;<span class="comment">     Triangle* tri = cut-&gt;at(i);</span></div>
<div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;<span class="comment">     Vector3D* normal = tri-&gt;getNormal();</span></div>
<div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;<span class="comment">     Vector3D* tpoint1 = point-&gt;copy();</span></div>
<div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;<span class="comment">     tpoint1-&gt;sub(tri-&gt;getV1());</span></div>
<div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;<span class="comment">     Vector3D* tpoint2 = point-&gt;copy();</span></div>
<div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;<span class="comment">     tpoint2-&gt;sub(tri-&gt;getV2());</span></div>
<div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;<span class="comment">     Vector3D* tpoint3 = point-&gt;copy();</span></div>
<div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;<span class="comment">     tpoint3-&gt;sub(tri-&gt;getV3());</span></div>
<div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;<span class="comment">     Vector3D* e1 = tri-&gt;getV2()-&gt;copy();</span></div>
<div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;<span class="comment">     e1-&gt;sub(tri-&gt;getV1());</span></div>
<div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;<span class="comment">     Vector3D* e2 = tri-&gt;getV3()-&gt;copy();</span></div>
<div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;<span class="comment">     e2-&gt;sub(tri-&gt;getV2());</span></div>
<div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;<span class="comment">     Vector3D* e3 = tri-&gt;getV1()-&gt;copy();</span></div>
<div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;<span class="comment">     e3-&gt;sub(tri-&gt;getV3()); //</span></div>
<div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;<span class="comment">     Vector3D* ov1 = e1-&gt;crossProduct(e2);</span></div>
<div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;<span class="comment">     Vector3D* enorm1 = ov1-&gt;crossProduct(e1);</span></div>
<div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;<span class="comment">     Vector3D* ov2 = e2-&gt;crossProduct(e3);</span></div>
<div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;<span class="comment">     Vector3D* enorm2 = ov2-&gt;crossProduct(e2);</span></div>
<div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;<span class="comment">     Vector3D* ov3 = e3-&gt;crossProduct(e1);</span></div>
<div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;<span class="comment">     Vector3D* enorm3 = ov3-&gt;crossProduct(e3);</span></div>
<div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;<span class="comment">     if (normal-&gt;dotProduct(tpoint1)&gt;0 &amp;&amp; enorm1-&gt;dotProduct(tpoint1)&gt;0 &amp;&amp; enorm2-&gt;dotProduct(tpoint2)&gt;0 &amp;&amp; enorm3-&gt;dotProduct(tpoint3)&gt;0) {</span></div>
<div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;<span class="comment">     behind = true;</span></div>
<div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;<span class="comment">     }</span></div>
<div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;<span class="comment">     delete normal;</span></div>
<div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;<span class="comment">     delete tpoint1;</span></div>
<div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;<span class="comment">     delete tpoint2;</span></div>
<div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;<span class="comment">     delete tpoint3;</span></div>
<div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;<span class="comment">     delete e1;</span></div>
<div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;<span class="comment">     delete e2;</span></div>
<div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;<span class="comment">     delete e3;</span></div>
<div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;<span class="comment">     delete ov1;</span></div>
<div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;<span class="comment">     delete ov2;</span></div>
<div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;<span class="comment">     delete ov3;</span></div>
<div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;<span class="comment">     delete enorm1;</span></div>
<div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;<span class="comment">     delete enorm2;</span></div>
<div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;<span class="comment">     delete enorm3;</span></div>
<div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;<span class="comment">     }*/</span></div>
<div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;    <a class="code" href="classVector3D.xhtml" title="3D-Vektorklasse mit nützlichen Operationen. ">Vector3D</a>* normal = cut-&gt;<a class="code" href="classTriangle.xhtml#a3c72b19f316fa9ffb0a2f206e3558790" title="Gibt die Normale des Dreiecks zurück. ">getNormal</a>();</div>
<div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;    <a class="code" href="classVector3D.xhtml" title="3D-Vektorklasse mit nützlichen Operationen. ">Vector3D</a>* tpoint = point-&gt;<a class="code" href="classVector3D.xhtml#a46dd0d9a849809a3857783102959e788" title="Gibt eine Kopie des Vektors zurück. ">copy</a>();</div>
<div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;    tpoint-&gt;<a class="code" href="classVector3D.xhtml#a02364a41693ac080f5adadd776df74b4" title="Subtrahiert einen Vektor von diesem Vektor. ">sub</a>(cut-&gt;<a class="code" href="classTriangle.xhtml#ae054a0eae5dae026c5af69274c5f277e" title="Gibt eine Referenz auf den Ortsvektor zum ersten Punkt des Dreiecks zurück. ">getV1</a>());</div>
<div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;    <span class="keywordtype">bool</span> behind = (normal-&gt;<a class="code" href="classVector3D.xhtml#a0808a8e6004a347d82f9214778b5968f" title="Gibt das Skalarprodukt mit einem anderen Vektor. ">dotProduct</a>(tpoint) &lt; 0);</div>
<div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;    <span class="keyword">delete</span> normal;</div>
<div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;    <span class="keyword">delete</span> tpoint;</div>
<div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;    <span class="keywordflow">return</span> behind;</div>
<div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;}</div>
<div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;</div>
<div class="line"><a name="l00094"></a><span class="lineno"><a class="code" href="classRenderer.xhtml#a927f376a6283de3181b86f65b927386c">   94</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="classRenderer.xhtml#a927f376a6283de3181b86f65b927386c" title="Zeichnet die Tetraeder eines Materials des Objekts. ">Renderer::renderTetrahedra</a>(<a class="code" href="structObjectData_1_1MaterialData.xhtml" title="Die Daten eines Materials. ">ObjectData::MaterialData</a>* mat,</div>
<div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;        <a class="code" href="classRenderer.xhtml#aa9844470f59e9fdf3aed088936100863" title="Darstellungsmodus für Elemente /Punkte, Kanten, Flächen) des 3D-Objekts. ">RenderMode</a> rendermode) {</div>
<div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;</div>
<div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;    <span class="comment">//die darzustellende Geometrie</span></div>
<div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;    tetgenio* io = mat-&gt;<a class="code" href="structObjectData_1_1MaterialData.xhtml#a15d576cfe25abe334e34eb5e4671d6d7" title="Durch Zerlegung erstellte Geometrie im Tetgen-Format (s. ">tetgenoutput</a>;</div>
<div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;    glEnable(GL_LIGHTING);</div>
<div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;    glBegin(GL_TRIANGLES);</div>
<div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;</div>
<div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;    <span class="comment">//die Visualisierungsoptionen</span></div>
<div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;    <a class="code" href="structUtils_1_1Visualization__info.xhtml" title="Informationen über die Farbgebung bei der Visualisierung. ">Visualization_info</a>* vis_info = wxGetApp().getVisualizationInfo();</div>
<div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;</div>
<div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;    <span class="comment">//für alle Tetraeder...</span></div>
<div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;    <span class="keywordflow">for</span> (<span class="keywordtype">int</span> j = 0; j &lt; io-&gt;numberoftetrahedra; j++) {</div>
<div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;        <span class="comment">//Enthält der Tetraeder extrapolierte Punkte?</span></div>
<div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;        <span class="keywordtype">bool</span> contains_extrapolated_points = <span class="keyword">false</span>;</div>
<div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;        <span class="keywordflow">for</span> (<span class="keywordtype">int</span> i = 0; i &lt; 4; i++) {</div>
<div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;            <span class="keywordflow">if</span> (mat-&gt;<a class="code" href="structObjectData_1_1MaterialData.xhtml#a22bff8a90f617a5485690bd017dcf701" title="Liste, die für jeden Punkt in der aktuellen Geometrie angibt, ob er extra- (true) oder interpoliert (...">extrapolated</a>[io-&gt;tetrahedronlist[4 * j + i]]) {</div>
<div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;                contains_extrapolated_points = <span class="keyword">true</span>;</div>
<div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;            }</div>
<div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;        }</div>
<div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;</div>
<div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;        <span class="comment">//Darf der Tetraeder nicht gezeichnet werden?</span></div>
<div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;        <span class="keywordflow">if</span> (contains_extrapolated_points &amp;&amp; !viewport.show_extrapolated) {</div>
<div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;            <span class="keywordflow">continue</span>;</div>
<div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;        }</div>
<div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;</div>
<div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;        <span class="comment">//Die Eckpunkte des Tetraeders</span></div>
<div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;        <a class="code" href="classVector3D.xhtml" title="3D-Vektorklasse mit nützlichen Operationen. ">Vector3D</a> v1 = <a class="code" href="classVector3D.xhtml" title="3D-Vektorklasse mit nützlichen Operationen. ">Vector3D</a>(&amp;io-&gt;pointlist[3 * io-&gt;tetrahedronlist[4 * j]]);</div>
<div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;        <a class="code" href="classVector3D.xhtml" title="3D-Vektorklasse mit nützlichen Operationen. ">Vector3D</a> v2 = <a class="code" href="classVector3D.xhtml" title="3D-Vektorklasse mit nützlichen Operationen. ">Vector3D</a>(&amp;io-&gt;pointlist[3 * io-&gt;tetrahedronlist[4 * j + 1]]);</div>
<div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;        <a class="code" href="classVector3D.xhtml" title="3D-Vektorklasse mit nützlichen Operationen. ">Vector3D</a> v3 = <a class="code" href="classVector3D.xhtml" title="3D-Vektorklasse mit nützlichen Operationen. ">Vector3D</a>(&amp;io-&gt;pointlist[3 * io-&gt;tetrahedronlist[4 * j + 2]]);</div>
<div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;        <a class="code" href="classVector3D.xhtml" title="3D-Vektorklasse mit nützlichen Operationen. ">Vector3D</a> v4 = <a class="code" href="classVector3D.xhtml" title="3D-Vektorklasse mit nützlichen Operationen. ">Vector3D</a>(&amp;io-&gt;pointlist[3 * io-&gt;tetrahedronlist[4 * j + 3]]);</div>
<div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;</div>
<div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;        <span class="comment">//Wird die Anzeige der Tetraeder durch eine Schnittebene eingeschränkt?</span></div>
<div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;        <span class="keywordflow">if</span> (viewport.cut != NULL) {</div>
<div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;            <span class="comment">//Zentrum des Tetraeders ermitteln</span></div>
<div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;            <a class="code" href="classVector3D.xhtml" title="3D-Vektorklasse mit nützlichen Operationen. ">Vector3D</a> center = <a class="code" href="classVector3D.xhtml" title="3D-Vektorklasse mit nützlichen Operationen. ">Vector3D</a>(0, 0, 0);</div>
<div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;            center.<a class="code" href="classVector3D.xhtml#a0d14ff1f789254ff90adc22628eb8347" title="Addiert einen Vektor zu diesem Vektor. ">add</a>(&amp;v1);</div>
<div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;            center.<a class="code" href="classVector3D.xhtml#a0d14ff1f789254ff90adc22628eb8347" title="Addiert einen Vektor zu diesem Vektor. ">add</a>(&amp;v2);</div>
<div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;            center.<a class="code" href="classVector3D.xhtml#a0d14ff1f789254ff90adc22628eb8347" title="Addiert einen Vektor zu diesem Vektor. ">add</a>(&amp;v3);</div>
<div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;            center.<a class="code" href="classVector3D.xhtml#a0d14ff1f789254ff90adc22628eb8347" title="Addiert einen Vektor zu diesem Vektor. ">add</a>(&amp;v4);</div>
<div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;            center.<a class="code" href="classVector3D.xhtml#a3dec11494c99de7370e3877054c3ef13" title="Multipliziert den Vektor mit einem Skalar. ">mult</a>(.25);</div>
<div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;</div>
<div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;            <span class="comment">//Liegt der Tetraeder vor der Schnittebene?</span></div>
<div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;            <span class="keywordflow">if</span> (<a class="code" href="Renderer_8cpp.xhtml#a17ef754a4f478e115d6e7fb813702639">pointBehindCut</a>(&amp;center, viewport.cut) != viewport.invertcut) {</div>
<div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;                <span class="keywordflow">continue</span>;</div>
<div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;            }</div>
<div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;        }</div>
<div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;</div>
<div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;        <span class="comment">//Koordinaten lokal zu v1</span></div>
<div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;        v2.<a class="code" href="classVector3D.xhtml#a02364a41693ac080f5adadd776df74b4" title="Subtrahiert einen Vektor von diesem Vektor. ">sub</a>(&amp;v1);</div>
<div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;        v3.<a class="code" href="classVector3D.xhtml#a02364a41693ac080f5adadd776df74b4" title="Subtrahiert einen Vektor von diesem Vektor. ">sub</a>(&amp;v1);</div>
<div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;        v4.<a class="code" href="classVector3D.xhtml#a02364a41693ac080f5adadd776df74b4" title="Subtrahiert einen Vektor von diesem Vektor. ">sub</a>(&amp;v1);</div>
<div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;        v1.<a class="code" href="classVector3D.xhtml#a02364a41693ac080f5adadd776df74b4" title="Subtrahiert einen Vektor von diesem Vektor. ">sub</a>(&amp;v1);</div>
<div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;</div>
<div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;        <span class="comment">//Normalen der Tetraederflächen berechnen</span></div>
<div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;        <a class="code" href="classVector3D.xhtml" title="3D-Vektorklasse mit nützlichen Operationen. ">Vector3D</a>* n1 = v2.<a class="code" href="classVector3D.xhtml#a482cd77ce44ea7dd71fd7a43cb7b1cf5" title="Gibt das Kreuzprodukt mit einem anderen Vektor zurück. ">crossProduct</a>(&amp;v3);</div>
<div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;        <span class="keywordflow">if</span> (v4.<a class="code" href="classVector3D.xhtml#a0808a8e6004a347d82f9214778b5968f" title="Gibt das Skalarprodukt mit einem anderen Vektor. ">dotProduct</a>(n1) &gt; 0) {</div>
<div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;            n1-&gt;<a class="code" href="classVector3D.xhtml#a3dec11494c99de7370e3877054c3ef13" title="Multipliziert den Vektor mit einem Skalar. ">mult</a>(-1);</div>
<div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;        }</div>
<div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160;        <a class="code" href="classVector3D.xhtml" title="3D-Vektorklasse mit nützlichen Operationen. ">Vector3D</a>* n2 = v4.<a class="code" href="classVector3D.xhtml#a482cd77ce44ea7dd71fd7a43cb7b1cf5" title="Gibt das Kreuzprodukt mit einem anderen Vektor zurück. ">crossProduct</a>(&amp;v2);</div>
<div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160;        <span class="keywordflow">if</span> (v3.<a class="code" href="classVector3D.xhtml#a0808a8e6004a347d82f9214778b5968f" title="Gibt das Skalarprodukt mit einem anderen Vektor. ">dotProduct</a>(n2) &gt; 0) {</div>
<div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160;            n2-&gt;<a class="code" href="classVector3D.xhtml#a3dec11494c99de7370e3877054c3ef13" title="Multipliziert den Vektor mit einem Skalar. ">mult</a>(-1);</div>
<div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160;        }</div>
<div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160;        <a class="code" href="classVector3D.xhtml" title="3D-Vektorklasse mit nützlichen Operationen. ">Vector3D</a>* n3 = v3.<a class="code" href="classVector3D.xhtml#a482cd77ce44ea7dd71fd7a43cb7b1cf5" title="Gibt das Kreuzprodukt mit einem anderen Vektor zurück. ">crossProduct</a>(&amp;v4);</div>
<div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160;        <span class="keywordflow">if</span> (v2.<a class="code" href="classVector3D.xhtml#a0808a8e6004a347d82f9214778b5968f" title="Gibt das Skalarprodukt mit einem anderen Vektor. ">dotProduct</a>(n3) &gt; 0) {</div>
<div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160;            n3-&gt;<a class="code" href="classVector3D.xhtml#a3dec11494c99de7370e3877054c3ef13" title="Multipliziert den Vektor mit einem Skalar. ">mult</a>(-1);</div>
<div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160;        }</div>
<div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160;        <a class="code" href="classVector3D.xhtml" title="3D-Vektorklasse mit nützlichen Operationen. ">Vector3D</a>* backedge1 = v2.<a class="code" href="classVector3D.xhtml#a46dd0d9a849809a3857783102959e788" title="Gibt eine Kopie des Vektors zurück. ">copy</a>();</div>
<div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160;        <a class="code" href="classVector3D.xhtml" title="3D-Vektorklasse mit nützlichen Operationen. ">Vector3D</a>* backedge2 = v3.<a class="code" href="classVector3D.xhtml#a46dd0d9a849809a3857783102959e788" title="Gibt eine Kopie des Vektors zurück. ">copy</a>();</div>
<div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160;        backedge1-&gt;<a class="code" href="classVector3D.xhtml#a02364a41693ac080f5adadd776df74b4" title="Subtrahiert einen Vektor von diesem Vektor. ">sub</a>(&amp;v4);</div>
<div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160;        backedge2-&gt;<a class="code" href="classVector3D.xhtml#a02364a41693ac080f5adadd776df74b4" title="Subtrahiert einen Vektor von diesem Vektor. ">sub</a>(&amp;v4);</div>
<div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160;        <a class="code" href="classVector3D.xhtml" title="3D-Vektorklasse mit nützlichen Operationen. ">Vector3D</a>* n4 = backedge1-&gt;<a class="code" href="classVector3D.xhtml#a482cd77ce44ea7dd71fd7a43cb7b1cf5" title="Gibt das Kreuzprodukt mit einem anderen Vektor zurück. ">crossProduct</a>(backedge2);</div>
<div class="line"><a name="l00166"></a><span class="lineno">  166</span>&#160;        <span class="keywordflow">if</span> (v4.<a class="code" href="classVector3D.xhtml#a0808a8e6004a347d82f9214778b5968f" title="Gibt das Skalarprodukt mit einem anderen Vektor. ">dotProduct</a>(n4) &lt; 0) {</div>
<div class="line"><a name="l00167"></a><span class="lineno">  167</span>&#160;            n4-&gt;<a class="code" href="classVector3D.xhtml#a3dec11494c99de7370e3877054c3ef13" title="Multipliziert den Vektor mit einem Skalar. ">mult</a>(-1);</div>
<div class="line"><a name="l00168"></a><span class="lineno">  168</span>&#160;        }</div>
<div class="line"><a name="l00169"></a><span class="lineno">  169</span>&#160;        n1-&gt;<a class="code" href="classVector3D.xhtml#abfb12ecb9c9beb88e095cc4a1a512d3c" title="Normalisiert den Vektor. ">normalize</a>();</div>
<div class="line"><a name="l00170"></a><span class="lineno">  170</span>&#160;        n2-&gt;<a class="code" href="classVector3D.xhtml#abfb12ecb9c9beb88e095cc4a1a512d3c" title="Normalisiert den Vektor. ">normalize</a>();</div>
<div class="line"><a name="l00171"></a><span class="lineno">  171</span>&#160;        n3-&gt;<a class="code" href="classVector3D.xhtml#abfb12ecb9c9beb88e095cc4a1a512d3c" title="Normalisiert den Vektor. ">normalize</a>();</div>
<div class="line"><a name="l00172"></a><span class="lineno">  172</span>&#160;        n4-&gt;<a class="code" href="classVector3D.xhtml#abfb12ecb9c9beb88e095cc4a1a512d3c" title="Normalisiert den Vektor. ">normalize</a>();</div>
<div class="line"><a name="l00173"></a><span class="lineno">  173</span>&#160;</div>
<div class="line"><a name="l00174"></a><span class="lineno">  174</span>&#160;        <span class="comment">//Farben der Eckpunkte</span></div>
<div class="line"><a name="l00175"></a><span class="lineno">  175</span>&#160;        <span class="keywordtype">float</span>* colors[4];</div>
<div class="line"><a name="l00176"></a><span class="lineno">  176</span>&#160;        <span class="comment">//In Materialfarbe anzeigen?</span></div>
<div class="line"><a name="l00177"></a><span class="lineno">  177</span>&#160;        <span class="keywordflow">if</span> (rendermode == RM_MATERIALCOLOR) {</div>
<div class="line"><a name="l00178"></a><span class="lineno">  178</span>&#160;            glColor4f(mat-&gt;<a class="code" href="structObjectData_1_1MaterialData.xhtml#a3930f8e673d50b88c9234c7f73c16a91" title="Die Farbe des Materials im RGB-Format. ">color</a>[0], mat-&gt;<a class="code" href="structObjectData_1_1MaterialData.xhtml#a3930f8e673d50b88c9234c7f73c16a91" title="Die Farbe des Materials im RGB-Format. ">color</a>[1], mat-&gt;<a class="code" href="structObjectData_1_1MaterialData.xhtml#a3930f8e673d50b88c9234c7f73c16a91" title="Die Farbe des Materials im RGB-Format. ">color</a>[2], .3);</div>
<div class="line"><a name="l00179"></a><span class="lineno">  179</span>&#160;        } <span class="keywordflow">else</span> {</div>
<div class="line"><a name="l00180"></a><span class="lineno">  180</span>&#160;            <span class="comment">//Ermitteln der Farben (basierend auf der Temperatur) für die Eckpunkte</span></div>
<div class="line"><a name="l00181"></a><span class="lineno">  181</span>&#160;            <span class="keywordflow">for</span> (<span class="keywordtype">int</span> k = 0; k &lt; 4; k++) {</div>
<div class="line"><a name="l00182"></a><span class="lineno">  182</span>&#160;                <span class="keywordtype">float</span> value = io-&gt;pointattributelist[io-&gt;numberofpointattributes</div>
<div class="line"><a name="l00183"></a><span class="lineno">  183</span>&#160;                        * (io-&gt;tetrahedronlist[4 * j + k])];</div>
<div class="line"><a name="l00184"></a><span class="lineno">  184</span>&#160;                <span class="keywordtype">float</span> inverse_hue = (value - vis_info-&gt;<a class="code" href="structUtils_1_1Visualization__info.xhtml#a6e192352d1f00709f8ef963206ff2653" title="minimal Visualisierte Temperatur (entspricht der Farbe Blau). ">min_visualisation_temp</a>)</div>
<div class="line"><a name="l00185"></a><span class="lineno">  185</span>&#160;                        / (vis_info-&gt;<a class="code" href="structUtils_1_1Visualization__info.xhtml#a5327787a12634166ecc00f2224d3f39f" title="maximal Visualisierte Temperatur (entspricht der Farbe Rot). ">max_visualisation_temp</a></div>
<div class="line"><a name="l00186"></a><span class="lineno">  186</span>&#160;                                - vis_info-&gt;<a class="code" href="structUtils_1_1Visualization__info.xhtml#a6e192352d1f00709f8ef963206ff2653" title="minimal Visualisierte Temperatur (entspricht der Farbe Blau). ">min_visualisation_temp</a>);</div>
<div class="line"><a name="l00187"></a><span class="lineno">  187</span>&#160;                colors[k] = <a class="code" href="namespaceUtils.xhtml#a5d6523eb946892eee52c9c74efd016de" title="Wandelt eine Farbe im HSV-Format ins RGB-Format um. ">hsvToRgb</a>((1.0 - <a class="code" href="namespaceUtils.xhtml#abb647325616858e0fad55290c36ea03b" title="Begrenzt einen Wert auf den Bereich 0..1. ">clampHue</a>(inverse_hue)) * .666, 1, 1);</div>
<div class="line"><a name="l00188"></a><span class="lineno">  188</span>&#160;            }</div>
<div class="line"><a name="l00189"></a><span class="lineno">  189</span>&#160;        }</div>
<div class="line"><a name="l00190"></a><span class="lineno">  190</span>&#160;</div>
<div class="line"><a name="l00191"></a><span class="lineno">  191</span>&#160;        <span class="comment">//Incides der Punkte für die Flächen des Tetraeders</span></div>
<div class="line"><a name="l00192"></a><span class="lineno">  192</span>&#160;        <span class="keywordtype">int</span> vertlist[4][3] = { { 0, 1, 2 }, { 0, 1, 3 }, { 0, 2, 3 },</div>
<div class="line"><a name="l00193"></a><span class="lineno">  193</span>&#160;                { 1, 2, 3 } };</div>
<div class="line"><a name="l00194"></a><span class="lineno">  194</span>&#160;        <a class="code" href="classVector3D.xhtml" title="3D-Vektorklasse mit nützlichen Operationen. ">Vector3D</a>* normallist[4] = { n1, n2, n3, n4 };</div>
<div class="line"><a name="l00195"></a><span class="lineno">  195</span>&#160;</div>
<div class="line"><a name="l00196"></a><span class="lineno">  196</span>&#160;        <span class="comment">//Zeichnen der Tetraeder</span></div>
<div class="line"><a name="l00197"></a><span class="lineno">  197</span>&#160;        <span class="keywordflow">for</span> (<span class="keywordtype">int</span> k = 0; k &lt; 4; k++) {</div>
<div class="line"><a name="l00198"></a><span class="lineno">  198</span>&#160;            glNormal3dv(normallist[k]-&gt;getXYZ());</div>
<div class="line"><a name="l00199"></a><span class="lineno">  199</span>&#160;            <span class="keywordflow">if</span> (rendermode == RM_VALUECOLOR) {</div>
<div class="line"><a name="l00200"></a><span class="lineno">  200</span>&#160;                glColor3fv(colors[vertlist[k][0]]);</div>
<div class="line"><a name="l00201"></a><span class="lineno">  201</span>&#160;            }</div>
<div class="line"><a name="l00202"></a><span class="lineno">  202</span>&#160;            glVertex3dv(</div>
<div class="line"><a name="l00203"></a><span class="lineno">  203</span>&#160;                    &amp;io-&gt;pointlist[3</div>
<div class="line"><a name="l00204"></a><span class="lineno">  204</span>&#160;                            * io-&gt;tetrahedronlist[4 * j + vertlist[k][0]]]);</div>
<div class="line"><a name="l00205"></a><span class="lineno">  205</span>&#160;            <span class="keywordflow">if</span> (rendermode == RM_VALUECOLOR) {</div>
<div class="line"><a name="l00206"></a><span class="lineno">  206</span>&#160;                glColor3fv(colors[vertlist[k][1]]);</div>
<div class="line"><a name="l00207"></a><span class="lineno">  207</span>&#160;            }</div>
<div class="line"><a name="l00208"></a><span class="lineno">  208</span>&#160;            glVertex3dv(</div>
<div class="line"><a name="l00209"></a><span class="lineno">  209</span>&#160;                    &amp;io-&gt;pointlist[3</div>
<div class="line"><a name="l00210"></a><span class="lineno">  210</span>&#160;                            * io-&gt;tetrahedronlist[4 * j + vertlist[k][1]]]);</div>
<div class="line"><a name="l00211"></a><span class="lineno">  211</span>&#160;            <span class="keywordflow">if</span> (rendermode == RM_VALUECOLOR) {</div>
<div class="line"><a name="l00212"></a><span class="lineno">  212</span>&#160;                glColor3fv(colors[vertlist[k][2]]);</div>
<div class="line"><a name="l00213"></a><span class="lineno">  213</span>&#160;            }</div>
<div class="line"><a name="l00214"></a><span class="lineno">  214</span>&#160;            glVertex3dv(</div>
<div class="line"><a name="l00215"></a><span class="lineno">  215</span>&#160;                    &amp;io-&gt;pointlist[3</div>
<div class="line"><a name="l00216"></a><span class="lineno">  216</span>&#160;                            * io-&gt;tetrahedronlist[4 * j + vertlist[k][2]]]);</div>
<div class="line"><a name="l00217"></a><span class="lineno">  217</span>&#160;</div>
<div class="line"><a name="l00218"></a><span class="lineno">  218</span>&#160;        }</div>
<div class="line"><a name="l00219"></a><span class="lineno">  219</span>&#160;</div>
<div class="line"><a name="l00220"></a><span class="lineno">  220</span>&#160;        <span class="comment">//freigeben der Ressourcen</span></div>
<div class="line"><a name="l00221"></a><span class="lineno">  221</span>&#160;        <span class="keyword">delete</span> backedge1;</div>
<div class="line"><a name="l00222"></a><span class="lineno">  222</span>&#160;        <span class="keyword">delete</span> backedge2;</div>
<div class="line"><a name="l00223"></a><span class="lineno">  223</span>&#160;        <span class="keyword">delete</span> n1;</div>
<div class="line"><a name="l00224"></a><span class="lineno">  224</span>&#160;        <span class="keyword">delete</span> n2;</div>
<div class="line"><a name="l00225"></a><span class="lineno">  225</span>&#160;        <span class="keyword">delete</span> n3;</div>
<div class="line"><a name="l00226"></a><span class="lineno">  226</span>&#160;        <span class="keyword">delete</span> n4;</div>
<div class="line"><a name="l00227"></a><span class="lineno">  227</span>&#160;        <span class="keywordflow">if</span> (rendermode == RM_VALUECOLOR) {</div>
<div class="line"><a name="l00228"></a><span class="lineno">  228</span>&#160;            <span class="keywordflow">for</span> (<span class="keywordtype">int</span> k = 0; k &lt; 4; k++) {</div>
<div class="line"><a name="l00229"></a><span class="lineno">  229</span>&#160;                <span class="keyword">delete</span>[] colors[k];</div>
<div class="line"><a name="l00230"></a><span class="lineno">  230</span>&#160;            }</div>
<div class="line"><a name="l00231"></a><span class="lineno">  231</span>&#160;        }</div>
<div class="line"><a name="l00232"></a><span class="lineno">  232</span>&#160;    }</div>
<div class="line"><a name="l00233"></a><span class="lineno">  233</span>&#160;    glEnd();</div>
<div class="line"><a name="l00234"></a><span class="lineno">  234</span>&#160;}</div>
<div class="line"><a name="l00235"></a><span class="lineno">  235</span>&#160;</div>
<div class="line"><a name="l00236"></a><span class="lineno"><a class="code" href="classRenderer.xhtml#ad2eac0343aef1abd05ed95b1b364785f">  236</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="classRenderer.xhtml#ad2eac0343aef1abd05ed95b1b364785f" title="Zeichnet Sensordaten als Punkte. ">Renderer::renderSensorData</a>(<a class="code" href="classstd_1_1vector.xhtml">vector&lt;SensorPoint&gt;</a>* data) {</div>
<div class="line"><a name="l00237"></a><span class="lineno">  237</span>&#160;</div>
<div class="line"><a name="l00238"></a><span class="lineno">  238</span>&#160;    <span class="comment">//Sensordaten über alles Zeichnen</span></div>
<div class="line"><a name="l00239"></a><span class="lineno">  239</span>&#160;    glDepthFunc(GL_ALWAYS);</div>
<div class="line"><a name="l00240"></a><span class="lineno">  240</span>&#160;    glDisable(GL_LIGHTING);</div>
<div class="line"><a name="l00241"></a><span class="lineno">  241</span>&#160;</div>
<div class="line"><a name="l00242"></a><span class="lineno">  242</span>&#160;    <span class="comment">//die Visualisierungsoptionen</span></div>
<div class="line"><a name="l00243"></a><span class="lineno">  243</span>&#160;    <a class="code" href="structUtils_1_1Visualization__info.xhtml" title="Informationen über die Farbgebung bei der Visualisierung. ">Visualization_info</a>* vis_info = wxGetApp().getVisualizationInfo();</div>
<div class="line"><a name="l00244"></a><span class="lineno">  244</span>&#160;</div>
<div class="line"><a name="l00245"></a><span class="lineno">  245</span>&#160;    <span class="comment">//für alle Sensorpunkte</span></div>
<div class="line"><a name="l00246"></a><span class="lineno">  246</span>&#160;    <span class="keywordflow">for</span> (<span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> i = 0; i &lt; data-&gt;size(); i++) {</div>
<div class="line"><a name="l00247"></a><span class="lineno">  247</span>&#160;        <a class="code" href="structUtils_1_1SensorPoint.xhtml" title="Daten eines Sensordatenpunktes. ">SensorPoint</a>* point = &amp;data-&gt;at(i);</div>
<div class="line"><a name="l00248"></a><span class="lineno">  248</span>&#160;</div>
<div class="line"><a name="l00249"></a><span class="lineno">  249</span>&#160;        <span class="comment">//Ermitteln der Farbe aus der Temperatur</span></div>
<div class="line"><a name="l00250"></a><span class="lineno">  250</span>&#160;        <span class="keywordtype">float</span> value = point-&gt;<a class="code" href="structUtils_1_1SensorPoint.xhtml#a764d6572f865138b36cb46c910001e9a" title="Temperatur des Punktes. ">temperature</a>;</div>
<div class="line"><a name="l00251"></a><span class="lineno">  251</span>&#160;        <span class="keywordtype">float</span> inverse_hue = (value - vis_info-&gt;<a class="code" href="structUtils_1_1Visualization__info.xhtml#a6e192352d1f00709f8ef963206ff2653" title="minimal Visualisierte Temperatur (entspricht der Farbe Blau). ">min_visualisation_temp</a>)</div>
<div class="line"><a name="l00252"></a><span class="lineno">  252</span>&#160;                / (vis_info-&gt;<a class="code" href="structUtils_1_1Visualization__info.xhtml#a5327787a12634166ecc00f2224d3f39f" title="maximal Visualisierte Temperatur (entspricht der Farbe Rot). ">max_visualisation_temp</a></div>
<div class="line"><a name="l00253"></a><span class="lineno">  253</span>&#160;                        - vis_info-&gt;<a class="code" href="structUtils_1_1Visualization__info.xhtml#a6e192352d1f00709f8ef963206ff2653" title="minimal Visualisierte Temperatur (entspricht der Farbe Blau). ">min_visualisation_temp</a>);</div>
<div class="line"><a name="l00254"></a><span class="lineno">  254</span>&#160;        <span class="keywordtype">float</span>* color = <a class="code" href="namespaceUtils.xhtml#a5d6523eb946892eee52c9c74efd016de" title="Wandelt eine Farbe im HSV-Format ins RGB-Format um. ">hsvToRgb</a>((1.0 - <a class="code" href="namespaceUtils.xhtml#abb647325616858e0fad55290c36ea03b" title="Begrenzt einen Wert auf den Bereich 0..1. ">clampHue</a>(inverse_hue)) * .666, 1, 1);</div>
<div class="line"><a name="l00255"></a><span class="lineno">  255</span>&#160;</div>
<div class="line"><a name="l00256"></a><span class="lineno">  256</span>&#160;        <span class="comment">//Zeichnen des Punktes</span></div>
<div class="line"><a name="l00257"></a><span class="lineno">  257</span>&#160;        glPointSize(6.0);</div>
<div class="line"><a name="l00258"></a><span class="lineno">  258</span>&#160;        glColor3f(0, 0, 0);</div>
<div class="line"><a name="l00259"></a><span class="lineno">  259</span>&#160;        glBegin(GL_POINTS);</div>
<div class="line"><a name="l00260"></a><span class="lineno">  260</span>&#160;            glVertex3dv(point-&gt;<a class="code" href="structUtils_1_1SensorPoint.xhtml#aedff5493c2f6c36e9552dc3807c8ce24" title="Koordinaten des Punktes. ">coords</a>);</div>
<div class="line"><a name="l00261"></a><span class="lineno">  261</span>&#160;        glEnd();</div>
<div class="line"><a name="l00262"></a><span class="lineno">  262</span>&#160;        glPointSize(4.0);</div>
<div class="line"><a name="l00263"></a><span class="lineno">  263</span>&#160;        glColor3fv(color);</div>
<div class="line"><a name="l00264"></a><span class="lineno">  264</span>&#160;        glBegin(GL_POINTS);</div>
<div class="line"><a name="l00265"></a><span class="lineno">  265</span>&#160;            glVertex3dv(point-&gt;<a class="code" href="structUtils_1_1SensorPoint.xhtml#aedff5493c2f6c36e9552dc3807c8ce24" title="Koordinaten des Punktes. ">coords</a>);</div>
<div class="line"><a name="l00266"></a><span class="lineno">  266</span>&#160;        glEnd();</div>
<div class="line"><a name="l00267"></a><span class="lineno">  267</span>&#160;        <span class="keyword">delete</span>[] color;</div>
<div class="line"><a name="l00268"></a><span class="lineno">  268</span>&#160;    }</div>
<div class="line"><a name="l00269"></a><span class="lineno">  269</span>&#160;</div>
<div class="line"><a name="l00270"></a><span class="lineno">  270</span>&#160;    glEnable(GL_LIGHTING);</div>
<div class="line"><a name="l00271"></a><span class="lineno">  271</span>&#160;    glDepthFunc(GL_LESS);</div>
<div class="line"><a name="l00272"></a><span class="lineno">  272</span>&#160;}</div>
<div class="line"><a name="l00273"></a><span class="lineno">  273</span>&#160;</div>
<div class="line"><a name="l00274"></a><span class="lineno"><a class="code" href="classRenderer.xhtml#acb6c468b92221cf8a121b87a70a3da0c">  274</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="classRenderer.xhtml#acb6c468b92221cf8a121b87a70a3da0c" title="Zeichnet die Elemente eines Materials des Objekts. ">Renderer::renderMaterial</a>(<a class="code" href="structObjectData_1_1MaterialData.xhtml" title="Die Daten eines Materials. ">ObjectData::MaterialData</a>* mat) {</div>
<div class="line"><a name="l00275"></a><span class="lineno">  275</span>&#160;</div>
<div class="line"><a name="l00276"></a><span class="lineno">  276</span>&#160;    <span class="comment">//die darzustellende Geometrie</span></div>
<div class="line"><a name="l00277"></a><span class="lineno">  277</span>&#160;    tetgenio* io = mat-&gt;<a class="code" href="structObjectData_1_1MaterialData.xhtml#a15d576cfe25abe334e34eb5e4671d6d7" title="Durch Zerlegung erstellte Geometrie im Tetgen-Format (s. ">tetgenoutput</a>;</div>
<div class="line"><a name="l00278"></a><span class="lineno">  278</span>&#160;</div>
<div class="line"><a name="l00279"></a><span class="lineno">  279</span>&#160;    <span class="comment">//die Visualisierungsoptionen</span></div>
<div class="line"><a name="l00280"></a><span class="lineno">  280</span>&#160;    <a class="code" href="structUtils_1_1Visualization__info.xhtml" title="Informationen über die Farbgebung bei der Visualisierung. ">Visualization_info</a>* vis_info = wxGetApp().getVisualizationInfo();</div>
<div class="line"><a name="l00281"></a><span class="lineno">  281</span>&#160;</div>
<div class="line"><a name="l00282"></a><span class="lineno">  282</span>&#160;    <span class="comment">//sollen die Punkte angezeigt werden?</span></div>
<div class="line"><a name="l00283"></a><span class="lineno">  283</span>&#160;    <span class="keywordflow">if</span> (viewport.showPoints) {</div>
<div class="line"><a name="l00284"></a><span class="lineno">  284</span>&#160;        glPointSize(3.0);</div>
<div class="line"><a name="l00285"></a><span class="lineno">  285</span>&#160;        glDisable(GL_LIGHTING);</div>
<div class="line"><a name="l00286"></a><span class="lineno">  286</span>&#160;        glBegin(GL_POINTS);</div>
<div class="line"><a name="l00287"></a><span class="lineno">  287</span>&#160;</div>
<div class="line"><a name="l00288"></a><span class="lineno">  288</span>&#160;        <span class="comment">//sollen die Punkte in Materialfarbe dargestellt werden?</span></div>
<div class="line"><a name="l00289"></a><span class="lineno">  289</span>&#160;        <span class="keywordflow">if</span> (viewport.showPoints == RM_MATERIALCOLOR) {</div>
<div class="line"><a name="l00290"></a><span class="lineno">  290</span>&#160;            glColor3fv(mat-&gt;<a class="code" href="structObjectData_1_1MaterialData.xhtml#a3930f8e673d50b88c9234c7f73c16a91" title="Die Farbe des Materials im RGB-Format. ">color</a>);</div>
<div class="line"><a name="l00291"></a><span class="lineno">  291</span>&#160;        }</div>
<div class="line"><a name="l00292"></a><span class="lineno">  292</span>&#160;</div>
<div class="line"><a name="l00293"></a><span class="lineno">  293</span>&#160;        <span class="comment">//für alle Punkte...</span></div>
<div class="line"><a name="l00294"></a><span class="lineno">  294</span>&#160;        <span class="keywordflow">for</span> (<span class="keywordtype">int</span> i = 0; i &lt; io-&gt;numberofpoints; i++) {</div>
<div class="line"><a name="l00295"></a><span class="lineno">  295</span>&#160;</div>
<div class="line"><a name="l00296"></a><span class="lineno">  296</span>&#160;            <span class="comment">//soll der Punkt von der Darstellung ausgeschlossen werden?</span></div>
<div class="line"><a name="l00297"></a><span class="lineno">  297</span>&#160;            <span class="keywordflow">if</span> (mat-&gt;<a class="code" href="structObjectData_1_1MaterialData.xhtml#a22bff8a90f617a5485690bd017dcf701" title="Liste, die für jeden Punkt in der aktuellen Geometrie angibt, ob er extra- (true) oder interpoliert (...">extrapolated</a>[i] &amp;&amp; !viewport.show_extrapolated) {</div>
<div class="line"><a name="l00298"></a><span class="lineno">  298</span>&#160;                <span class="keywordflow">continue</span>;</div>
<div class="line"><a name="l00299"></a><span class="lineno">  299</span>&#160;            }</div>
<div class="line"><a name="l00300"></a><span class="lineno">  300</span>&#160;</div>
<div class="line"><a name="l00301"></a><span class="lineno">  301</span>&#160;            <span class="comment">//farblich der Temperatur entsprechend anzeigen?</span></div>
<div class="line"><a name="l00302"></a><span class="lineno">  302</span>&#160;            <span class="keywordflow">if</span> (viewport.showPoints == RM_VALUECOLOR) {</div>
<div class="line"><a name="l00303"></a><span class="lineno">  303</span>&#160;                <span class="comment">//Ermitteln der Farbe zum Temperaturwert</span></div>
<div class="line"><a name="l00304"></a><span class="lineno">  304</span>&#160;                <span class="keywordtype">float</span> value = io-&gt;pointattributelist[io-&gt;numberofpointattributes</div>
<div class="line"><a name="l00305"></a><span class="lineno">  305</span>&#160;                        * (i)];</div>
<div class="line"><a name="l00306"></a><span class="lineno">  306</span>&#160;                <span class="keywordtype">float</span> inverse_hue = (value - vis_info-&gt;<a class="code" href="structUtils_1_1Visualization__info.xhtml#a6e192352d1f00709f8ef963206ff2653" title="minimal Visualisierte Temperatur (entspricht der Farbe Blau). ">min_visualisation_temp</a>)</div>
<div class="line"><a name="l00307"></a><span class="lineno">  307</span>&#160;                        / (vis_info-&gt;<a class="code" href="structUtils_1_1Visualization__info.xhtml#a5327787a12634166ecc00f2224d3f39f" title="maximal Visualisierte Temperatur (entspricht der Farbe Rot). ">max_visualisation_temp</a></div>
<div class="line"><a name="l00308"></a><span class="lineno">  308</span>&#160;                                - vis_info-&gt;<a class="code" href="structUtils_1_1Visualization__info.xhtml#a6e192352d1f00709f8ef963206ff2653" title="minimal Visualisierte Temperatur (entspricht der Farbe Blau). ">min_visualisation_temp</a>);</div>
<div class="line"><a name="l00309"></a><span class="lineno">  309</span>&#160;                <span class="keywordtype">float</span>* color = <a class="code" href="namespaceUtils.xhtml#a5d6523eb946892eee52c9c74efd016de" title="Wandelt eine Farbe im HSV-Format ins RGB-Format um. ">hsvToRgb</a>((1.0 - <a class="code" href="namespaceUtils.xhtml#abb647325616858e0fad55290c36ea03b" title="Begrenzt einen Wert auf den Bereich 0..1. ">clampHue</a>(inverse_hue)) * .666, 1, 1);</div>
<div class="line"><a name="l00310"></a><span class="lineno">  310</span>&#160;</div>
<div class="line"><a name="l00311"></a><span class="lineno">  311</span>&#160;                <span class="comment">//Zeichnen des Punktes</span></div>
<div class="line"><a name="l00312"></a><span class="lineno">  312</span>&#160;                glColor3fv(color);</div>
<div class="line"><a name="l00313"></a><span class="lineno">  313</span>&#160;                glVertex3dv(&amp;io-&gt;pointlist[3 * (i)]);</div>
<div class="line"><a name="l00314"></a><span class="lineno">  314</span>&#160;                <span class="keyword">delete</span>[] color;</div>
<div class="line"><a name="l00315"></a><span class="lineno">  315</span>&#160;            }</div>
<div class="line"><a name="l00316"></a><span class="lineno">  316</span>&#160;</div>
<div class="line"><a name="l00317"></a><span class="lineno">  317</span>&#160;            <span class="comment">//sollen die Punkte in Materialfarbe dargestellt werden?</span></div>
<div class="line"><a name="l00318"></a><span class="lineno">  318</span>&#160;            <span class="keywordflow">if</span> (viewport.showPoints == RM_MATERIALCOLOR) {</div>
<div class="line"><a name="l00319"></a><span class="lineno">  319</span>&#160;                <span class="comment">//Zeichnen des Punktes</span></div>
<div class="line"><a name="l00320"></a><span class="lineno">  320</span>&#160;                glVertex3dv(&amp;io-&gt;pointlist[3 * (i)]);</div>
<div class="line"><a name="l00321"></a><span class="lineno">  321</span>&#160;            }</div>
<div class="line"><a name="l00322"></a><span class="lineno">  322</span>&#160;        }</div>
<div class="line"><a name="l00323"></a><span class="lineno">  323</span>&#160;        glEnd();</div>
<div class="line"><a name="l00324"></a><span class="lineno">  324</span>&#160;    }</div>
<div class="line"><a name="l00325"></a><span class="lineno">  325</span>&#160;</div>
<div class="line"><a name="l00326"></a><span class="lineno">  326</span>&#160;    <span class="comment">//sollen die Flächen angezeigt werden</span></div>
<div class="line"><a name="l00327"></a><span class="lineno">  327</span>&#160;    <span class="keywordflow">if</span> (viewport.showFaces) {</div>
<div class="line"><a name="l00328"></a><span class="lineno">  328</span>&#160;        glPolygonMode(GL_FRONT, GL_FILL);</div>
<div class="line"><a name="l00329"></a><span class="lineno">  329</span>&#160;        glPolygonMode(GL_BACK, GL_FILL);</div>
<div class="line"><a name="l00330"></a><span class="lineno">  330</span>&#160;        renderTetrahedra(mat, viewport.showFaces);</div>
<div class="line"><a name="l00331"></a><span class="lineno">  331</span>&#160;</div>
<div class="line"><a name="l00332"></a><span class="lineno">  332</span>&#160;    }</div>
<div class="line"><a name="l00333"></a><span class="lineno">  333</span>&#160;</div>
<div class="line"><a name="l00334"></a><span class="lineno">  334</span>&#160;    <span class="comment">//sollen die Kanten angezeigt werden</span></div>
<div class="line"><a name="l00335"></a><span class="lineno">  335</span>&#160;    <span class="keywordflow">if</span> (viewport.showEdges) {</div>
<div class="line"><a name="l00336"></a><span class="lineno">  336</span>&#160;        glPolygonMode(GL_FRONT, GL_LINE);</div>
<div class="line"><a name="l00337"></a><span class="lineno">  337</span>&#160;        glPolygonMode(GL_BACK, GL_LINE);</div>
<div class="line"><a name="l00338"></a><span class="lineno">  338</span>&#160;        renderTetrahedra(mat, viewport.showEdges);</div>
<div class="line"><a name="l00339"></a><span class="lineno">  339</span>&#160;    }</div>
<div class="line"><a name="l00340"></a><span class="lineno">  340</span>&#160;</div>
<div class="line"><a name="l00341"></a><span class="lineno">  341</span>&#160;    <span class="comment">//zeichenmodus zurücksetzen</span></div>
<div class="line"><a name="l00342"></a><span class="lineno">  342</span>&#160;    glPolygonMode(GL_FRONT, GL_FILL);</div>
<div class="line"><a name="l00343"></a><span class="lineno">  343</span>&#160;    glPolygonMode(GL_BACK, GL_FILL);</div>
<div class="line"><a name="l00344"></a><span class="lineno">  344</span>&#160;}</div>
<div class="line"><a name="l00345"></a><span class="lineno">  345</span>&#160;</div>
<div class="line"><a name="l00346"></a><span class="lineno"><a class="code" href="classRenderer.xhtml#a01887363ad27267e44c1ea0f63761a5c">  346</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="classRenderer.xhtml#a01887363ad27267e44c1ea0f63761a5c" title="Initialisiert die OpenGL-Bibliothek. ">Renderer::initGL</a>(<span class="keywordtype">int</span> width, <span class="keywordtype">int</span> height) {</div>
<div class="line"><a name="l00347"></a><span class="lineno">  347</span>&#160;    <span class="comment">//Hintergrundfarbe initialisieren</span></div>
<div class="line"><a name="l00348"></a><span class="lineno">  348</span>&#160;    glClearColor(.5, .5, .5, 1);</div>
<div class="line"><a name="l00349"></a><span class="lineno">  349</span>&#160;    <span class="comment">//Viewport und Projektion setzen</span></div>
<div class="line"><a name="l00350"></a><span class="lineno">  350</span>&#160;    resize(width,height);</div>
<div class="line"><a name="l00351"></a><span class="lineno">  351</span>&#160;}</div>
<div class="line"><a name="l00352"></a><span class="lineno">  352</span>&#160;</div>
<div class="line"><a name="l00353"></a><span class="lineno"><a class="code" href="classRenderer.xhtml#a9f4493c538688adaad4e4f0575fd3b8d">  353</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="classRenderer.xhtml#a9f4493c538688adaad4e4f0575fd3b8d" title="Verändert die Größe des Anzeigebereichs. ">Renderer::resize</a>(<span class="keywordtype">int</span> width, <span class="keywordtype">int</span> height) {</div>
<div class="line"><a name="l00354"></a><span class="lineno">  354</span>&#160;    <span class="comment">//Viewport aktualisieren</span></div>
<div class="line"><a name="l00355"></a><span class="lineno">  355</span>&#160;    glViewport(0, 0, width, height);</div>
<div class="line"><a name="l00356"></a><span class="lineno">  356</span>&#160;    viewport.width = width;</div>
<div class="line"><a name="l00357"></a><span class="lineno">  357</span>&#160;    viewport.height = height;</div>
<div class="line"><a name="l00358"></a><span class="lineno">  358</span>&#160;</div>
<div class="line"><a name="l00359"></a><span class="lineno">  359</span>&#160;    <span class="comment">//Projektion aktualisieren</span></div>
<div class="line"><a name="l00360"></a><span class="lineno">  360</span>&#160;    glMatrixMode(GL_PROJECTION);</div>
<div class="line"><a name="l00361"></a><span class="lineno">  361</span>&#160;    glLoadIdentity();</div>
<div class="line"><a name="l00362"></a><span class="lineno">  362</span>&#160;    <span class="keywordtype">double</span> h = (double) height / (<span class="keywordtype">double</span>) width;</div>
<div class="line"><a name="l00363"></a><span class="lineno">  363</span>&#160;    glFrustum(-1.0, 1.0, -h, h, 1.5, 500);</div>
<div class="line"><a name="l00364"></a><span class="lineno">  364</span>&#160;    glMatrixMode(GL_MODELVIEW);</div>
<div class="line"><a name="l00365"></a><span class="lineno">  365</span>&#160;    glLoadIdentity();</div>
<div class="line"><a name="l00366"></a><span class="lineno">  366</span>&#160;}</div>
<div class="line"><a name="l00367"></a><span class="lineno">  367</span>&#160;</div>
<div class="line"><a name="l00373"></a><span class="lineno"><a class="code" href="Renderer_8cpp.xhtml#a4225af4db7b633515f133a4f40c72b33">  373</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="Renderer_8cpp.xhtml#a4225af4db7b633515f133a4f40c72b33" title="Zeichnet einen Vektor als Pfeil. ">drawVector</a>(<a class="code" href="classVector3D.xhtml" title="3D-Vektorklasse mit nützlichen Operationen. ">Vector3D</a>* pos, <a class="code" href="classVector3D.xhtml" title="3D-Vektorklasse mit nützlichen Operationen. ">Vector3D</a>* dir) {</div>
<div class="line"><a name="l00374"></a><span class="lineno">  374</span>&#160;</div>
<div class="line"><a name="l00375"></a><span class="lineno">  375</span>&#160;    <span class="comment">//spitze des Vektors</span></div>
<div class="line"><a name="l00376"></a><span class="lineno">  376</span>&#160;    <a class="code" href="classVector3D.xhtml" title="3D-Vektorklasse mit nützlichen Operationen. ">Vector3D</a> tip = <a class="code" href="classVector3D.xhtml" title="3D-Vektorklasse mit nützlichen Operationen. ">Vector3D</a>(pos);</div>
<div class="line"><a name="l00377"></a><span class="lineno">  377</span>&#160;    <span class="comment">//normalisierte Richtung des Vektors</span></div>
<div class="line"><a name="l00378"></a><span class="lineno">  378</span>&#160;    <a class="code" href="classVector3D.xhtml" title="3D-Vektorklasse mit nützlichen Operationen. ">Vector3D</a> ndir = <a class="code" href="classVector3D.xhtml" title="3D-Vektorklasse mit nützlichen Operationen. ">Vector3D</a>(dir);</div>
<div class="line"><a name="l00379"></a><span class="lineno">  379</span>&#160;    ndir.<a class="code" href="classVector3D.xhtml#abfb12ecb9c9beb88e095cc4a1a512d3c" title="Normalisiert den Vektor. ">normalize</a>();</div>
<div class="line"><a name="l00380"></a><span class="lineno">  380</span>&#160;</div>
<div class="line"><a name="l00381"></a><span class="lineno">  381</span>&#160;    <span class="comment">//Referenzvektor, darf dem Vektor nicht entsprechen</span></div>
<div class="line"><a name="l00382"></a><span class="lineno">  382</span>&#160;    <a class="code" href="classVector3D.xhtml" title="3D-Vektorklasse mit nützlichen Operationen. ">Vector3D</a> refdir = <a class="code" href="classVector3D.xhtml" title="3D-Vektorklasse mit nützlichen Operationen. ">Vector3D</a>(1, 0, 0);</div>
<div class="line"><a name="l00383"></a><span class="lineno">  383</span>&#160;    <span class="keywordflow">if</span> (refdir.<a class="code" href="classVector3D.xhtml#ac83e936757114f32bc9d868ea5fabbc2" title="Testet, ob zwei Vektoren identisch sind. ">equals</a>(&amp;ndir)) {</div>
<div class="line"><a name="l00384"></a><span class="lineno">  384</span>&#160;        refdir.<a class="code" href="classVector3D.xhtml#a89aeff2092d6a954cd449aca97c59197" title="Gibt eine Referenz auf die Vektorelemente zurück (Vor allem zur Übergabe an OpenGL verwendet)...">getXYZ</a>()[0] = 0;</div>
<div class="line"><a name="l00385"></a><span class="lineno">  385</span>&#160;        refdir.<a class="code" href="classVector3D.xhtml#a89aeff2092d6a954cd449aca97c59197" title="Gibt eine Referenz auf die Vektorelemente zurück (Vor allem zur Übergabe an OpenGL verwendet)...">getXYZ</a>()[1] = 1;</div>
<div class="line"><a name="l00386"></a><span class="lineno">  386</span>&#160;    }</div>
<div class="line"><a name="l00387"></a><span class="lineno">  387</span>&#160;</div>
<div class="line"><a name="l00388"></a><span class="lineno">  388</span>&#160;    <span class="comment">//Radius der Vektorspitze</span></div>
<div class="line"><a name="l00389"></a><span class="lineno">  389</span>&#160;    <span class="keywordtype">float</span> radius = .012*dir-&gt;<a class="code" href="classVector3D.xhtml#a2e3aa1d244483abcb1a8e48e47e79512" title="Gibt die Länge des Vektors zurück. ">getLength</a>();</div>
<div class="line"><a name="l00390"></a><span class="lineno">  390</span>&#160;    <span class="comment">//Länge der Vektorspitze</span></div>
<div class="line"><a name="l00391"></a><span class="lineno">  391</span>&#160;    <span class="keywordtype">float</span> length = .024*dir-&gt;<a class="code" href="classVector3D.xhtml#a2e3aa1d244483abcb1a8e48e47e79512" title="Gibt die Länge des Vektors zurück. ">getLength</a>();</div>
<div class="line"><a name="l00392"></a><span class="lineno">  392</span>&#160;</div>
<div class="line"><a name="l00393"></a><span class="lineno">  393</span>&#160;    <span class="comment">//Zwei Referenzvektoren, die zum Ausgansvektor und zueinander einen Winkel von 90° einschließen</span></div>
<div class="line"><a name="l00394"></a><span class="lineno">  394</span>&#160;    <a class="code" href="classVector3D.xhtml" title="3D-Vektorklasse mit nützlichen Operationen. ">Vector3D</a>* refvec = ndir.<a class="code" href="classVector3D.xhtml#a482cd77ce44ea7dd71fd7a43cb7b1cf5" title="Gibt das Kreuzprodukt mit einem anderen Vektor zurück. ">crossProduct</a>(&amp;refdir);</div>
<div class="line"><a name="l00395"></a><span class="lineno">  395</span>&#160;    <a class="code" href="classVector3D.xhtml" title="3D-Vektorklasse mit nützlichen Operationen. ">Vector3D</a>* refvec2 = ndir.<a class="code" href="classVector3D.xhtml#a482cd77ce44ea7dd71fd7a43cb7b1cf5" title="Gibt das Kreuzprodukt mit einem anderen Vektor zurück. ">crossProduct</a>(refvec);</div>
<div class="line"><a name="l00396"></a><span class="lineno">  396</span>&#160;    refvec-&gt;<a class="code" href="classVector3D.xhtml#abfb12ecb9c9beb88e095cc4a1a512d3c" title="Normalisiert den Vektor. ">normalize</a>();</div>
<div class="line"><a name="l00397"></a><span class="lineno">  397</span>&#160;    refvec2-&gt;<a class="code" href="classVector3D.xhtml#abfb12ecb9c9beb88e095cc4a1a512d3c" title="Normalisiert den Vektor. ">normalize</a>();</div>
<div class="line"><a name="l00398"></a><span class="lineno">  398</span>&#160;</div>
<div class="line"><a name="l00399"></a><span class="lineno">  399</span>&#160;    <span class="comment">//zeichnen der Linie von Ausganspunkt bis Spitze des Pfeils</span></div>
<div class="line"><a name="l00400"></a><span class="lineno">  400</span>&#160;    tip.<a class="code" href="classVector3D.xhtml#a0d14ff1f789254ff90adc22628eb8347" title="Addiert einen Vektor zu diesem Vektor. ">add</a>(dir);</div>
<div class="line"><a name="l00401"></a><span class="lineno">  401</span>&#160;    <a class="code" href="classVector3D.xhtml" title="3D-Vektorklasse mit nützlichen Operationen. ">Vector3D</a> behind = <a class="code" href="classVector3D.xhtml" title="3D-Vektorklasse mit nützlichen Operationen. ">Vector3D</a>(pos);</div>
<div class="line"><a name="l00402"></a><span class="lineno">  402</span>&#160;    glLineWidth(2.0);</div>
<div class="line"><a name="l00403"></a><span class="lineno">  403</span>&#160;    glBegin(GL_LINES);</div>
<div class="line"><a name="l00404"></a><span class="lineno">  404</span>&#160;    glVertex3dv(behind.<a class="code" href="classVector3D.xhtml#a89aeff2092d6a954cd449aca97c59197" title="Gibt eine Referenz auf die Vektorelemente zurück (Vor allem zur Übergabe an OpenGL verwendet)...">getXYZ</a>());</div>
<div class="line"><a name="l00405"></a><span class="lineno">  405</span>&#160;    glVertex3dv(tip.<a class="code" href="classVector3D.xhtml#a89aeff2092d6a954cd449aca97c59197" title="Gibt eine Referenz auf die Vektorelemente zurück (Vor allem zur Übergabe an OpenGL verwendet)...">getXYZ</a>());</div>
<div class="line"><a name="l00406"></a><span class="lineno">  406</span>&#160;    glEnd();</div>
<div class="line"><a name="l00407"></a><span class="lineno">  407</span>&#160;</div>
<div class="line"><a name="l00408"></a><span class="lineno">  408</span>&#160;    <span class="comment">//Hilfsvektoren zum zusammentragen der Spitze des Vektors</span></div>
<div class="line"><a name="l00409"></a><span class="lineno">  409</span>&#160;    <a class="code" href="classVector3D.xhtml" title="3D-Vektorklasse mit nützlichen Operationen. ">Vector3D</a> v1 = <a class="code" href="classVector3D.xhtml" title="3D-Vektorklasse mit nützlichen Operationen. ">Vector3D</a>(refvec);</div>
<div class="line"><a name="l00410"></a><span class="lineno">  410</span>&#160;    <a class="code" href="classVector3D.xhtml" title="3D-Vektorklasse mit nützlichen Operationen. ">Vector3D</a> v2 = <a class="code" href="classVector3D.xhtml" title="3D-Vektorklasse mit nützlichen Operationen. ">Vector3D</a>(refvec2);</div>
<div class="line"><a name="l00411"></a><span class="lineno">  411</span>&#160;    <a class="code" href="classVector3D.xhtml" title="3D-Vektorklasse mit nützlichen Operationen. ">Vector3D</a> v3 = <a class="code" href="classVector3D.xhtml" title="3D-Vektorklasse mit nützlichen Operationen. ">Vector3D</a>(v1);</div>
<div class="line"><a name="l00412"></a><span class="lineno">  412</span>&#160;    v3.<a class="code" href="classVector3D.xhtml#a3dec11494c99de7370e3877054c3ef13" title="Multipliziert den Vektor mit einem Skalar. ">mult</a>(-1);</div>
<div class="line"><a name="l00413"></a><span class="lineno">  413</span>&#160;    <a class="code" href="classVector3D.xhtml" title="3D-Vektorklasse mit nützlichen Operationen. ">Vector3D</a> v4 = <a class="code" href="classVector3D.xhtml" title="3D-Vektorklasse mit nützlichen Operationen. ">Vector3D</a>(refvec2);</div>
<div class="line"><a name="l00414"></a><span class="lineno">  414</span>&#160;    v4.<a class="code" href="classVector3D.xhtml#a3dec11494c99de7370e3877054c3ef13" title="Multipliziert den Vektor mit einem Skalar. ">mult</a>(-1);</div>
<div class="line"><a name="l00415"></a><span class="lineno">  415</span>&#160;</div>
<div class="line"><a name="l00416"></a><span class="lineno">  416</span>&#160;    <span class="comment">//zeichen der Pfeilspitze</span></div>
<div class="line"><a name="l00417"></a><span class="lineno">  417</span>&#160;    v1.<a class="code" href="classVector3D.xhtml#a3dec11494c99de7370e3877054c3ef13" title="Multipliziert den Vektor mit einem Skalar. ">mult</a>(radius);</div>
<div class="line"><a name="l00418"></a><span class="lineno">  418</span>&#160;    v2.<a class="code" href="classVector3D.xhtml#a3dec11494c99de7370e3877054c3ef13" title="Multipliziert den Vektor mit einem Skalar. ">mult</a>(radius);</div>
<div class="line"><a name="l00419"></a><span class="lineno">  419</span>&#160;    v3.<a class="code" href="classVector3D.xhtml#a3dec11494c99de7370e3877054c3ef13" title="Multipliziert den Vektor mit einem Skalar. ">mult</a>(radius);</div>
<div class="line"><a name="l00420"></a><span class="lineno">  420</span>&#160;    v4.<a class="code" href="classVector3D.xhtml#a3dec11494c99de7370e3877054c3ef13" title="Multipliziert den Vektor mit einem Skalar. ">mult</a>(radius);</div>
<div class="line"><a name="l00421"></a><span class="lineno">  421</span>&#160;    ndir.<a class="code" href="classVector3D.xhtml#a3dec11494c99de7370e3877054c3ef13" title="Multipliziert den Vektor mit einem Skalar. ">mult</a>(dir-&gt;<a class="code" href="classVector3D.xhtml#a2e3aa1d244483abcb1a8e48e47e79512" title="Gibt die Länge des Vektors zurück. ">getLength</a>() - length);</div>
<div class="line"><a name="l00422"></a><span class="lineno">  422</span>&#160;    v1.<a class="code" href="classVector3D.xhtml#a0d14ff1f789254ff90adc22628eb8347" title="Addiert einen Vektor zu diesem Vektor. ">add</a>(&amp;ndir);</div>
<div class="line"><a name="l00423"></a><span class="lineno">  423</span>&#160;    v2.<a class="code" href="classVector3D.xhtml#a0d14ff1f789254ff90adc22628eb8347" title="Addiert einen Vektor zu diesem Vektor. ">add</a>(&amp;ndir);</div>
<div class="line"><a name="l00424"></a><span class="lineno">  424</span>&#160;    v3.<a class="code" href="classVector3D.xhtml#a0d14ff1f789254ff90adc22628eb8347" title="Addiert einen Vektor zu diesem Vektor. ">add</a>(&amp;ndir);</div>
<div class="line"><a name="l00425"></a><span class="lineno">  425</span>&#160;    v4.<a class="code" href="classVector3D.xhtml#a0d14ff1f789254ff90adc22628eb8347" title="Addiert einen Vektor zu diesem Vektor. ">add</a>(&amp;ndir);</div>
<div class="line"><a name="l00426"></a><span class="lineno">  426</span>&#160;    v1.<a class="code" href="classVector3D.xhtml#a0d14ff1f789254ff90adc22628eb8347" title="Addiert einen Vektor zu diesem Vektor. ">add</a>(pos);</div>
<div class="line"><a name="l00427"></a><span class="lineno">  427</span>&#160;    v2.<a class="code" href="classVector3D.xhtml#a0d14ff1f789254ff90adc22628eb8347" title="Addiert einen Vektor zu diesem Vektor. ">add</a>(pos);</div>
<div class="line"><a name="l00428"></a><span class="lineno">  428</span>&#160;    v3.<a class="code" href="classVector3D.xhtml#a0d14ff1f789254ff90adc22628eb8347" title="Addiert einen Vektor zu diesem Vektor. ">add</a>(pos);</div>
<div class="line"><a name="l00429"></a><span class="lineno">  429</span>&#160;    v4.<a class="code" href="classVector3D.xhtml#a0d14ff1f789254ff90adc22628eb8347" title="Addiert einen Vektor zu diesem Vektor. ">add</a>(pos);</div>
<div class="line"><a name="l00430"></a><span class="lineno">  430</span>&#160;    glBegin(GL_TRIANGLES);</div>
<div class="line"><a name="l00431"></a><span class="lineno">  431</span>&#160;    glVertex3dv(v1.<a class="code" href="classVector3D.xhtml#a89aeff2092d6a954cd449aca97c59197" title="Gibt eine Referenz auf die Vektorelemente zurück (Vor allem zur Übergabe an OpenGL verwendet)...">getXYZ</a>());</div>
<div class="line"><a name="l00432"></a><span class="lineno">  432</span>&#160;    glVertex3dv(v2.<a class="code" href="classVector3D.xhtml#a89aeff2092d6a954cd449aca97c59197" title="Gibt eine Referenz auf die Vektorelemente zurück (Vor allem zur Übergabe an OpenGL verwendet)...">getXYZ</a>());</div>
<div class="line"><a name="l00433"></a><span class="lineno">  433</span>&#160;    glVertex3dv(tip.<a class="code" href="classVector3D.xhtml#a89aeff2092d6a954cd449aca97c59197" title="Gibt eine Referenz auf die Vektorelemente zurück (Vor allem zur Übergabe an OpenGL verwendet)...">getXYZ</a>());</div>
<div class="line"><a name="l00434"></a><span class="lineno">  434</span>&#160;</div>
<div class="line"><a name="l00435"></a><span class="lineno">  435</span>&#160;    glVertex3dv(v2.<a class="code" href="classVector3D.xhtml#a89aeff2092d6a954cd449aca97c59197" title="Gibt eine Referenz auf die Vektorelemente zurück (Vor allem zur Übergabe an OpenGL verwendet)...">getXYZ</a>());</div>
<div class="line"><a name="l00436"></a><span class="lineno">  436</span>&#160;    glVertex3dv(v3.<a class="code" href="classVector3D.xhtml#a89aeff2092d6a954cd449aca97c59197" title="Gibt eine Referenz auf die Vektorelemente zurück (Vor allem zur Übergabe an OpenGL verwendet)...">getXYZ</a>());</div>
<div class="line"><a name="l00437"></a><span class="lineno">  437</span>&#160;    glVertex3dv(tip.<a class="code" href="classVector3D.xhtml#a89aeff2092d6a954cd449aca97c59197" title="Gibt eine Referenz auf die Vektorelemente zurück (Vor allem zur Übergabe an OpenGL verwendet)...">getXYZ</a>());</div>
<div class="line"><a name="l00438"></a><span class="lineno">  438</span>&#160;</div>
<div class="line"><a name="l00439"></a><span class="lineno">  439</span>&#160;    glVertex3dv(v3.<a class="code" href="classVector3D.xhtml#a89aeff2092d6a954cd449aca97c59197" title="Gibt eine Referenz auf die Vektorelemente zurück (Vor allem zur Übergabe an OpenGL verwendet)...">getXYZ</a>());</div>
<div class="line"><a name="l00440"></a><span class="lineno">  440</span>&#160;    glVertex3dv(v4.<a class="code" href="classVector3D.xhtml#a89aeff2092d6a954cd449aca97c59197" title="Gibt eine Referenz auf die Vektorelemente zurück (Vor allem zur Übergabe an OpenGL verwendet)...">getXYZ</a>());</div>
<div class="line"><a name="l00441"></a><span class="lineno">  441</span>&#160;    glVertex3dv(tip.<a class="code" href="classVector3D.xhtml#a89aeff2092d6a954cd449aca97c59197" title="Gibt eine Referenz auf die Vektorelemente zurück (Vor allem zur Übergabe an OpenGL verwendet)...">getXYZ</a>());</div>
<div class="line"><a name="l00442"></a><span class="lineno">  442</span>&#160;</div>
<div class="line"><a name="l00443"></a><span class="lineno">  443</span>&#160;    glVertex3dv(v4.<a class="code" href="classVector3D.xhtml#a89aeff2092d6a954cd449aca97c59197" title="Gibt eine Referenz auf die Vektorelemente zurück (Vor allem zur Übergabe an OpenGL verwendet)...">getXYZ</a>());</div>
<div class="line"><a name="l00444"></a><span class="lineno">  444</span>&#160;    glVertex3dv(v1.<a class="code" href="classVector3D.xhtml#a89aeff2092d6a954cd449aca97c59197" title="Gibt eine Referenz auf die Vektorelemente zurück (Vor allem zur Übergabe an OpenGL verwendet)...">getXYZ</a>());</div>
<div class="line"><a name="l00445"></a><span class="lineno">  445</span>&#160;    glVertex3dv(tip.<a class="code" href="classVector3D.xhtml#a89aeff2092d6a954cd449aca97c59197" title="Gibt eine Referenz auf die Vektorelemente zurück (Vor allem zur Übergabe an OpenGL verwendet)...">getXYZ</a>());</div>
<div class="line"><a name="l00446"></a><span class="lineno">  446</span>&#160;    glEnd();</div>
<div class="line"><a name="l00447"></a><span class="lineno">  447</span>&#160;    glLineWidth(1.0);</div>
<div class="line"><a name="l00448"></a><span class="lineno">  448</span>&#160;    <span class="keyword">delete</span> refvec;</div>
<div class="line"><a name="l00449"></a><span class="lineno">  449</span>&#160;    <span class="keyword">delete</span> refvec2;</div>
<div class="line"><a name="l00450"></a><span class="lineno">  450</span>&#160;}</div>
<div class="line"><a name="l00451"></a><span class="lineno">  451</span>&#160;</div>
<div class="line"><a name="l00455"></a><span class="lineno"><a class="code" href="Renderer_8cpp.xhtml#ac35d259852428046b123c635864e2197">  455</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="Renderer_8cpp.xhtml#ac35d259852428046b123c635864e2197" title="Zeichnet markante Linien zum leichteren Erfassen des Koordinatensystems. ">renderGrid</a>() {</div>
<div class="line"><a name="l00456"></a><span class="lineno">  456</span>&#160;</div>
<div class="line"><a name="l00457"></a><span class="lineno">  457</span>&#160;    <span class="comment">//Achsen einzeichnen</span></div>
<div class="line"><a name="l00458"></a><span class="lineno">  458</span>&#160;    <a class="code" href="classVector3D.xhtml" title="3D-Vektorklasse mit nützlichen Operationen. ">Vector3D</a> x_axis(10, 0, 0);</div>
<div class="line"><a name="l00459"></a><span class="lineno">  459</span>&#160;    <a class="code" href="classVector3D.xhtml" title="3D-Vektorklasse mit nützlichen Operationen. ">Vector3D</a> y_axis(0, 10, 0);</div>
<div class="line"><a name="l00460"></a><span class="lineno">  460</span>&#160;    <a class="code" href="classVector3D.xhtml" title="3D-Vektorklasse mit nützlichen Operationen. ">Vector3D</a> z_axis(0, 0, 10);</div>
<div class="line"><a name="l00461"></a><span class="lineno">  461</span>&#160;    <a class="code" href="classVector3D.xhtml" title="3D-Vektorklasse mit nützlichen Operationen. ">Vector3D</a> orgin(0, 0, 0);</div>
<div class="line"><a name="l00462"></a><span class="lineno">  462</span>&#160;    glColor3f(1, 0, 0);</div>
<div class="line"><a name="l00463"></a><span class="lineno">  463</span>&#160;    <a class="code" href="Renderer_8cpp.xhtml#a4225af4db7b633515f133a4f40c72b33" title="Zeichnet einen Vektor als Pfeil. ">drawVector</a>(&amp;orgin, &amp;x_axis);</div>
<div class="line"><a name="l00464"></a><span class="lineno">  464</span>&#160;    glColor3f(0, 1, 0);</div>
<div class="line"><a name="l00465"></a><span class="lineno">  465</span>&#160;    <a class="code" href="Renderer_8cpp.xhtml#a4225af4db7b633515f133a4f40c72b33" title="Zeichnet einen Vektor als Pfeil. ">drawVector</a>(&amp;orgin, &amp;y_axis);</div>
<div class="line"><a name="l00466"></a><span class="lineno">  466</span>&#160;    glColor3f(0, 0, 1);</div>
<div class="line"><a name="l00467"></a><span class="lineno">  467</span>&#160;    <a class="code" href="Renderer_8cpp.xhtml#a4225af4db7b633515f133a4f40c72b33" title="Zeichnet einen Vektor als Pfeil. ">drawVector</a>(&amp;orgin, &amp;z_axis);</div>
<div class="line"><a name="l00468"></a><span class="lineno">  468</span>&#160;</div>
<div class="line"><a name="l00469"></a><span class="lineno">  469</span>&#160;    glColor3f(.2, .2, .2);</div>
<div class="line"><a name="l00470"></a><span class="lineno">  470</span>&#160;    glLineWidth(1.0);</div>
<div class="line"><a name="l00471"></a><span class="lineno">  471</span>&#160;    glBegin(GL_LINES);</div>
<div class="line"><a name="l00472"></a><span class="lineno">  472</span>&#160;    <span class="comment">//Linien in z-Richtung zeichnen</span></div>
<div class="line"><a name="l00473"></a><span class="lineno">  473</span>&#160;    <span class="keywordflow">for</span> (<span class="keywordtype">int</span> i = 0; i &lt; 10; i++) {</div>
<div class="line"><a name="l00474"></a><span class="lineno">  474</span>&#160;        glVertex3i(i, 0, 10);</div>
<div class="line"><a name="l00475"></a><span class="lineno">  475</span>&#160;        glVertex3i(i, 0, -10);</div>
<div class="line"><a name="l00476"></a><span class="lineno">  476</span>&#160;        glVertex3i(-i, 0, 10);</div>
<div class="line"><a name="l00477"></a><span class="lineno">  477</span>&#160;        glVertex3i(-i, 0, -10);</div>
<div class="line"><a name="l00478"></a><span class="lineno">  478</span>&#160;    }</div>
<div class="line"><a name="l00479"></a><span class="lineno">  479</span>&#160;    <span class="comment">//Linien in x-Richtung zeichnen</span></div>
<div class="line"><a name="l00480"></a><span class="lineno">  480</span>&#160;    <span class="keywordflow">for</span> (<span class="keywordtype">int</span> i = 0; i &lt; 10; i++) {</div>
<div class="line"><a name="l00481"></a><span class="lineno">  481</span>&#160;        glVertex3i(10, 0, i);</div>
<div class="line"><a name="l00482"></a><span class="lineno">  482</span>&#160;        glVertex3i(-10, 0, i);</div>
<div class="line"><a name="l00483"></a><span class="lineno">  483</span>&#160;        glVertex3i(10, 0, -i);</div>
<div class="line"><a name="l00484"></a><span class="lineno">  484</span>&#160;        glVertex3i(-10, 0, -i);</div>
<div class="line"><a name="l00485"></a><span class="lineno">  485</span>&#160;    }</div>
<div class="line"><a name="l00486"></a><span class="lineno">  486</span>&#160;    glEnd();</div>
<div class="line"><a name="l00487"></a><span class="lineno">  487</span>&#160;}</div>
<div class="line"><a name="l00488"></a><span class="lineno">  488</span>&#160;</div>
<div class="line"><a name="l00489"></a><span class="lineno"><a class="code" href="classRenderer.xhtml#a566b30ae615b9cd74d481f360e0a567e">  489</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="classRenderer.xhtml#a566b30ae615b9cd74d481f360e0a567e" title="Setzt die Eigenschaften einer 2D-Temperaturverteilung, welche teilweise zur Visualisierung der Ebene ...">Renderer::setCutRenderInfo</a>(<a class="code" href="structUtils_1_1CutRender__info.xhtml" title="Daten zur Darstellung einer 2D-Temperaturverteilungs-Ebene. ">CutRender_info</a>* info) {</div>
<div class="line"><a name="l00490"></a><span class="lineno">  490</span>&#160;    <span class="comment">//sind bereits 2D-Schnittebeneninformationen verknüpft?</span></div>
<div class="line"><a name="l00491"></a><span class="lineno">  491</span>&#160;    <span class="keywordflow">if</span> (cut_visualisation_info != NULL) {</div>
<div class="line"><a name="l00492"></a><span class="lineno">  492</span>&#160;        <span class="comment">//löschen dieser</span></div>
<div class="line"><a name="l00493"></a><span class="lineno">  493</span>&#160;        <span class="keywordflow">for</span> (<span class="keywordtype">int</span> i = 0; i &lt; 3; i++) {</div>
<div class="line"><a name="l00494"></a><span class="lineno">  494</span>&#160;            <span class="keyword">delete</span> cut_visualisation_info-&gt;tri-&gt;getVert(i);</div>
<div class="line"><a name="l00495"></a><span class="lineno">  495</span>&#160;        }</div>
<div class="line"><a name="l00496"></a><span class="lineno">  496</span>&#160;</div>
<div class="line"><a name="l00497"></a><span class="lineno">  497</span>&#160;        <span class="keyword">delete</span> cut_visualisation_info-&gt;tri;</div>
<div class="line"><a name="l00498"></a><span class="lineno">  498</span>&#160;        <span class="keyword">delete</span> cut_visualisation_info;</div>
<div class="line"><a name="l00499"></a><span class="lineno">  499</span>&#160;    }</div>
<div class="line"><a name="l00500"></a><span class="lineno">  500</span>&#160;</div>
<div class="line"><a name="l00501"></a><span class="lineno">  501</span>&#160;    cut_visualisation_info = info;</div>
<div class="line"><a name="l00502"></a><span class="lineno">  502</span>&#160;}</div>
<div class="line"><a name="l00503"></a><span class="lineno"><a class="code" href="classRenderer.xhtml#a9db67fbbd309875b564ca1df08daf372">  503</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="classRenderer.xhtml#a9db67fbbd309875b564ca1df08daf372" title="Setzt das zu zeichnende Objekt. ">Renderer::setObject</a>(<a class="code" href="classObjectData.xhtml" title="Die Daten eines Versuchsobjekts. ">ObjectData</a>* obj) {</div>
<div class="line"><a name="l00504"></a><span class="lineno">  504</span>&#160;</div>
<div class="line"><a name="l00505"></a><span class="lineno">  505</span>&#160;    <span class="keywordtype">object</span> = obj;</div>
<div class="line"><a name="l00506"></a><span class="lineno">  506</span>&#160;</div>
<div class="line"><a name="l00507"></a><span class="lineno">  507</span>&#160;    <span class="comment">//Löschen der Geometriedaten auf der Grafikkarte</span></div>
<div class="line"><a name="l00508"></a><span class="lineno">  508</span>&#160;    <span class="keywordflow">if</span> (displayList &gt; -1) {</div>
<div class="line"><a name="l00509"></a><span class="lineno">  509</span>&#160;        glDeleteLists(displayList, 1);</div>
<div class="line"><a name="l00510"></a><span class="lineno">  510</span>&#160;    }</div>
<div class="line"><a name="l00511"></a><span class="lineno">  511</span>&#160;</div>
<div class="line"><a name="l00512"></a><span class="lineno">  512</span>&#160;    <span class="comment">//Generieren einer neuen Displayliste</span></div>
<div class="line"><a name="l00513"></a><span class="lineno">  513</span>&#160;    displayList = glGenLists(1);</div>
<div class="line"><a name="l00514"></a><span class="lineno">  514</span>&#160;    <span class="keywordflow">if</span> (!glIsList(displayList)) {</div>
<div class="line"><a name="l00515"></a><span class="lineno">  515</span>&#160;        cerr &lt;&lt; <span class="stringliteral">&quot;could not create display list!&quot;</span> &lt;&lt; endl;</div>
<div class="line"><a name="l00516"></a><span class="lineno">  516</span>&#160;    }</div>
<div class="line"><a name="l00517"></a><span class="lineno">  517</span>&#160;</div>
<div class="line"><a name="l00518"></a><span class="lineno">  518</span>&#160;    <span class="comment">//Speichern der neuen Geometriedaten auf der Grafikkarte</span></div>
<div class="line"><a name="l00519"></a><span class="lineno">  519</span>&#160;    glNewList(displayList, GL_COMPILE);</div>
<div class="line"><a name="l00520"></a><span class="lineno">  520</span>&#160;    <span class="keywordflow">for</span> (<span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> i = 0; i &lt; obj-&gt;<a class="code" href="classObjectData.xhtml#afda67d7524b83780e431dd3a9c5ac23a" title="Gibt eine Referenz auf die Liste der Materialien (mit Materialdaten) des Objekts zurück. ">getMaterials</a>()-&gt;size(); i++) {</div>
<div class="line"><a name="l00521"></a><span class="lineno">  521</span>&#160;        <span class="keywordflow">if</span> (object-&gt;getMaterials()-&gt;at(i).visible) {</div>
<div class="line"><a name="l00522"></a><span class="lineno">  522</span>&#160;            renderMaterial(&amp;object-&gt;getMaterials()-&gt;at(i));</div>
<div class="line"><a name="l00523"></a><span class="lineno">  523</span>&#160;        }</div>
<div class="line"><a name="l00524"></a><span class="lineno">  524</span>&#160;        <span class="keywordflow">if</span> (viewport.show_sensordata) {</div>
<div class="line"><a name="l00525"></a><span class="lineno">  525</span>&#160;            <a class="code" href="structUtils_1_1SensorData.xhtml" title="Ein Sensordatensatz. ">SensorData</a>* sd = &amp;<span class="keywordtype">object</span>-&gt;getSensorDataList()-&gt;at(</div>
<div class="line"><a name="l00526"></a><span class="lineno">  526</span>&#160;                    object-&gt;getCurrentSensorIndex());</div>
<div class="line"><a name="l00527"></a><span class="lineno">  527</span>&#160;            renderSensorData(&amp;sd-&gt;<a class="code" href="structUtils_1_1SensorData.xhtml#ae94e7645dc0b6adfd21571b0abd5e309" title="Daten des Datensatzes (Sensorpunkte zu versch. ">data</a>.at(sd-&gt;<a class="code" href="structUtils_1_1SensorData.xhtml#a177d53154d56fcf1962f969ece1e7d9d" title="Index des aktuell ausgewählten Zeitpunkts. ">current_time_index</a>));</div>
<div class="line"><a name="l00528"></a><span class="lineno">  528</span>&#160;        }</div>
<div class="line"><a name="l00529"></a><span class="lineno">  529</span>&#160;    }</div>
<div class="line"><a name="l00530"></a><span class="lineno">  530</span>&#160;    glEndList();</div>
<div class="line"><a name="l00531"></a><span class="lineno">  531</span>&#160;}</div>
<div class="line"><a name="l00532"></a><span class="lineno"><a class="code" href="classRenderer.xhtml#afe4e5a9e26320e0b8276b2d0f82a1827">  532</a></span>&#160;wxImage* <a class="code" href="classRenderer.xhtml#afe4e5a9e26320e0b8276b2d0f82a1827" title="Gibt den Inhalt der Zeichenfläche als Bild zurück. ">Renderer::getViewportImage</a>() {</div>
<div class="line"><a name="l00533"></a><span class="lineno">  533</span>&#160;</div>
<div class="line"><a name="l00534"></a><span class="lineno">  534</span>&#160;    <span class="comment">//Auslesen des OpenGL-Viewports</span></div>
<div class="line"><a name="l00535"></a><span class="lineno">  535</span>&#160;    GLint view[4];</div>
<div class="line"><a name="l00536"></a><span class="lineno">  536</span>&#160;    glGetIntegerv(GL_VIEWPORT, view);</div>
<div class="line"><a name="l00537"></a><span class="lineno">  537</span>&#160;</div>
<div class="line"><a name="l00538"></a><span class="lineno">  538</span>&#160;    <span class="comment">//Auslesen des Bildes aus Opengl</span></div>
<div class="line"><a name="l00539"></a><span class="lineno">  539</span>&#160;    <span class="keywordtype">void</span>* pixels = malloc(3 * view[2] * view[3]); <span class="comment">//OpenGL setzt malloc voraus</span></div>
<div class="line"><a name="l00540"></a><span class="lineno">  540</span>&#160;    glPixelStorei(GL_PACK_ALIGNMENT, 1);</div>
<div class="line"><a name="l00541"></a><span class="lineno">  541</span>&#160;    glReadBuffer(GL_BACK_LEFT);</div>
<div class="line"><a name="l00542"></a><span class="lineno">  542</span>&#160;    glReadPixels(0, 0, view[2], view[3], GL_RGB, GL_UNSIGNED_BYTE, pixels);</div>
<div class="line"><a name="l00543"></a><span class="lineno">  543</span>&#160;</div>
<div class="line"><a name="l00544"></a><span class="lineno">  544</span>&#160;    <span class="comment">//Die Ausgelesenen Farbinformationen in ein wxImage schreiben</span></div>
<div class="line"><a name="l00545"></a><span class="lineno">  545</span>&#160;    wxImage* img = <span class="keyword">new</span> wxImage((<span class="keywordtype">int</span>) view[2], (<span class="keywordtype">int</span>) view[3]);</div>
<div class="line"><a name="l00546"></a><span class="lineno">  546</span>&#160;    <span class="keywordflow">for</span> (<span class="keywordtype">int</span> i = 0; i &lt; view[2] * view[3]; i++) {</div>
<div class="line"><a name="l00547"></a><span class="lineno">  547</span>&#160;        img-&gt;SetRGB(i % view[2], view[3] - i / view[2] - 1,</div>
<div class="line"><a name="l00548"></a><span class="lineno">  548</span>&#160;                ((<span class="keywordtype">unsigned</span> <span class="keywordtype">char</span>*) pixels)[3 * i],</div>
<div class="line"><a name="l00549"></a><span class="lineno">  549</span>&#160;                ((<span class="keywordtype">unsigned</span> <span class="keywordtype">char</span>*) pixels)[3 * i + 1],</div>
<div class="line"><a name="l00550"></a><span class="lineno">  550</span>&#160;                ((<span class="keywordtype">unsigned</span> <span class="keywordtype">char</span>*) pixels)[3 * i + 2]);</div>
<div class="line"><a name="l00551"></a><span class="lineno">  551</span>&#160;    }</div>
<div class="line"><a name="l00552"></a><span class="lineno">  552</span>&#160;    free(pixels);</div>
<div class="line"><a name="l00553"></a><span class="lineno">  553</span>&#160;</div>
<div class="line"><a name="l00554"></a><span class="lineno">  554</span>&#160;    <span class="comment">//Auslesen der Tiefeninformationen aus Opengl</span></div>
<div class="line"><a name="l00555"></a><span class="lineno">  555</span>&#160;    <span class="keywordtype">void</span>* depth_buff = malloc(view[2] * view[3]); <span class="comment">//OpenGL setzt malloc voraus</span></div>
<div class="line"><a name="l00556"></a><span class="lineno">  556</span>&#160;    glReadPixels(0, 0, view[2], view[3], GL_DEPTH_COMPONENT, GL_UNSIGNED_BYTE,</div>
<div class="line"><a name="l00557"></a><span class="lineno">  557</span>&#160;            depth_buff);</div>
<div class="line"><a name="l00558"></a><span class="lineno">  558</span>&#160;</div>
<div class="line"><a name="l00559"></a><span class="lineno">  559</span>&#160;    <span class="comment">//Maskieren aller umbeschriebenen Bereiche im Bild</span></div>
<div class="line"><a name="l00560"></a><span class="lineno">  560</span>&#160;    img-&gt;InitAlpha();</div>
<div class="line"><a name="l00561"></a><span class="lineno">  561</span>&#160;    <span class="keywordflow">for</span> (<span class="keywordtype">int</span> i = 0; i &lt; view[2] * view[3]; i++) {</div>
<div class="line"><a name="l00562"></a><span class="lineno">  562</span>&#160;        <span class="keywordflow">if</span> (((<span class="keywordtype">unsigned</span> <span class="keywordtype">char</span>*) depth_buff)[i] == 255) {</div>
<div class="line"><a name="l00563"></a><span class="lineno">  563</span>&#160;            img-&gt;SetAlpha(i % view[2], view[3] - i / view[2] - 1, 0);</div>
<div class="line"><a name="l00564"></a><span class="lineno">  564</span>&#160;        }</div>
<div class="line"><a name="l00565"></a><span class="lineno">  565</span>&#160;    }</div>
<div class="line"><a name="l00566"></a><span class="lineno">  566</span>&#160;</div>
<div class="line"><a name="l00567"></a><span class="lineno">  567</span>&#160;    free(depth_buff);</div>
<div class="line"><a name="l00568"></a><span class="lineno">  568</span>&#160;</div>
<div class="line"><a name="l00569"></a><span class="lineno">  569</span>&#160;    <span class="keywordflow">return</span> img;</div>
<div class="line"><a name="l00570"></a><span class="lineno">  570</span>&#160;}</div>
<div class="line"><a name="l00571"></a><span class="lineno">  571</span>&#160;</div>
<div class="line"><a name="l00576"></a><span class="lineno"><a class="code" href="Renderer_8cpp.xhtml#a608a02845726b8844beac12e5154c500">  576</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="Renderer_8cpp.xhtml#a608a02845726b8844beac12e5154c500" title="Visualisiert Informationen über eine 2D-Temperaturverteilung. ">drawCutRenderInfo</a>(<a class="code" href="structUtils_1_1CutRender__info.xhtml" title="Daten zur Darstellung einer 2D-Temperaturverteilungs-Ebene. ">CutRender_info</a>* info) {</div>
<div class="line"><a name="l00577"></a><span class="lineno">  577</span>&#160;</div>
<div class="line"><a name="l00578"></a><span class="lineno">  578</span>&#160;    <span class="comment">//Die Visualisierung soll nicht verdeckt weden</span></div>
<div class="line"><a name="l00579"></a><span class="lineno">  579</span>&#160;    glDepthFunc(GL_ALWAYS);</div>
<div class="line"><a name="l00580"></a><span class="lineno">  580</span>&#160;    <span class="comment">//Blending für das die Ebene definierende Dreieck</span></div>
<div class="line"><a name="l00581"></a><span class="lineno">  581</span>&#160;    glBlendFunc(GL_SRC_ALPHA, GL_ONE_MINUS_SRC_ALPHA);</div>
<div class="line"><a name="l00582"></a><span class="lineno">  582</span>&#160;    glEnable(GL_BLEND);</div>
<div class="line"><a name="l00583"></a><span class="lineno">  583</span>&#160;</div>
<div class="line"><a name="l00584"></a><span class="lineno">  584</span>&#160;    glDisable(GL_LIGHTING);</div>
<div class="line"><a name="l00585"></a><span class="lineno">  585</span>&#160;</div>
<div class="line"><a name="l00586"></a><span class="lineno">  586</span>&#160;    <span class="comment">//zeichnen des die Ebene definierenden Dreiecks</span></div>
<div class="line"><a name="l00587"></a><span class="lineno">  587</span>&#160;    <a class="code" href="classTriangle.xhtml" title="Ein durch 3 Ortsvektoren beschriebenes Dreieck. ">Triangle</a>* tri = info-&gt;<a class="code" href="structUtils_1_1CutRender__info.xhtml#a2998343c733073b317fdd04bd341ce1f" title="Das die Ebene beschreibende Dreieck. ">tri</a>;</div>
<div class="line"><a name="l00588"></a><span class="lineno">  588</span>&#160;    glColor4f(.5, 0, 0, .5);</div>
<div class="line"><a name="l00589"></a><span class="lineno">  589</span>&#160;    glBegin(GL_TRIANGLES);</div>
<div class="line"><a name="l00590"></a><span class="lineno">  590</span>&#160;        <a class="code" href="classVector3D.xhtml" title="3D-Vektorklasse mit nützlichen Operationen. ">Vector3D</a>* nor = tri-&gt;<a class="code" href="classTriangle.xhtml#a3c72b19f316fa9ffb0a2f206e3558790" title="Gibt die Normale des Dreiecks zurück. ">getNormal</a>();</div>
<div class="line"><a name="l00591"></a><span class="lineno">  591</span>&#160;        glNormal3dv(nor-&gt;<a class="code" href="classVector3D.xhtml#a89aeff2092d6a954cd449aca97c59197" title="Gibt eine Referenz auf die Vektorelemente zurück (Vor allem zur Übergabe an OpenGL verwendet)...">getXYZ</a>());</div>
<div class="line"><a name="l00592"></a><span class="lineno">  592</span>&#160;        glVertex3dv(tri-&gt;<a class="code" href="classTriangle.xhtml#ae054a0eae5dae026c5af69274c5f277e" title="Gibt eine Referenz auf den Ortsvektor zum ersten Punkt des Dreiecks zurück. ">getV1</a>()-&gt;<a class="code" href="classVector3D.xhtml#a89aeff2092d6a954cd449aca97c59197" title="Gibt eine Referenz auf die Vektorelemente zurück (Vor allem zur Übergabe an OpenGL verwendet)...">getXYZ</a>());</div>
<div class="line"><a name="l00593"></a><span class="lineno">  593</span>&#160;        glVertex3dv(tri-&gt;<a class="code" href="classTriangle.xhtml#a6de5f8560482f4130bdbb96b25aa1b58" title="Gibt eine Referenz auf den Ortsvektor zum zweiten Punkt des Dreiecks zurück. ">getV2</a>()-&gt;<a class="code" href="classVector3D.xhtml#a89aeff2092d6a954cd449aca97c59197" title="Gibt eine Referenz auf die Vektorelemente zurück (Vor allem zur Übergabe an OpenGL verwendet)...">getXYZ</a>());</div>
<div class="line"><a name="l00594"></a><span class="lineno">  594</span>&#160;        glVertex3dv(tri-&gt;<a class="code" href="classTriangle.xhtml#a792a627dc42adad87c0b30e16a6b5824" title="Gibt eine Referenz auf den Ortsvektor zum dritten Punkt des Dreiecks zurück. ">getV3</a>()-&gt;<a class="code" href="classVector3D.xhtml#a89aeff2092d6a954cd449aca97c59197" title="Gibt eine Referenz auf die Vektorelemente zurück (Vor allem zur Übergabe an OpenGL verwendet)...">getXYZ</a>());</div>
<div class="line"><a name="l00595"></a><span class="lineno">  595</span>&#160;    glEnd();</div>
<div class="line"><a name="l00596"></a><span class="lineno">  596</span>&#160;    glDisable(GL_BLEND);</div>
<div class="line"><a name="l00597"></a><span class="lineno">  597</span>&#160;</div>
<div class="line"><a name="l00598"></a><span class="lineno">  598</span>&#160;    <span class="comment">//Vektoren zur Visualisierung der X- und Y-Achse der Ebene</span></div>
<div class="line"><a name="l00599"></a><span class="lineno">  599</span>&#160;    <a class="code" href="classVector3D.xhtml" title="3D-Vektorklasse mit nützlichen Operationen. ">Vector3D</a>* xvec = tri-&gt;<a class="code" href="classTriangle.xhtml#a6de5f8560482f4130bdbb96b25aa1b58" title="Gibt eine Referenz auf den Ortsvektor zum zweiten Punkt des Dreiecks zurück. ">getV2</a>()-&gt;<a class="code" href="classVector3D.xhtml#a46dd0d9a849809a3857783102959e788" title="Gibt eine Kopie des Vektors zurück. ">copy</a>();</div>
<div class="line"><a name="l00600"></a><span class="lineno">  600</span>&#160;    xvec-&gt;<a class="code" href="classVector3D.xhtml#a02364a41693ac080f5adadd776df74b4" title="Subtrahiert einen Vektor von diesem Vektor. ">sub</a>(tri-&gt;<a class="code" href="classTriangle.xhtml#ae054a0eae5dae026c5af69274c5f277e" title="Gibt eine Referenz auf den Ortsvektor zum ersten Punkt des Dreiecks zurück. ">getV1</a>());</div>
<div class="line"><a name="l00601"></a><span class="lineno">  601</span>&#160;    <a class="code" href="classVector3D.xhtml" title="3D-Vektorklasse mit nützlichen Operationen. ">Vector3D</a>* yvec = nor-&gt;<a class="code" href="classVector3D.xhtml#a482cd77ce44ea7dd71fd7a43cb7b1cf5" title="Gibt das Kreuzprodukt mit einem anderen Vektor zurück. ">crossProduct</a>(xvec);</div>
<div class="line"><a name="l00602"></a><span class="lineno">  602</span>&#160;    xvec-&gt;<a class="code" href="classVector3D.xhtml#abfb12ecb9c9beb88e095cc4a1a512d3c" title="Normalisiert den Vektor. ">normalize</a>();</div>
<div class="line"><a name="l00603"></a><span class="lineno">  603</span>&#160;    yvec-&gt;<a class="code" href="classVector3D.xhtml#abfb12ecb9c9beb88e095cc4a1a512d3c" title="Normalisiert den Vektor. ">normalize</a>();</div>
<div class="line"><a name="l00604"></a><span class="lineno">  604</span>&#160;    xvec-&gt;<a class="code" href="classVector3D.xhtml#a3dec11494c99de7370e3877054c3ef13" title="Multipliziert den Vektor mit einem Skalar. ">mult</a>(</div>
<div class="line"><a name="l00605"></a><span class="lineno">  605</span>&#160;            info-&gt;<a class="code" href="structUtils_1_1CutRender__info.xhtml#ac7a1e2c64129630affaf208808a190eb" title="Breite der Darstellung der Temperaturverteilung. ">img_width</a> / 2</div>
<div class="line"><a name="l00606"></a><span class="lineno">  606</span>&#160;                    * info-&gt;<a class="code" href="structUtils_1_1CutRender__info.xhtml#aca49d9537a774906b88f3fd7059d2dcb" title="Maßstab der Darstellung der Temperaturverteilung in . ">mmperpixel</a> / 1000.);</div>
<div class="line"><a name="l00607"></a><span class="lineno">  607</span>&#160;    yvec-&gt;<a class="code" href="classVector3D.xhtml#a3dec11494c99de7370e3877054c3ef13" title="Multipliziert den Vektor mit einem Skalar. ">mult</a>(</div>
<div class="line"><a name="l00608"></a><span class="lineno">  608</span>&#160;            info-&gt;<a class="code" href="structUtils_1_1CutRender__info.xhtml#abac1c3e4edb7183017ecfa7b69c40d25" title="Höhe der Darstellung der Temperaturverteilung. ">img_height</a> / 2</div>
<div class="line"><a name="l00609"></a><span class="lineno">  609</span>&#160;                    * info-&gt;<a class="code" href="structUtils_1_1CutRender__info.xhtml#aca49d9537a774906b88f3fd7059d2dcb" title="Maßstab der Darstellung der Temperaturverteilung in . ">mmperpixel</a> / 1000.);</div>
<div class="line"><a name="l00610"></a><span class="lineno">  610</span>&#160;</div>
<div class="line"><a name="l00611"></a><span class="lineno">  611</span>&#160;    <span class="comment">//Zeichnen der Achsen als Pfeile</span></div>
<div class="line"><a name="l00612"></a><span class="lineno">  612</span>&#160;    glColor3f(1, 0, 0);</div>
<div class="line"><a name="l00613"></a><span class="lineno">  613</span>&#160;    <a class="code" href="Renderer_8cpp.xhtml#a4225af4db7b633515f133a4f40c72b33" title="Zeichnet einen Vektor als Pfeil. ">drawVector</a>(tri-&gt;<a class="code" href="classTriangle.xhtml#ae054a0eae5dae026c5af69274c5f277e" title="Gibt eine Referenz auf den Ortsvektor zum ersten Punkt des Dreiecks zurück. ">getV1</a>(), xvec);</div>
<div class="line"><a name="l00614"></a><span class="lineno">  614</span>&#160;    glColor3f(0, 1, 0);</div>
<div class="line"><a name="l00615"></a><span class="lineno">  615</span>&#160;    <a class="code" href="Renderer_8cpp.xhtml#a4225af4db7b633515f133a4f40c72b33" title="Zeichnet einen Vektor als Pfeil. ">drawVector</a>(tri-&gt;<a class="code" href="classTriangle.xhtml#ae054a0eae5dae026c5af69274c5f277e" title="Gibt eine Referenz auf den Ortsvektor zum ersten Punkt des Dreiecks zurück. ">getV1</a>(), yvec);</div>
<div class="line"><a name="l00616"></a><span class="lineno">  616</span>&#160;</div>
<div class="line"><a name="l00617"></a><span class="lineno">  617</span>&#160;    <span class="comment">//Zeichnen des Rahmens für den dargestellten Bereich</span></div>
<div class="line"><a name="l00618"></a><span class="lineno">  618</span>&#160;    glColor4f(0, 0, 0, 1);</div>
<div class="line"><a name="l00619"></a><span class="lineno">  619</span>&#160;    <a class="code" href="classVector3D.xhtml" title="3D-Vektorklasse mit nützlichen Operationen. ">Vector3D</a>* tl = tri-&gt;<a class="code" href="classTriangle.xhtml#ae054a0eae5dae026c5af69274c5f277e" title="Gibt eine Referenz auf den Ortsvektor zum ersten Punkt des Dreiecks zurück. ">getV1</a>()-&gt;<a class="code" href="classVector3D.xhtml#a46dd0d9a849809a3857783102959e788" title="Gibt eine Kopie des Vektors zurück. ">copy</a>();</div>
<div class="line"><a name="l00620"></a><span class="lineno">  620</span>&#160;    tl-&gt;<a class="code" href="classVector3D.xhtml#a02364a41693ac080f5adadd776df74b4" title="Subtrahiert einen Vektor von diesem Vektor. ">sub</a>(xvec);</div>
<div class="line"><a name="l00621"></a><span class="lineno">  621</span>&#160;    tl-&gt;<a class="code" href="classVector3D.xhtml#a0d14ff1f789254ff90adc22628eb8347" title="Addiert einen Vektor zu diesem Vektor. ">add</a>(yvec);</div>
<div class="line"><a name="l00622"></a><span class="lineno">  622</span>&#160;    <a class="code" href="classVector3D.xhtml" title="3D-Vektorklasse mit nützlichen Operationen. ">Vector3D</a>* tr = tri-&gt;<a class="code" href="classTriangle.xhtml#ae054a0eae5dae026c5af69274c5f277e" title="Gibt eine Referenz auf den Ortsvektor zum ersten Punkt des Dreiecks zurück. ">getV1</a>()-&gt;<a class="code" href="classVector3D.xhtml#a46dd0d9a849809a3857783102959e788" title="Gibt eine Kopie des Vektors zurück. ">copy</a>();</div>
<div class="line"><a name="l00623"></a><span class="lineno">  623</span>&#160;    tr-&gt;<a class="code" href="classVector3D.xhtml#a0d14ff1f789254ff90adc22628eb8347" title="Addiert einen Vektor zu diesem Vektor. ">add</a>(xvec);</div>
<div class="line"><a name="l00624"></a><span class="lineno">  624</span>&#160;    tr-&gt;<a class="code" href="classVector3D.xhtml#a0d14ff1f789254ff90adc22628eb8347" title="Addiert einen Vektor zu diesem Vektor. ">add</a>(yvec);</div>
<div class="line"><a name="l00625"></a><span class="lineno">  625</span>&#160;    <a class="code" href="classVector3D.xhtml" title="3D-Vektorklasse mit nützlichen Operationen. ">Vector3D</a>* bl = tri-&gt;<a class="code" href="classTriangle.xhtml#ae054a0eae5dae026c5af69274c5f277e" title="Gibt eine Referenz auf den Ortsvektor zum ersten Punkt des Dreiecks zurück. ">getV1</a>()-&gt;<a class="code" href="classVector3D.xhtml#a46dd0d9a849809a3857783102959e788" title="Gibt eine Kopie des Vektors zurück. ">copy</a>();</div>
<div class="line"><a name="l00626"></a><span class="lineno">  626</span>&#160;    bl-&gt;<a class="code" href="classVector3D.xhtml#a02364a41693ac080f5adadd776df74b4" title="Subtrahiert einen Vektor von diesem Vektor. ">sub</a>(xvec);</div>
<div class="line"><a name="l00627"></a><span class="lineno">  627</span>&#160;    bl-&gt;<a class="code" href="classVector3D.xhtml#a02364a41693ac080f5adadd776df74b4" title="Subtrahiert einen Vektor von diesem Vektor. ">sub</a>(yvec);</div>
<div class="line"><a name="l00628"></a><span class="lineno">  628</span>&#160;    <a class="code" href="classVector3D.xhtml" title="3D-Vektorklasse mit nützlichen Operationen. ">Vector3D</a>* br = tri-&gt;<a class="code" href="classTriangle.xhtml#ae054a0eae5dae026c5af69274c5f277e" title="Gibt eine Referenz auf den Ortsvektor zum ersten Punkt des Dreiecks zurück. ">getV1</a>()-&gt;<a class="code" href="classVector3D.xhtml#a46dd0d9a849809a3857783102959e788" title="Gibt eine Kopie des Vektors zurück. ">copy</a>();</div>
<div class="line"><a name="l00629"></a><span class="lineno">  629</span>&#160;    br-&gt;<a class="code" href="classVector3D.xhtml#a0d14ff1f789254ff90adc22628eb8347" title="Addiert einen Vektor zu diesem Vektor. ">add</a>(xvec);</div>
<div class="line"><a name="l00630"></a><span class="lineno">  630</span>&#160;    br-&gt;<a class="code" href="classVector3D.xhtml#a02364a41693ac080f5adadd776df74b4" title="Subtrahiert einen Vektor von diesem Vektor. ">sub</a>(yvec);</div>
<div class="line"><a name="l00631"></a><span class="lineno">  631</span>&#160;</div>
<div class="line"><a name="l00632"></a><span class="lineno">  632</span>&#160;    glBegin(GL_LINES);</div>
<div class="line"><a name="l00633"></a><span class="lineno">  633</span>&#160;        glVertex3dv(tl-&gt;<a class="code" href="classVector3D.xhtml#a89aeff2092d6a954cd449aca97c59197" title="Gibt eine Referenz auf die Vektorelemente zurück (Vor allem zur Übergabe an OpenGL verwendet)...">getXYZ</a>());</div>
<div class="line"><a name="l00634"></a><span class="lineno">  634</span>&#160;        glVertex3dv(tr-&gt;<a class="code" href="classVector3D.xhtml#a89aeff2092d6a954cd449aca97c59197" title="Gibt eine Referenz auf die Vektorelemente zurück (Vor allem zur Übergabe an OpenGL verwendet)...">getXYZ</a>());</div>
<div class="line"><a name="l00635"></a><span class="lineno">  635</span>&#160;</div>
<div class="line"><a name="l00636"></a><span class="lineno">  636</span>&#160;        glVertex3dv(tl-&gt;<a class="code" href="classVector3D.xhtml#a89aeff2092d6a954cd449aca97c59197" title="Gibt eine Referenz auf die Vektorelemente zurück (Vor allem zur Übergabe an OpenGL verwendet)...">getXYZ</a>());</div>
<div class="line"><a name="l00637"></a><span class="lineno">  637</span>&#160;        glVertex3dv(bl-&gt;<a class="code" href="classVector3D.xhtml#a89aeff2092d6a954cd449aca97c59197" title="Gibt eine Referenz auf die Vektorelemente zurück (Vor allem zur Übergabe an OpenGL verwendet)...">getXYZ</a>());</div>
<div class="line"><a name="l00638"></a><span class="lineno">  638</span>&#160;</div>
<div class="line"><a name="l00639"></a><span class="lineno">  639</span>&#160;        glVertex3dv(br-&gt;<a class="code" href="classVector3D.xhtml#a89aeff2092d6a954cd449aca97c59197" title="Gibt eine Referenz auf die Vektorelemente zurück (Vor allem zur Übergabe an OpenGL verwendet)...">getXYZ</a>());</div>
<div class="line"><a name="l00640"></a><span class="lineno">  640</span>&#160;        glVertex3dv(tr-&gt;<a class="code" href="classVector3D.xhtml#a89aeff2092d6a954cd449aca97c59197" title="Gibt eine Referenz auf die Vektorelemente zurück (Vor allem zur Übergabe an OpenGL verwendet)...">getXYZ</a>());</div>
<div class="line"><a name="l00641"></a><span class="lineno">  641</span>&#160;</div>
<div class="line"><a name="l00642"></a><span class="lineno">  642</span>&#160;        glVertex3dv(br-&gt;<a class="code" href="classVector3D.xhtml#a89aeff2092d6a954cd449aca97c59197" title="Gibt eine Referenz auf die Vektorelemente zurück (Vor allem zur Übergabe an OpenGL verwendet)...">getXYZ</a>());</div>
<div class="line"><a name="l00643"></a><span class="lineno">  643</span>&#160;        glVertex3dv(bl-&gt;<a class="code" href="classVector3D.xhtml#a89aeff2092d6a954cd449aca97c59197" title="Gibt eine Referenz auf die Vektorelemente zurück (Vor allem zur Übergabe an OpenGL verwendet)...">getXYZ</a>());</div>
<div class="line"><a name="l00644"></a><span class="lineno">  644</span>&#160;    glEnd();</div>
<div class="line"><a name="l00645"></a><span class="lineno">  645</span>&#160;</div>
<div class="line"><a name="l00646"></a><span class="lineno">  646</span>&#160;    <span class="keyword">delete</span> tl;</div>
<div class="line"><a name="l00647"></a><span class="lineno">  647</span>&#160;    <span class="keyword">delete</span> tr;</div>
<div class="line"><a name="l00648"></a><span class="lineno">  648</span>&#160;    <span class="keyword">delete</span> bl;</div>
<div class="line"><a name="l00649"></a><span class="lineno">  649</span>&#160;    <span class="keyword">delete</span> br;</div>
<div class="line"><a name="l00650"></a><span class="lineno">  650</span>&#160;    <span class="keyword">delete</span> nor;</div>
<div class="line"><a name="l00651"></a><span class="lineno">  651</span>&#160;    <span class="keyword">delete</span> xvec;</div>
<div class="line"><a name="l00652"></a><span class="lineno">  652</span>&#160;    <span class="keyword">delete</span> yvec;</div>
<div class="line"><a name="l00653"></a><span class="lineno">  653</span>&#160;</div>
<div class="line"><a name="l00654"></a><span class="lineno">  654</span>&#160;    <span class="comment">//normaler Tiefentest</span></div>
<div class="line"><a name="l00655"></a><span class="lineno">  655</span>&#160;    glDepthFunc(GL_LESS);</div>
<div class="line"><a name="l00656"></a><span class="lineno">  656</span>&#160;}</div>
<div class="line"><a name="l00657"></a><span class="lineno"><a class="code" href="classRenderer.xhtml#af7e5f8f68742f198e315fb4683a605a4">  657</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="classRenderer.xhtml#af7e5f8f68742f198e315fb4683a605a4" title="Zeichnet das Objekt (Attribut object). ">Renderer::render</a>() {</div>
<div class="line"><a name="l00658"></a><span class="lineno">  658</span>&#160;</div>
<div class="line"><a name="l00659"></a><span class="lineno">  659</span>&#160;    <span class="comment">//Löschen der Farb- und Tiefeninformationen</span></div>
<div class="line"><a name="l00660"></a><span class="lineno">  660</span>&#160;    glClear(GL_COLOR_BUFFER_BIT | GL_DEPTH_BUFFER_BIT | GL_STENCIL_BUFFER_BIT);</div>
<div class="line"><a name="l00661"></a><span class="lineno">  661</span>&#160;    <span class="comment">//Transformieren der Kamera</span></div>
<div class="line"><a name="l00662"></a><span class="lineno">  662</span>&#160;    glLoadIdentity();</div>
<div class="line"><a name="l00663"></a><span class="lineno">  663</span>&#160;    glTranslatef(0, 0, -viewport.zoom * viewport.zoom);</div>
<div class="line"><a name="l00664"></a><span class="lineno">  664</span>&#160;    glRotatef(viewport.rotationY, 1.0, 0.0, 0.0);</div>
<div class="line"><a name="l00665"></a><span class="lineno">  665</span>&#160;    glRotatef(viewport.rotationX, 0.0, 1.0, 0.0);</div>
<div class="line"><a name="l00666"></a><span class="lineno">  666</span>&#160;    glTranslatef(viewport.cameraPosition-&gt;getX(),</div>
<div class="line"><a name="l00667"></a><span class="lineno">  667</span>&#160;            viewport.cameraPosition-&gt;getY(), viewport.cameraPosition-&gt;getZ());</div>
<div class="line"><a name="l00668"></a><span class="lineno">  668</span>&#160;</div>
<div class="line"><a name="l00669"></a><span class="lineno">  669</span>&#160;    <span class="comment">//zeichnen der Orientierungslinien</span></div>
<div class="line"><a name="l00670"></a><span class="lineno">  670</span>&#160;    glDisable(GL_LIGHTING);</div>
<div class="line"><a name="l00671"></a><span class="lineno">  671</span>&#160;    <a class="code" href="Renderer_8cpp.xhtml#ac35d259852428046b123c635864e2197" title="Zeichnet markante Linien zum leichteren Erfassen des Koordinatensystems. ">renderGrid</a>();</div>
<div class="line"><a name="l00672"></a><span class="lineno">  672</span>&#160;</div>
<div class="line"><a name="l00673"></a><span class="lineno">  673</span>&#160;    <span class="comment">//Objektskalierung, Licht</span></div>
<div class="line"><a name="l00674"></a><span class="lineno">  674</span>&#160;    glScalef(viewport.scale, viewport.scale, viewport.scale);</div>
<div class="line"><a name="l00675"></a><span class="lineno">  675</span>&#160;    glEnable(GL_DEPTH_TEST);</div>
<div class="line"><a name="l00676"></a><span class="lineno">  676</span>&#160;    glEnable(GL_LIGHTING);</div>
<div class="line"><a name="l00677"></a><span class="lineno">  677</span>&#160;    glEnable(GL_LIGHT0);</div>
<div class="line"><a name="l00678"></a><span class="lineno">  678</span>&#160;    glEnable(GL_COLOR_MATERIAL);</div>
<div class="line"><a name="l00679"></a><span class="lineno">  679</span>&#160;    GLfloat DiffuseLight[] = { 1.0, 1.0, 1.0, 1.0 };</div>
<div class="line"><a name="l00680"></a><span class="lineno">  680</span>&#160;    GLfloat AmbientLight[] = { .1, .1, .1 };</div>
<div class="line"><a name="l00681"></a><span class="lineno">  681</span>&#160;    GLfloat LightPosition[] = { -1, 1, 1, 0 };</div>
<div class="line"><a name="l00682"></a><span class="lineno">  682</span>&#160;    glLightfv(GL_LIGHT0, GL_POSITION, LightPosition);</div>
<div class="line"><a name="l00683"></a><span class="lineno">  683</span>&#160;    glLightfv(GL_LIGHT0, GL_DIFFUSE, DiffuseLight);</div>
<div class="line"><a name="l00684"></a><span class="lineno">  684</span>&#160;    glLightfv(GL_LIGHT0, GL_AMBIENT, AmbientLight);</div>
<div class="line"><a name="l00685"></a><span class="lineno">  685</span>&#160;</div>
<div class="line"><a name="l00686"></a><span class="lineno">  686</span>&#160;    <span class="comment">//Ist die Geometrie auf der Grafikkarte gespeichert?</span></div>
<div class="line"><a name="l00687"></a><span class="lineno">  687</span>&#160;    <span class="keywordflow">if</span> (displayList &gt; -1) {</div>
<div class="line"><a name="l00688"></a><span class="lineno">  688</span>&#160;        <span class="comment">//zeichnen der Objektgeometrie</span></div>
<div class="line"><a name="l00689"></a><span class="lineno">  689</span>&#160;        glCallList(displayList);</div>
<div class="line"><a name="l00690"></a><span class="lineno">  690</span>&#160;    }</div>
<div class="line"><a name="l00691"></a><span class="lineno">  691</span>&#160;</div>
<div class="line"><a name="l00692"></a><span class="lineno">  692</span>&#160;    <span class="comment">//Sind Visualisierungsinformationen zur 2D-Temperaturverteilung verknüpft?</span></div>
<div class="line"><a name="l00693"></a><span class="lineno">  693</span>&#160;    <span class="keywordflow">if</span> (cut_visualisation_info != NULL) {</div>
<div class="line"><a name="l00694"></a><span class="lineno">  694</span>&#160;        <span class="comment">//zeichnen der Visualisierungsinformationen zur 2D-Temperaturverteilung</span></div>
<div class="line"><a name="l00695"></a><span class="lineno">  695</span>&#160;        <a class="code" href="Renderer_8cpp.xhtml#a608a02845726b8844beac12e5154c500" title="Visualisiert Informationen über eine 2D-Temperaturverteilung. ">drawCutRenderInfo</a>(cut_visualisation_info);</div>
<div class="line"><a name="l00696"></a><span class="lineno">  696</span>&#160;    }</div>
<div class="line"><a name="l00697"></a><span class="lineno">  697</span>&#160;</div>
<div class="line"><a name="l00698"></a><span class="lineno">  698</span>&#160;}</div>
<div class="line"><a name="l00699"></a><span class="lineno">  699</span>&#160;</div>
<div class="line"><a name="l00700"></a><span class="lineno"><a class="code" href="classRenderer.xhtml#afeee408862d5bd6255a6882d47e6d5cd">  700</a></span>&#160;<a class="code" href="classRenderer.xhtml#afeee408862d5bd6255a6882d47e6d5cd" title="Der Destruktor. ">Renderer::~Renderer</a>() {</div>
<div class="line"><a name="l00701"></a><span class="lineno">  701</span>&#160;    <span class="comment">//löschen der Geometrie von der Grafikkarte</span></div>
<div class="line"><a name="l00702"></a><span class="lineno">  702</span>&#160;    glDeleteLists(displayList, 1);</div>
<div class="line"><a name="l00703"></a><span class="lineno">  703</span>&#160;}</div>
<div class="line"><a name="l00704"></a><span class="lineno">  704</span>&#160;</div>
</div><!-- fragment --></div><!-- contents -->
<!-- start footer part -->
<hr class="footer"/><address class="footer"><small>
Erzeugt am Son Apr 13 2014 12:33:56 für Simple Analyzer von &#160;<a href="http://www.doxygen.org/index.html">
<img class="footer" src="doxygen.png" alt="doxygen"/>
</a> 1.8.4
</small></address>
</body>
</html>
