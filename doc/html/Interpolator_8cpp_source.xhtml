<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.6"/>
<title>Simple Analyzer: /daten/Projekte/eclipse_workspace/simpleanalyzer-gui/src/libraries/interpolate/Interpolator.cpp Quellcode</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/javascript">
  $(document).ready(function() { searchBox.OnSelectItem(0); });
</script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="doc_icon.png"/></td>
  <td style="padding-left: 0.5em;">
   <div id="projectname">Simple Analyzer
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Erzeugt von Doxygen 1.8.6 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Suchen');
</script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.xhtml"><span>Hauptseite</span></a></li>
      <li><a href="pages.xhtml"><span>Zusätzliche&#160;Informationen</span></a></li>
      <li><a href="namespaces.xhtml"><span>Namensbereiche</span></a></li>
      <li><a href="annotated.xhtml"><span>Klassen</span></a></li>
      <li class="current"><a href="files.xhtml"><span>Dateien</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Suchen" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="files.xhtml"><span>Auflistung&#160;der&#160;Dateien</span></a></li>
      <li><a href="globals.xhtml"><span>Datei-Elemente</span></a></li>
    </ul>
  </div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
<a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(0)"><span class="SelectionMark">&#160;</span>Alle</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(1)"><span class="SelectionMark">&#160;</span>Klassen</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(2)"><span class="SelectionMark">&#160;</span>Namensbereiche</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(3)"><span class="SelectionMark">&#160;</span>Dateien</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(4)"><span class="SelectionMark">&#160;</span>Funktionen</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(5)"><span class="SelectionMark">&#160;</span>Variablen</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(6)"><span class="SelectionMark">&#160;</span>Aufzählungen</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(7)"><span class="SelectionMark">&#160;</span>Aufzählungswerte</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(8)"><span class="SelectionMark">&#160;</span>Freundbeziehungen</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(9)"><span class="SelectionMark">&#160;</span>Makrodefinitionen</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(10)"><span class="SelectionMark">&#160;</span>Seiten</a></div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="dir_c77ee61374efdb50c23b8fd1bc609a29.xhtml">simpleanalyzer-gui</a></li><li class="navelem"><a class="el" href="dir_fc69cc80a9959f5f4d9fc5f3e2f537ca.xhtml">src</a></li><li class="navelem"><a class="el" href="dir_3ae5ff8f903e04726d22262ee65ea878.xhtml">libraries</a></li><li class="navelem"><a class="el" href="dir_f4a64d8578dd6594bab13e55fe110134.xhtml">interpolate</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="headertitle">
<div class="title">Interpolator.cpp</div>  </div>
</div><!--header-->
<div class="contents">
<a href="Interpolator_8cpp.xhtml">gehe zur Dokumentation dieser Datei</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="Interpolator_8h.xhtml">Interpolator.h</a>&quot;</span></div>
<div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="preprocessor">#include  &lt;iostream&gt;</span></div>
<div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="preprocessor">#include &lt;cmath&gt;</span></div>
<div class="line"><a name="l00004"></a><span class="lineno"><a class="line" href="Interpolator_8cpp.xhtml#a598a3330b3c21701223ee0ca14316eca">    4</a></span>&#160;<span class="preprocessor">#define PI 3.14159265358979323846</span></div>
<div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="preprocessor"></span><span class="keyword">using namespace </span>std;</div>
<div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;</div>
<div class="line"><a name="l00007"></a><span class="lineno"><a class="line" href="Interpolator_8cpp.xhtml#a73527f20206c906e9f333e0f233de13e">    7</a></span>&#160;<span class="keyword">inline</span> <span class="keywordtype">double</span> <a class="code" href="Interpolator_8cpp.xhtml#a73527f20206c906e9f333e0f233de13e">sqr</a>(<span class="keywordtype">double</span> v) {</div>
<div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;    <span class="keywordflow">return</span> v * v;</div>
<div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;}</div>
<div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;</div>
<div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;<span class="comment">// Interpolator</span></div>
<div class="line"><a name="l00012"></a><span class="lineno"><a class="line" href="classInterpolator.xhtml#ab8cbb0b13436fc54a4bba03804ae8f8a">   12</a></span>&#160;<a class="code" href="classInterpolator.xhtml#ab8cbb0b13436fc54a4bba03804ae8f8a">Interpolator::Interpolator</a>() {</div>
<div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;    mode = LINEAR;</div>
<div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;}</div>
<div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;</div>
<div class="line"><a name="l00016"></a><span class="lineno"><a class="line" href="classInterpolator.xhtml#a2f9927fc580de7d2f94d85e6ca3ee3e3">   16</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="classInterpolator.xhtml#a2f9927fc580de7d2f94d85e6ca3ee3e3">Interpolator::setMode</a>(<a class="code" href="classInterpolator.xhtml#adb733b1439a2903feae57fa734ced0c2">InterpolationMode</a> newmode) {</div>
<div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;    mode = newmode;</div>
<div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;}</div>
<div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;</div>
<div class="line"><a name="l00020"></a><span class="lineno"><a class="line" href="Interpolator_8cpp.xhtml#a5d341112a316fd540a42316885c464e0">   20</a></span>&#160;<span class="keyword">inline</span> <span class="keywordtype">double</span> <a class="code" href="Interpolator_8cpp.xhtml#a5d341112a316fd540a42316885c464e0">getSign</a>(<span class="keywordtype">double</span> x) {</div>
<div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;    <span class="keywordflow">return</span> (x &lt; 0) ? -1 : 1;</div>
<div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;}</div>
<div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;</div>
<div class="line"><a name="l00024"></a><span class="lineno"><a class="line" href="classInterpolator.xhtml#ad59ac6ed3822e08a67ac7d1ee88a5bd2">   24</a></span>&#160;<span class="keywordtype">double</span> <a class="code" href="classInterpolator.xhtml#ad59ac6ed3822e08a67ac7d1ee88a5bd2">Interpolator::interpolateTri</a>(<a class="code" href="classTriangle.xhtml">Triangle</a>* tri, <a class="code" href="classVector3D.xhtml">Vector3D</a>* pos,</div>
<div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;        <span class="keywordtype">double</span>* values) {</div>
<div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;</div>
<div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;    <span class="comment">//Test auf pos == Eckpunkt</span></div>
<div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;    <span class="keywordflow">for</span> (<span class="keywordtype">int</span> i = 0; i &lt; 3; i++) {</div>
<div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;        <span class="keywordflow">if</span> (pos-&gt;<a class="code" href="classVector3D.xhtml#ac83e936757114f32bc9d868ea5fabbc2">equals</a>(tri-&gt;<a class="code" href="classTriangle.xhtml#a9320d1ab83c104352bf5e8f2c8274334">getVert</a>(i))) {</div>
<div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;            <span class="keywordflow">return</span> values[i];</div>
<div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;        }</div>
<div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;    }</div>
<div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;</div>
<div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;    <span class="comment">// Kanten und Winkel</span></div>
<div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;    <a class="code" href="classVector3D.xhtml">Vector3D</a>* e1 = tri-&gt;<a class="code" href="classTriangle.xhtml#a6de5f8560482f4130bdbb96b25aa1b58">getV2</a>()-&gt;<a class="code" href="classVector3D.xhtml#a46dd0d9a849809a3857783102959e788">copy</a>();</div>
<div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;    e1-&gt;<a class="code" href="classVector3D.xhtml#a02364a41693ac080f5adadd776df74b4">sub</a>(tri-&gt;<a class="code" href="classTriangle.xhtml#ae054a0eae5dae026c5af69274c5f277e">getV1</a>());</div>
<div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;    <a class="code" href="classVector3D.xhtml">Vector3D</a>* e2 = tri-&gt;<a class="code" href="classTriangle.xhtml#a792a627dc42adad87c0b30e16a6b5824">getV3</a>()-&gt;<a class="code" href="classVector3D.xhtml#a46dd0d9a849809a3857783102959e788">copy</a>();</div>
<div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;    e2-&gt;<a class="code" href="classVector3D.xhtml#a02364a41693ac080f5adadd776df74b4">sub</a>(tri-&gt;<a class="code" href="classTriangle.xhtml#ae054a0eae5dae026c5af69274c5f277e">getV1</a>());</div>
<div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;    <a class="code" href="classVector3D.xhtml">Vector3D</a>* e3 = tri-&gt;<a class="code" href="classTriangle.xhtml#a792a627dc42adad87c0b30e16a6b5824">getV3</a>()-&gt;<a class="code" href="classVector3D.xhtml#a46dd0d9a849809a3857783102959e788">copy</a>();</div>
<div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;    e3-&gt;<a class="code" href="classVector3D.xhtml#a02364a41693ac080f5adadd776df74b4">sub</a>(tri-&gt;<a class="code" href="classTriangle.xhtml#a6de5f8560482f4130bdbb96b25aa1b58">getV2</a>());</div>
<div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;    e3-&gt;<a class="code" href="classVector3D.xhtml#a3dec11494c99de7370e3877054c3ef13">mult</a>(-1);</div>
<div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;    <span class="keywordtype">double</span> alpha = e1-&gt;<a class="code" href="classVector3D.xhtml#a4bf1dcea68296f2f38f3574242933153">getAngleTo</a>(e2);</div>
<div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;    <span class="keywordtype">double</span> beta = e1-&gt;<a class="code" href="classVector3D.xhtml#a4bf1dcea68296f2f38f3574242933153">getAngleTo</a>(e3);</div>
<div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;</div>
<div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;    <span class="comment">/*Dreieck in 2D-Ebene (Bezeichnungen im lokalen Dreieck):</span></div>
<div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;<span class="comment">     * =&gt; Das Dreieck wird so transformiert, dass A auf O(0|0|), Vektor AB auf der X-Achse und C in XY-Ebene liegt.</span></div>
<div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;<span class="comment">     * Dieses Dreieck wird im folgenden als &quot;lokal&quot; bezeichnet:</span></div>
<div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;<span class="comment">     *</span></div>
<div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;<span class="comment">     *                C         CAB = alpha</span></div>
<div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;<span class="comment">     *               /\         ABC = beta</span></div>
<div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;<span class="comment">     *              /  \        P = pos</span></div>
<div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;<span class="comment">     *          e2 /    \ e3    PAB = delta</span></div>
<div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;<span class="comment">     *            /      \      e1..e3 im code nicht lokal, aber Innenwinkel und Längen äquivalent zu lokalen Kanten</span></div>
<div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;<span class="comment">     *           /  .P    \            (da die zwei gleiche Winkel und in allen Verhältnissen der Seiten übereinstimmen).</span></div>
<div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;<span class="comment">     *          /          \</span></div>
<div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;<span class="comment">     *         /------------\</span></div>
<div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;<span class="comment">     *        A     e1       B</span></div>
<div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;<span class="comment">     */</span></div>
<div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;</div>
<div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;    <span class="comment">// Lokales Dreieck</span></div>
<div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;    <a class="code" href="classVector3D.xhtml">Vector3D</a> localV1 = <a class="code" href="classVector3D.xhtml">Vector3D</a>(0, 0, 0);</div>
<div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;    <a class="code" href="classVector3D.xhtml">Vector3D</a> localV2 = <a class="code" href="classVector3D.xhtml">Vector3D</a>(e1-&gt;<a class="code" href="classVector3D.xhtml#a2e3aa1d244483abcb1a8e48e47e79512">getLength</a>(), 0, 0);</div>
<div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;    <a class="code" href="classVector3D.xhtml">Vector3D</a> localV3 = <a class="code" href="classVector3D.xhtml">Vector3D</a>(cos(alpha) * e2-&gt;<a class="code" href="classVector3D.xhtml#a2e3aa1d244483abcb1a8e48e47e79512">getLength</a>(),</div>
<div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;            sin(alpha) * e2-&gt;<a class="code" href="classVector3D.xhtml#a2e3aa1d244483abcb1a8e48e47e79512">getLength</a>(), 0);</div>
<div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;    <a class="code" href="classVector3D.xhtml">Vector3D</a>* v1ToPos = pos-&gt;<a class="code" href="classVector3D.xhtml#a46dd0d9a849809a3857783102959e788">copy</a>();</div>
<div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;    v1ToPos-&gt;<a class="code" href="classVector3D.xhtml#a02364a41693ac080f5adadd776df74b4">sub</a>(tri-&gt;<a class="code" href="classTriangle.xhtml#ae054a0eae5dae026c5af69274c5f277e">getV1</a>());</div>
<div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;    <span class="keywordtype">double</span> delta = e1-&gt;<a class="code" href="classVector3D.xhtml#a4bf1dcea68296f2f38f3574242933153">getAngleTo</a>(v1ToPos);</div>
<div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;    <a class="code" href="classVector3D.xhtml">Vector3D</a> localUp = <a class="code" href="classVector3D.xhtml">Vector3D</a>(0, 1, 0);</div>
<div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;    <span class="keywordtype">int</span> ysign = (localUp.<a class="code" href="classVector3D.xhtml#a0808a8e6004a347d82f9214778b5968f">dotProduct</a>(v1ToPos) &gt; 0) ? 1 : -1;</div>
<div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;    <a class="code" href="classVector3D.xhtml">Vector3D</a> localPos = <a class="code" href="classVector3D.xhtml">Vector3D</a>(cos(delta) * v1ToPos-&gt;getLength(),</div>
<div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;            ysign * sin(delta) * v1ToPos-&gt;getLength(), 0);</div>
<div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;    <a class="code" href="classVector3D.xhtml">Vector3D</a>* v2ToPos = pos-&gt;<a class="code" href="classVector3D.xhtml#a46dd0d9a849809a3857783102959e788">copy</a>();</div>
<div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;    v2ToPos-&gt;<a class="code" href="classVector3D.xhtml#a02364a41693ac080f5adadd776df74b4">sub</a>(tri-&gt;<a class="code" href="classTriangle.xhtml#a6de5f8560482f4130bdbb96b25aa1b58">getV2</a>());</div>
<div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;</div>
<div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;    <span class="comment">// Bilineare Interpolation:</span></div>
<div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;</div>
<div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;    <span class="comment">// Punkte auf Kanten 1 und 3:</span></div>
<div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;    <a class="code" href="classVector3D.xhtml">Vector3D</a> iPointX1 = <a class="code" href="classVector3D.xhtml">Vector3D</a>(localPos.<a class="code" href="classVector3D.xhtml#aa3ffff17b886274a58417dfe4bb4c4a2">getY</a>() / tan(alpha), localPos.<a class="code" href="classVector3D.xhtml#aa3ffff17b886274a58417dfe4bb4c4a2">getY</a>(),</div>
<div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;            0);</div>
<div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;    <a class="code" href="classVector3D.xhtml">Vector3D</a> iPointX2 = <a class="code" href="classVector3D.xhtml">Vector3D</a>(localV2.<a class="code" href="classVector3D.xhtml#aa9eaf29045bf32b95c5c7bcb2b8b68d7">getX</a>() - localPos.<a class="code" href="classVector3D.xhtml#aa3ffff17b886274a58417dfe4bb4c4a2">getY</a>() / tan(beta),</div>
<div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;            localPos.<a class="code" href="classVector3D.xhtml#aa3ffff17b886274a58417dfe4bb4c4a2">getY</a>(), 0);</div>
<div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;    <a class="code" href="classVector3D.xhtml">Vector3D</a>* x2ToV2 = iPointX2.<a class="code" href="classVector3D.xhtml#a46dd0d9a849809a3857783102959e788">copy</a>();</div>
<div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;    x2ToV2-&gt;<a class="code" href="classVector3D.xhtml#a02364a41693ac080f5adadd776df74b4">sub</a>(&amp;localV2);</div>
<div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;    x2ToV2-&gt;mult(1. / x2ToV2-&gt;getX());</div>
<div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;    <span class="comment">// Werte für Punkte:</span></div>
<div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;</div>
<div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;    <span class="keywordtype">double</span> value = 0;</div>
<div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;    <span class="keywordtype">double</span> xVal1 = 0;</div>
<div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;    <span class="keywordtype">double</span> xVal2 = 0;</div>
<div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;</div>
<div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;    <span class="keywordflow">switch</span> (mode) {</div>
<div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;    <span class="keywordflow">case</span> LINEAR: {</div>
<div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;        <span class="comment">// getSign(localPos.y) zeigt Richtung der Strecke auf Dreieckskante e2 (bzw. linearer Funktion)</span></div>
<div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;        <span class="comment">// Länge von iPointX1: auf Kante &quot;gegangene&quot; Strecke x bis Pgesucht.Y == f(x)</span></div>
<div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;        xVal1 = values[0]</div>
<div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;                + (values[2] - values[0]) * <a class="code" href="Interpolator_8cpp.xhtml#a5d341112a316fd540a42316885c464e0">getSign</a>(localPos.<a class="code" href="classVector3D.xhtml#aa3ffff17b886274a58417dfe4bb4c4a2">getY</a>())</div>
<div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;                        * iPointX1.<a class="code" href="classVector3D.xhtml#a2e3aa1d244483abcb1a8e48e47e79512">getLength</a>() / e2-&gt;<a class="code" href="classVector3D.xhtml#a2e3aa1d244483abcb1a8e48e47e79512">getLength</a>();</div>
<div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;        <span class="comment">// analog für Kante e3:</span></div>
<div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;        xVal2 = values[1]</div>
<div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;                + (values[2] - values[1]) * <a class="code" href="Interpolator_8cpp.xhtml#a5d341112a316fd540a42316885c464e0">getSign</a>(localPos.<a class="code" href="classVector3D.xhtml#aa3ffff17b886274a58417dfe4bb4c4a2">getY</a>())</div>
<div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;                        * sqrt(</div>
<div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;                                <a class="code" href="Interpolator_8cpp.xhtml#a73527f20206c906e9f333e0f233de13e">sqr</a>(iPointX2.getX() - localV2.<a class="code" href="classVector3D.xhtml#aa9eaf29045bf32b95c5c7bcb2b8b68d7">getX</a>())</div>
<div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;                                        + <a class="code" href="Interpolator_8cpp.xhtml#a73527f20206c906e9f333e0f233de13e">sqr</a>(localPos.<a class="code" href="classVector3D.xhtml#aa3ffff17b886274a58417dfe4bb4c4a2">getY</a>()))</div>
<div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;                        / e3-&gt;<a class="code" href="classVector3D.xhtml#a2e3aa1d244483abcb1a8e48e47e79512">getLength</a>();</div>
<div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;</div>
<div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;        <span class="comment">// Interpolieren zwischen Punkten auf Kanten 1 und 3</span></div>
<div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;        value = xVal1</div>
<div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;                + (xVal2 - xVal1) * (localPos.<a class="code" href="classVector3D.xhtml#aa9eaf29045bf32b95c5c7bcb2b8b68d7">getX</a>() - iPointX1.<a class="code" href="classVector3D.xhtml#aa9eaf29045bf32b95c5c7bcb2b8b68d7">getX</a>())</div>
<div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;                        / (iPointX2.getX() - iPointX1.<a class="code" href="classVector3D.xhtml#aa9eaf29045bf32b95c5c7bcb2b8b68d7">getX</a>());</div>
<div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;        <span class="keywordflow">break</span>;</div>
<div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;    }</div>
<div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;    <span class="keywordflow">case</span> LOGARITHMIC:</div>
<div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;        <span class="comment">// siehe Linear</span></div>
<div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;        xVal1 = values[0]</div>
<div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;                * exp(</div>
<div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;                        (log(values[2]) - log(values[0]))</div>
<div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;                                * <a class="code" href="Interpolator_8cpp.xhtml#a5d341112a316fd540a42316885c464e0">getSign</a>(localPos.<a class="code" href="classVector3D.xhtml#aa3ffff17b886274a58417dfe4bb4c4a2">getY</a>())</div>
<div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;                                * iPointX1.<a class="code" href="classVector3D.xhtml#a2e3aa1d244483abcb1a8e48e47e79512">getLength</a>() / e2-&gt;<a class="code" href="classVector3D.xhtml#a2e3aa1d244483abcb1a8e48e47e79512">getLength</a>());</div>
<div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;        xVal2 = values[1]</div>
<div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;                * exp(</div>
<div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;                        (log(values[2]) - log(values[1]))</div>
<div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;                                * <a class="code" href="Interpolator_8cpp.xhtml#a5d341112a316fd540a42316885c464e0">getSign</a>(localPos.<a class="code" href="classVector3D.xhtml#aa3ffff17b886274a58417dfe4bb4c4a2">getY</a>())</div>
<div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;                                * sqrt(</div>
<div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;                                        <a class="code" href="Interpolator_8cpp.xhtml#a73527f20206c906e9f333e0f233de13e">sqr</a>(iPointX2.getX() - localV2.<a class="code" href="classVector3D.xhtml#aa9eaf29045bf32b95c5c7bcb2b8b68d7">getX</a>())</div>
<div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;                                                + <a class="code" href="Interpolator_8cpp.xhtml#a73527f20206c906e9f333e0f233de13e">sqr</a>(localPos.<a class="code" href="classVector3D.xhtml#aa3ffff17b886274a58417dfe4bb4c4a2">getY</a>()))</div>
<div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;                                / e3-&gt;<a class="code" href="classVector3D.xhtml#a2e3aa1d244483abcb1a8e48e47e79512">getLength</a>());</div>
<div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;        <span class="comment">// Interpolieren zwischen Punkten auf Kanten 1 und 3</span></div>
<div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;        value = xVal1</div>
<div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;                * exp(</div>
<div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;                        (log(xVal2) - log(xVal1))</div>
<div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;                                * (localPos.<a class="code" href="classVector3D.xhtml#aa9eaf29045bf32b95c5c7bcb2b8b68d7">getX</a>() - iPointX1.<a class="code" href="classVector3D.xhtml#aa9eaf29045bf32b95c5c7bcb2b8b68d7">getX</a>())</div>
<div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;                                / (iPointX2.getX() - iPointX1.<a class="code" href="classVector3D.xhtml#aa9eaf29045bf32b95c5c7bcb2b8b68d7">getX</a>()));</div>
<div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;        <span class="keywordflow">break</span>;</div>
<div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;    <span class="keywordflow">default</span>:</div>
<div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;        cerr &lt;&lt; <span class="stringliteral">&quot;Kein Gültiges Interpolationsverfahren angegeben!&quot;</span> &lt;&lt; endl;</div>
<div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;        <span class="keywordflow">break</span>;</div>
<div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;    }</div>
<div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;</div>
<div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;    <span class="comment">// Speicher freigeben</span></div>
<div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;    <span class="keyword">delete</span> e1;</div>
<div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;    <span class="keyword">delete</span> e2;</div>
<div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;    <span class="keyword">delete</span> e3;</div>
<div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;    <span class="keyword">delete</span> x2ToV2;</div>
<div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;    <span class="keyword">delete</span> v1ToPos;</div>
<div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;    <span class="keyword">delete</span> v2ToPos;</div>
<div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;    <span class="keywordflow">return</span> value;</div>
<div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;}</div>
<div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;</div>
<div class="line"><a name="l00149"></a><span class="lineno"><a class="line" href="classInterpolator.xhtml#a30e714ca6dff9b5745d029f95af1420a">  149</a></span>&#160;<span class="keywordtype">double</span> <a class="code" href="classInterpolator.xhtml#a30e714ca6dff9b5745d029f95af1420a">Interpolator::interpolateTet</a>(<a class="code" href="classTetrahedron.xhtml">Tetrahedron</a>* tet, <a class="code" href="classVector3D.xhtml">Vector3D</a>* pos,</div>
<div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;        <span class="keywordtype">double</span>* values) {</div>
<div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;</div>
<div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;    <span class="comment">//Test auf pos == Eckpunkt</span></div>
<div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160;    <span class="keywordflow">for</span> (<span class="keywordtype">int</span> i = 0; i &lt; 3; i++) {</div>
<div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160;        <span class="keywordflow">if</span> (pos-&gt;<a class="code" href="classVector3D.xhtml#ac83e936757114f32bc9d868ea5fabbc2">equals</a>(tet-&gt;<a class="code" href="classTetrahedron.xhtml#a88afe41ae5991168ad51ba4dbb2e1a6b">getVert</a>(i))) {</div>
<div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160;            <span class="keywordflow">return</span> values[i];</div>
<div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160;        }</div>
<div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160;    }</div>
<div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160;</div>
<div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160;    <a class="code" href="classTriangle.xhtml">Triangle</a> groundTri = <a class="code" href="classTriangle.xhtml">Triangle</a>(tet-&gt;<a class="code" href="classTetrahedron.xhtml#add51e42ab17afbd023d47a436ce24b0d">getV1</a>(), tet-&gt;<a class="code" href="classTetrahedron.xhtml#aa728c967f17e2b8408009b5f2b77a17a">getV2</a>(), tet-&gt;<a class="code" href="classTetrahedron.xhtml#aa539a97f133ea621520121acb2ef4a7e">getV3</a>());</div>
<div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160;</div>
<div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160;    <span class="comment">// Bodendreieck in XY-Ebene legen</span></div>
<div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160;    <a class="code" href="classVector3D.xhtml">Vector3D</a>* e1 = groundTri.<a class="code" href="classTriangle.xhtml#a6de5f8560482f4130bdbb96b25aa1b58">getV2</a>()-&gt;<a class="code" href="classVector3D.xhtml#a46dd0d9a849809a3857783102959e788">copy</a>();</div>
<div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160;    e1-&gt;<a class="code" href="classVector3D.xhtml#a02364a41693ac080f5adadd776df74b4">sub</a>(groundTri.<a class="code" href="classTriangle.xhtml#ae054a0eae5dae026c5af69274c5f277e">getV1</a>());</div>
<div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160;    <a class="code" href="classVector3D.xhtml">Vector3D</a>* e2 = groundTri.<a class="code" href="classTriangle.xhtml#a792a627dc42adad87c0b30e16a6b5824">getV3</a>()-&gt;<a class="code" href="classVector3D.xhtml#a46dd0d9a849809a3857783102959e788">copy</a>();</div>
<div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160;    e2-&gt;<a class="code" href="classVector3D.xhtml#a02364a41693ac080f5adadd776df74b4">sub</a>(groundTri.<a class="code" href="classTriangle.xhtml#ae054a0eae5dae026c5af69274c5f277e">getV1</a>());</div>
<div class="line"><a name="l00166"></a><span class="lineno">  166</span>&#160;    <span class="keywordtype">double</span> alpha = e1-&gt;getAngleTo(e2);</div>
<div class="line"><a name="l00167"></a><span class="lineno">  167</span>&#160;</div>
<div class="line"><a name="l00168"></a><span class="lineno">  168</span>&#160;    <span class="comment">//Kanten von Punkt 4</span></div>
<div class="line"><a name="l00169"></a><span class="lineno">  169</span>&#160;    <a class="code" href="classVector3D.xhtml">Vector3D</a>* gs1 = tet-&gt;<a class="code" href="classTetrahedron.xhtml#a7308b7b73edeba7782dff551a03095bf">getV4</a>()-&gt;<a class="code" href="classVector3D.xhtml#a46dd0d9a849809a3857783102959e788">copy</a>();</div>
<div class="line"><a name="l00170"></a><span class="lineno">  170</span>&#160;    gs1-&gt;<a class="code" href="classVector3D.xhtml#a02364a41693ac080f5adadd776df74b4">sub</a>(tet-&gt;<a class="code" href="classTetrahedron.xhtml#add51e42ab17afbd023d47a436ce24b0d">getV1</a>());</div>
<div class="line"><a name="l00171"></a><span class="lineno">  171</span>&#160;    <a class="code" href="classVector3D.xhtml">Vector3D</a>* up = groundTri.<a class="code" href="classTriangle.xhtml#a3c72b19f316fa9ffb0a2f206e3558790">getNormal</a>();</div>
<div class="line"><a name="l00172"></a><span class="lineno">  172</span>&#160;</div>
<div class="line"><a name="l00173"></a><span class="lineno">  173</span>&#160;    <span class="keywordflow">if</span> (gs1-&gt;<a class="code" href="classVector3D.xhtml#a0808a8e6004a347d82f9214778b5968f">dotProduct</a>(up) &lt; 0) {  <span class="comment">//Normale in Richtung der Tetraederspitze?</span></div>
<div class="line"><a name="l00174"></a><span class="lineno">  174</span>&#160;        up-&gt;<a class="code" href="classVector3D.xhtml#a3dec11494c99de7370e3877054c3ef13">mult</a>(-1);</div>
<div class="line"><a name="l00175"></a><span class="lineno">  175</span>&#160;    }</div>
<div class="line"><a name="l00176"></a><span class="lineno">  176</span>&#160;</div>
<div class="line"><a name="l00177"></a><span class="lineno">  177</span>&#160;    <span class="keywordtype">double</span> delta = gs1-&gt;<a class="code" href="classVector3D.xhtml#a4bf1dcea68296f2f38f3574242933153">getAngleTo</a>(up);  <span class="comment">//Winkel zwischen Grundflächennormale und gs1</span></div>
<div class="line"><a name="l00178"></a><span class="lineno">  178</span>&#160;    <span class="keywordtype">double</span> h = cos(delta) * gs1-&gt;<a class="code" href="classVector3D.xhtml#a2e3aa1d244483abcb1a8e48e47e79512">getLength</a>();</div>
<div class="line"><a name="l00179"></a><span class="lineno">  179</span>&#160;    <a class="code" href="classVector3D.xhtml">Vector3D</a>* v1ToV4InGround = tet-&gt;<a class="code" href="classTetrahedron.xhtml#a7308b7b73edeba7782dff551a03095bf">getV4</a>()-&gt;<a class="code" href="classVector3D.xhtml#a46dd0d9a849809a3857783102959e788">copy</a>();</div>
<div class="line"><a name="l00180"></a><span class="lineno">  180</span>&#160;    <a class="code" href="classVector3D.xhtml">Vector3D</a>* tUp = up-&gt;<a class="code" href="classVector3D.xhtml#a46dd0d9a849809a3857783102959e788">copy</a>();</div>
<div class="line"><a name="l00181"></a><span class="lineno">  181</span>&#160;    tUp-&gt;<a class="code" href="classVector3D.xhtml#a3dec11494c99de7370e3877054c3ef13">mult</a>(h);</div>
<div class="line"><a name="l00182"></a><span class="lineno">  182</span>&#160;    v1ToV4InGround-&gt;<a class="code" href="classVector3D.xhtml#a02364a41693ac080f5adadd776df74b4">sub</a>(tUp);</div>
<div class="line"><a name="l00183"></a><span class="lineno">  183</span>&#160;    v1ToV4InGround-&gt;<a class="code" href="classVector3D.xhtml#a02364a41693ac080f5adadd776df74b4">sub</a>(tet-&gt;<a class="code" href="classTetrahedron.xhtml#add51e42ab17afbd023d47a436ce24b0d">getV1</a>());                      <span class="comment">//relativ zu Vert0</span></div>
<div class="line"><a name="l00184"></a><span class="lineno">  184</span>&#160;    <span class="keywordtype">double</span> beta = e1-&gt;getAngleTo(v1ToV4InGround);</div>
<div class="line"><a name="l00185"></a><span class="lineno">  185</span>&#160;</div>
<div class="line"><a name="l00186"></a><span class="lineno">  186</span>&#160;    <a class="code" href="classVector3D.xhtml">Vector3D</a>* lot = e1-&gt;<a class="code" href="classVector3D.xhtml#a482cd77ce44ea7dd71fd7a43cb7b1cf5">crossProduct</a>(up);   <span class="comment">// Richtung des Lots von V3 auf e1</span></div>
<div class="line"><a name="l00187"></a><span class="lineno">  187</span>&#160;    <span class="keywordflow">if</span> (lot-&gt;<a class="code" href="classVector3D.xhtml#a0808a8e6004a347d82f9214778b5968f">dotProduct</a>(e2) &lt; 0) {</div>
<div class="line"><a name="l00188"></a><span class="lineno">  188</span>&#160;        lot-&gt;<a class="code" href="classVector3D.xhtml#a3dec11494c99de7370e3877054c3ef13">mult</a>(-1);</div>
<div class="line"><a name="l00189"></a><span class="lineno">  189</span>&#160;    }</div>
<div class="line"><a name="l00190"></a><span class="lineno">  190</span>&#160;</div>
<div class="line"><a name="l00191"></a><span class="lineno">  191</span>&#160;    <span class="keywordtype">int</span> sign = (lot-&gt;<a class="code" href="classVector3D.xhtml#a0808a8e6004a347d82f9214778b5968f">dotProduct</a>(v1ToV4InGround) &gt; 0) ? 1 : -1;<span class="comment">//Spitze des Tetraeders über/unter Dreiecksebene</span></div>
<div class="line"><a name="l00192"></a><span class="lineno">  192</span>&#160;    <span class="keywordflow">if</span> (v1ToV4InGround-&gt;<a class="code" href="classVector3D.xhtml#a2e3aa1d244483abcb1a8e48e47e79512">getLength</a>() == 0) {                     <span class="comment">//Spitze über V1</span></div>
<div class="line"><a name="l00193"></a><span class="lineno">  193</span>&#160;        beta = 0;</div>
<div class="line"><a name="l00194"></a><span class="lineno">  194</span>&#160;    }</div>
<div class="line"><a name="l00195"></a><span class="lineno">  195</span>&#160;</div>
<div class="line"><a name="l00196"></a><span class="lineno">  196</span>&#160;    <span class="comment">//Lokaler Tetraeder:</span></div>
<div class="line"><a name="l00197"></a><span class="lineno">  197</span>&#160;    <a class="code" href="classVector3D.xhtml">Vector3D</a>* groundVerts[3];</div>
<div class="line"><a name="l00198"></a><span class="lineno">  198</span>&#160;    groundVerts[0] = <span class="keyword">new</span> <a class="code" href="classVector3D.xhtml">Vector3D</a>(0, 0, 0);</div>
<div class="line"><a name="l00199"></a><span class="lineno">  199</span>&#160;    groundVerts[1] = <span class="keyword">new</span> <a class="code" href="classVector3D.xhtml">Vector3D</a>(</div>
<div class="line"><a name="l00200"></a><span class="lineno">  200</span>&#160;            groundTri.<a class="code" href="classTriangle.xhtml#ae054a0eae5dae026c5af69274c5f277e">getV1</a>()-&gt;<a class="code" href="classVector3D.xhtml#a42deb992ec2f44abfb5824ea4917135c">getDistanceTo</a>(groundTri.<a class="code" href="classTriangle.xhtml#a6de5f8560482f4130bdbb96b25aa1b58">getV2</a>()), 0, 0);</div>
<div class="line"><a name="l00201"></a><span class="lineno">  201</span>&#160;    groundVerts[2] = <span class="keyword">new</span> <a class="code" href="classVector3D.xhtml">Vector3D</a>(cos(alpha) * e2-&gt;<a class="code" href="classVector3D.xhtml#a2e3aa1d244483abcb1a8e48e47e79512">getLength</a>(),</div>
<div class="line"><a name="l00202"></a><span class="lineno">  202</span>&#160;            sin(alpha) * e2-&gt;<a class="code" href="classVector3D.xhtml#a2e3aa1d244483abcb1a8e48e47e79512">getLength</a>(), 0);</div>
<div class="line"><a name="l00203"></a><span class="lineno">  203</span>&#160;    <a class="code" href="classTriangle.xhtml">Triangle</a> localGround = <a class="code" href="classTriangle.xhtml">Triangle</a>(groundVerts[0], groundVerts[1],</div>
<div class="line"><a name="l00204"></a><span class="lineno">  204</span>&#160;            groundVerts[2]);</div>
<div class="line"><a name="l00205"></a><span class="lineno">  205</span>&#160;    <a class="code" href="classVector3D.xhtml">Vector3D</a>* localTip = <span class="keyword">new</span> <a class="code" href="classVector3D.xhtml">Vector3D</a>(cos(beta) * v1ToV4InGround-&gt;<a class="code" href="classVector3D.xhtml#a2e3aa1d244483abcb1a8e48e47e79512">getLength</a>(),</div>
<div class="line"><a name="l00206"></a><span class="lineno">  206</span>&#160;            sign * sin(beta) * v1ToV4InGround-&gt;<a class="code" href="classVector3D.xhtml#a2e3aa1d244483abcb1a8e48e47e79512">getLength</a>(), h);</div>
<div class="line"><a name="l00207"></a><span class="lineno">  207</span>&#160;</div>
<div class="line"><a name="l00208"></a><span class="lineno">  208</span>&#160;    <span class="comment">//Lokale Kanten:</span></div>
<div class="line"><a name="l00209"></a><span class="lineno">  209</span>&#160;    <a class="code" href="classVector3D.xhtml">Vector3D</a>* s1 = localTip-&gt;<a class="code" href="classVector3D.xhtml#a46dd0d9a849809a3857783102959e788">copy</a>();</div>
<div class="line"><a name="l00210"></a><span class="lineno">  210</span>&#160;    <a class="code" href="classVector3D.xhtml">Vector3D</a>* s2 = localTip-&gt;<a class="code" href="classVector3D.xhtml#a46dd0d9a849809a3857783102959e788">copy</a>();</div>
<div class="line"><a name="l00211"></a><span class="lineno">  211</span>&#160;    <a class="code" href="classVector3D.xhtml">Vector3D</a>* s3 = localTip-&gt;<a class="code" href="classVector3D.xhtml#a46dd0d9a849809a3857783102959e788">copy</a>();</div>
<div class="line"><a name="l00212"></a><span class="lineno">  212</span>&#160;    s1-&gt;<a class="code" href="classVector3D.xhtml#a02364a41693ac080f5adadd776df74b4">sub</a>(localGround.getV1());</div>
<div class="line"><a name="l00213"></a><span class="lineno">  213</span>&#160;    s2-&gt;<a class="code" href="classVector3D.xhtml#a02364a41693ac080f5adadd776df74b4">sub</a>(localGround.getV2());</div>
<div class="line"><a name="l00214"></a><span class="lineno">  214</span>&#160;    s3-&gt;<a class="code" href="classVector3D.xhtml#a02364a41693ac080f5adadd776df74b4">sub</a>(localGround.getV3());</div>
<div class="line"><a name="l00215"></a><span class="lineno">  215</span>&#160;</div>
<div class="line"><a name="l00216"></a><span class="lineno">  216</span>&#160;    <span class="comment">// Lokaler Interpolationspunkt</span></div>
<div class="line"><a name="l00217"></a><span class="lineno">  217</span>&#160;    <a class="code" href="classVector3D.xhtml">Vector3D</a>* v1ToPos = pos-&gt;<a class="code" href="classVector3D.xhtml#a46dd0d9a849809a3857783102959e788">copy</a>();</div>
<div class="line"><a name="l00218"></a><span class="lineno">  218</span>&#160;    v1ToPos-&gt;<a class="code" href="classVector3D.xhtml#a02364a41693ac080f5adadd776df74b4">sub</a>(tet-&gt;<a class="code" href="classTetrahedron.xhtml#add51e42ab17afbd023d47a436ce24b0d">getV1</a>());</div>
<div class="line"><a name="l00219"></a><span class="lineno">  219</span>&#160;    <span class="keywordtype">double</span> pAlpha = v1ToPos-&gt;<a class="code" href="classVector3D.xhtml#a4bf1dcea68296f2f38f3574242933153">getAngleTo</a>(up);</div>
<div class="line"><a name="l00220"></a><span class="lineno">  220</span>&#160;</div>
<div class="line"><a name="l00221"></a><span class="lineno">  221</span>&#160;    <span class="keywordtype">double</span> ph = cos(pAlpha) * v1ToPos-&gt;<a class="code" href="classVector3D.xhtml#a2e3aa1d244483abcb1a8e48e47e79512">getLength</a>();</div>
<div class="line"><a name="l00222"></a><span class="lineno">  222</span>&#160;    <a class="code" href="classVector3D.xhtml">Vector3D</a>* posInGround = pos-&gt;<a class="code" href="classVector3D.xhtml#a46dd0d9a849809a3857783102959e788">copy</a>();</div>
<div class="line"><a name="l00223"></a><span class="lineno">  223</span>&#160;    <a class="code" href="classVector3D.xhtml">Vector3D</a>* tempUp = up-&gt;<a class="code" href="classVector3D.xhtml#a46dd0d9a849809a3857783102959e788">copy</a>();</div>
<div class="line"><a name="l00224"></a><span class="lineno">  224</span>&#160;    tempUp-&gt;<a class="code" href="classVector3D.xhtml#abfb12ecb9c9beb88e095cc4a1a512d3c">normalize</a>();</div>
<div class="line"><a name="l00225"></a><span class="lineno">  225</span>&#160;    tempUp-&gt;<a class="code" href="classVector3D.xhtml#a3dec11494c99de7370e3877054c3ef13">mult</a>(ph);</div>
<div class="line"><a name="l00226"></a><span class="lineno">  226</span>&#160;    posInGround-&gt;<a class="code" href="classVector3D.xhtml#a02364a41693ac080f5adadd776df74b4">sub</a>(tempUp);</div>
<div class="line"><a name="l00227"></a><span class="lineno">  227</span>&#160;    posInGround-&gt;<a class="code" href="classVector3D.xhtml#a02364a41693ac080f5adadd776df74b4">sub</a>(tet-&gt;<a class="code" href="classTetrahedron.xhtml#add51e42ab17afbd023d47a436ce24b0d">getV1</a>()); <span class="comment">//rel. zu Vert0</span></div>
<div class="line"><a name="l00228"></a><span class="lineno">  228</span>&#160;    <span class="keyword">delete</span> tempUp;</div>
<div class="line"><a name="l00229"></a><span class="lineno">  229</span>&#160;    <span class="keywordtype">double</span> pBeta = e1-&gt;<a class="code" href="classVector3D.xhtml#a4bf1dcea68296f2f38f3574242933153">getAngleTo</a>(posInGround);</div>
<div class="line"><a name="l00230"></a><span class="lineno">  230</span>&#160;    sign = (lot-&gt;<a class="code" href="classVector3D.xhtml#a0808a8e6004a347d82f9214778b5968f">dotProduct</a>(v1ToPos) &gt; 0) ? 1 : -1;</div>
<div class="line"><a name="l00231"></a><span class="lineno">  231</span>&#160;    <a class="code" href="classVector3D.xhtml">Vector3D</a>* localPos = <span class="keyword">new</span> <a class="code" href="classVector3D.xhtml">Vector3D</a>(cos(pBeta) * posInGround-&gt;<a class="code" href="classVector3D.xhtml#a2e3aa1d244483abcb1a8e48e47e79512">getLength</a>(),</div>
<div class="line"><a name="l00232"></a><span class="lineno">  232</span>&#160;            sign * sin(pBeta) * posInGround-&gt;<a class="code" href="classVector3D.xhtml#a2e3aa1d244483abcb1a8e48e47e79512">getLength</a>(), ph);</div>
<div class="line"><a name="l00233"></a><span class="lineno">  233</span>&#160;    <span class="keyword">delete</span> lot;</div>
<div class="line"><a name="l00234"></a><span class="lineno">  234</span>&#160;</div>
<div class="line"><a name="l00235"></a><span class="lineno">  235</span>&#160;    <span class="comment">//Punkte auf 3 Tetraederkanten ermitteln, auf deren Ebene der gesuchte Punkt liegt</span></div>
<div class="line"><a name="l00236"></a><span class="lineno">  236</span>&#160;    <a class="code" href="classVector3D.xhtml">Vector3D</a>* localUp = localGround.getNormal();</div>
<div class="line"><a name="l00237"></a><span class="lineno">  237</span>&#160;    <span class="keywordtype">double</span> sAlpha = s1-&gt;<a class="code" href="classVector3D.xhtml#a4bf1dcea68296f2f38f3574242933153">getAngleTo</a>(localUp);</div>
<div class="line"><a name="l00238"></a><span class="lineno">  238</span>&#160;    <span class="keywordtype">double</span> sBeta = s2-&gt;<a class="code" href="classVector3D.xhtml#a4bf1dcea68296f2f38f3574242933153">getAngleTo</a>(localUp);</div>
<div class="line"><a name="l00239"></a><span class="lineno">  239</span>&#160;    <span class="keywordtype">double</span> sGamma = s3-&gt;<a class="code" href="classVector3D.xhtml#a4bf1dcea68296f2f38f3574242933153">getAngleTo</a>(localUp);</div>
<div class="line"><a name="l00240"></a><span class="lineno">  240</span>&#160;    <span class="keywordtype">double</span> lengths[3] = { s1-&gt;getLength(), s2-&gt;<a class="code" href="classVector3D.xhtml#a2e3aa1d244483abcb1a8e48e47e79512">getLength</a>(), s3-&gt;<a class="code" href="classVector3D.xhtml#a2e3aa1d244483abcb1a8e48e47e79512">getLength</a>() };</div>
<div class="line"><a name="l00241"></a><span class="lineno">  241</span>&#160;    s1-&gt;normalize();</div>
<div class="line"><a name="l00242"></a><span class="lineno">  242</span>&#160;    s2-&gt;<a class="code" href="classVector3D.xhtml#abfb12ecb9c9beb88e095cc4a1a512d3c">normalize</a>();</div>
<div class="line"><a name="l00243"></a><span class="lineno">  243</span>&#160;    s3-&gt;<a class="code" href="classVector3D.xhtml#abfb12ecb9c9beb88e095cc4a1a512d3c">normalize</a>();</div>
<div class="line"><a name="l00244"></a><span class="lineno">  244</span>&#160;    s1-&gt;mult(ph / cos(sAlpha));</div>
<div class="line"><a name="l00245"></a><span class="lineno">  245</span>&#160;    s2-&gt;<a class="code" href="classVector3D.xhtml#a3dec11494c99de7370e3877054c3ef13">mult</a>(ph / cos(sBeta));</div>
<div class="line"><a name="l00246"></a><span class="lineno">  246</span>&#160;    s3-&gt;<a class="code" href="classVector3D.xhtml#a3dec11494c99de7370e3877054c3ef13">mult</a>(ph / cos(sGamma));</div>
<div class="line"><a name="l00247"></a><span class="lineno">  247</span>&#160;    <a class="code" href="classVector3D.xhtml">Vector3D</a>* s1Point = s1-&gt;<a class="code" href="classVector3D.xhtml#a46dd0d9a849809a3857783102959e788">copy</a>();</div>
<div class="line"><a name="l00248"></a><span class="lineno">  248</span>&#160;    <a class="code" href="classVector3D.xhtml">Vector3D</a>* s2Point = s2-&gt;<a class="code" href="classVector3D.xhtml#a46dd0d9a849809a3857783102959e788">copy</a>();</div>
<div class="line"><a name="l00249"></a><span class="lineno">  249</span>&#160;    s2Point-&gt;<a class="code" href="classVector3D.xhtml#a0d14ff1f789254ff90adc22628eb8347">add</a>(localGround.getV2());</div>
<div class="line"><a name="l00250"></a><span class="lineno">  250</span>&#160;    <a class="code" href="classVector3D.xhtml">Vector3D</a>* s3Point = s3-&gt;<a class="code" href="classVector3D.xhtml#a46dd0d9a849809a3857783102959e788">copy</a>();</div>
<div class="line"><a name="l00251"></a><span class="lineno">  251</span>&#160;    s3Point-&gt;<a class="code" href="classVector3D.xhtml#a0d14ff1f789254ff90adc22628eb8347">add</a>(localGround.getV3());</div>
<div class="line"><a name="l00252"></a><span class="lineno">  252</span>&#160;</div>
<div class="line"><a name="l00253"></a><span class="lineno">  253</span>&#160;    <span class="keywordtype">double</span> interValues[3];</div>
<div class="line"><a name="l00254"></a><span class="lineno">  254</span>&#160;</div>
<div class="line"><a name="l00255"></a><span class="lineno">  255</span>&#160;    <span class="comment">//Werte für die Punkte auf den 3 Kanten entsprechend der Interpolationsfunktion ermitteln</span></div>
<div class="line"><a name="l00256"></a><span class="lineno">  256</span>&#160;    <span class="keywordflow">switch</span> (mode) {</div>
<div class="line"><a name="l00257"></a><span class="lineno">  257</span>&#160;    <span class="keywordflow">case</span> LINEAR:</div>
<div class="line"><a name="l00258"></a><span class="lineno">  258</span>&#160;        interValues[0] = values[0]</div>
<div class="line"><a name="l00259"></a><span class="lineno">  259</span>&#160;                + (values[3] - values[0]) * ph / cos(sAlpha) / lengths[0];</div>
<div class="line"><a name="l00260"></a><span class="lineno">  260</span>&#160;        interValues[1] = values[1]</div>
<div class="line"><a name="l00261"></a><span class="lineno">  261</span>&#160;                + (values[3] - values[1]) * ph / cos(sBeta) / lengths[1];</div>
<div class="line"><a name="l00262"></a><span class="lineno">  262</span>&#160;        interValues[2] = values[2]</div>
<div class="line"><a name="l00263"></a><span class="lineno">  263</span>&#160;                + (values[3] - values[2]) * ph / cos(sGamma) / lengths[2];</div>
<div class="line"><a name="l00264"></a><span class="lineno">  264</span>&#160;        <span class="keywordflow">break</span>;</div>
<div class="line"><a name="l00265"></a><span class="lineno">  265</span>&#160;    <span class="keywordflow">case</span> LOGARITHMIC:</div>
<div class="line"><a name="l00266"></a><span class="lineno">  266</span>&#160;        interValues[0] = values[0]</div>
<div class="line"><a name="l00267"></a><span class="lineno">  267</span>&#160;                * exp(</div>
<div class="line"><a name="l00268"></a><span class="lineno">  268</span>&#160;                        (log(values[3]) - log(values[0])) * ph / cos(sAlpha)</div>
<div class="line"><a name="l00269"></a><span class="lineno">  269</span>&#160;                                / lengths[0]);</div>
<div class="line"><a name="l00270"></a><span class="lineno">  270</span>&#160;        interValues[1] = values[1]</div>
<div class="line"><a name="l00271"></a><span class="lineno">  271</span>&#160;                * exp(</div>
<div class="line"><a name="l00272"></a><span class="lineno">  272</span>&#160;                        (log(values[3]) - log(values[1])) * ph / cos(sBeta)</div>
<div class="line"><a name="l00273"></a><span class="lineno">  273</span>&#160;                                / lengths[1]);</div>
<div class="line"><a name="l00274"></a><span class="lineno">  274</span>&#160;        interValues[2] = values[2]</div>
<div class="line"><a name="l00275"></a><span class="lineno">  275</span>&#160;                * exp(</div>
<div class="line"><a name="l00276"></a><span class="lineno">  276</span>&#160;                        (log(values[3]) - log(values[2])) * ph / cos(sGamma)</div>
<div class="line"><a name="l00277"></a><span class="lineno">  277</span>&#160;                                / lengths[2]);</div>
<div class="line"><a name="l00278"></a><span class="lineno">  278</span>&#160;        <span class="keywordflow">break</span>;</div>
<div class="line"><a name="l00279"></a><span class="lineno">  279</span>&#160;    <span class="keywordflow">default</span>:</div>
<div class="line"><a name="l00280"></a><span class="lineno">  280</span>&#160;        cerr &lt;&lt; <span class="stringliteral">&quot;Kein Gültiges Interpolationsverfahren angegeben!&quot;</span> &lt;&lt; endl;</div>
<div class="line"><a name="l00281"></a><span class="lineno">  281</span>&#160;        <span class="keywordflow">break</span>;</div>
<div class="line"><a name="l00282"></a><span class="lineno">  282</span>&#160;    }</div>
<div class="line"><a name="l00283"></a><span class="lineno">  283</span>&#160;</div>
<div class="line"><a name="l00284"></a><span class="lineno">  284</span>&#160;    <span class="comment">/*</span></div>
<div class="line"><a name="l00285"></a><span class="lineno">  285</span>&#160;<span class="comment">     * Durch die 3 Punkte auf den Kanten stellen ein Dreieck dar, dass in der selben Ebene wie der gesuchte Punkt liegt.</span></div>
<div class="line"><a name="l00286"></a><span class="lineno">  286</span>&#160;<span class="comment">     * =&gt; Bilineare Interpolation über dieses Dreieck</span></div>
<div class="line"><a name="l00287"></a><span class="lineno">  287</span>&#160;<span class="comment">     */</span></div>
<div class="line"><a name="l00288"></a><span class="lineno">  288</span>&#160;    <a class="code" href="classTriangle.xhtml">Triangle</a> newTri = <a class="code" href="classTriangle.xhtml">Triangle</a>(s1Point, s2Point, s3Point);</div>
<div class="line"><a name="l00289"></a><span class="lineno">  289</span>&#160;    <span class="keywordtype">double</span> val = interpolateTri(&amp;newTri, localPos, interValues);</div>
<div class="line"><a name="l00290"></a><span class="lineno">  290</span>&#160;</div>
<div class="line"><a name="l00291"></a><span class="lineno">  291</span>&#160;    <span class="comment">//Speicher freigeben</span></div>
<div class="line"><a name="l00292"></a><span class="lineno">  292</span>&#160;    <span class="keywordflow">for</span> (<span class="keywordtype">int</span> v = 0; v &lt; 3; v++) {</div>
<div class="line"><a name="l00293"></a><span class="lineno">  293</span>&#160;        <span class="keyword">delete</span> groundVerts[v];</div>
<div class="line"><a name="l00294"></a><span class="lineno">  294</span>&#160;    }</div>
<div class="line"><a name="l00295"></a><span class="lineno">  295</span>&#160;</div>
<div class="line"><a name="l00296"></a><span class="lineno">  296</span>&#160;    <span class="keyword">delete</span> up;</div>
<div class="line"><a name="l00297"></a><span class="lineno">  297</span>&#160;    <span class="keyword">delete</span> tUp;</div>
<div class="line"><a name="l00298"></a><span class="lineno">  298</span>&#160;    <span class="keyword">delete</span> localUp;</div>
<div class="line"><a name="l00299"></a><span class="lineno">  299</span>&#160;    <span class="keyword">delete</span> v1ToV4InGround;</div>
<div class="line"><a name="l00300"></a><span class="lineno">  300</span>&#160;    <span class="keyword">delete</span> posInGround;</div>
<div class="line"><a name="l00301"></a><span class="lineno">  301</span>&#160;    <span class="keyword">delete</span> localTip;</div>
<div class="line"><a name="l00302"></a><span class="lineno">  302</span>&#160;    <span class="keyword">delete</span> localPos;</div>
<div class="line"><a name="l00303"></a><span class="lineno">  303</span>&#160;    <span class="keyword">delete</span> e1;</div>
<div class="line"><a name="l00304"></a><span class="lineno">  304</span>&#160;    <span class="keyword">delete</span> e2;</div>
<div class="line"><a name="l00305"></a><span class="lineno">  305</span>&#160;    <span class="keyword">delete</span> gs1;</div>
<div class="line"><a name="l00306"></a><span class="lineno">  306</span>&#160;    <span class="keyword">delete</span> s1;</div>
<div class="line"><a name="l00307"></a><span class="lineno">  307</span>&#160;    <span class="keyword">delete</span> s2;</div>
<div class="line"><a name="l00308"></a><span class="lineno">  308</span>&#160;    <span class="keyword">delete</span> s3;</div>
<div class="line"><a name="l00309"></a><span class="lineno">  309</span>&#160;    <span class="keyword">delete</span> s1Point;</div>
<div class="line"><a name="l00310"></a><span class="lineno">  310</span>&#160;    <span class="keyword">delete</span> s2Point;</div>
<div class="line"><a name="l00311"></a><span class="lineno">  311</span>&#160;    <span class="keyword">delete</span> s3Point;</div>
<div class="line"><a name="l00312"></a><span class="lineno">  312</span>&#160;    <span class="keyword">delete</span> v1ToPos;</div>
<div class="line"><a name="l00313"></a><span class="lineno">  313</span>&#160;    <span class="keywordflow">return</span> val;</div>
<div class="line"><a name="l00314"></a><span class="lineno">  314</span>&#160;}</div>
<div class="line"><a name="l00315"></a><span class="lineno"><a class="line" href="classInterpolator.xhtml#a6bb406dfe33e06296ccf24f18abcd46c">  315</a></span>&#160;<a class="code" href="classInterpolator.xhtml#a6bb406dfe33e06296ccf24f18abcd46c">Interpolator::~Interpolator</a>() {</div>
<div class="line"><a name="l00316"></a><span class="lineno">  316</span>&#160;}</div>
<div class="line"><a name="l00317"></a><span class="lineno">  317</span>&#160;</div>
<div class="ttc" id="classVector3D_xhtml_aa9eaf29045bf32b95c5c7bcb2b8b68d7"><div class="ttname"><a href="classVector3D.xhtml#aa9eaf29045bf32b95c5c7bcb2b8b68d7">Vector3D::getX</a></div><div class="ttdeci">double getX()</div><div class="ttdoc">Gibt das X-Element des Vektors zurück. </div><div class="ttdef"><b>Definition:</b> <a href="GeometryClasses_8cpp_source.xhtml#l00048">GeometryClasses.cpp:48</a></div></div>
<div class="ttc" id="classInterpolator_xhtml_a6bb406dfe33e06296ccf24f18abcd46c"><div class="ttname"><a href="classInterpolator.xhtml#a6bb406dfe33e06296ccf24f18abcd46c">Interpolator::~Interpolator</a></div><div class="ttdeci">virtual ~Interpolator()</div><div class="ttdoc">Der Destruktor. </div><div class="ttdef"><b>Definition:</b> <a href="Interpolator_8cpp_source.xhtml#l00315">Interpolator.cpp:315</a></div></div>
<div class="ttc" id="classTetrahedron_xhtml_a88afe41ae5991168ad51ba4dbb2e1a6b"><div class="ttname"><a href="classTetrahedron.xhtml#a88afe41ae5991168ad51ba4dbb2e1a6b">Tetrahedron::getVert</a></div><div class="ttdeci">Vector3D * getVert(int index)</div><div class="ttdoc">Gibt eine Referenz auf den Ortsvektor zum index+1 Punkt des Tetraeders zurück. </div><div class="ttdef"><b>Definition:</b> <a href="GeometryClasses_8cpp_source.xhtml#l00311">GeometryClasses.cpp:311</a></div></div>
<div class="ttc" id="classInterpolator_xhtml_adb733b1439a2903feae57fa734ced0c2"><div class="ttname"><a href="classInterpolator.xhtml#adb733b1439a2903feae57fa734ced0c2">Interpolator::InterpolationMode</a></div><div class="ttdeci">InterpolationMode</div><div class="ttdoc">Der Typ der verwendeten Interpolationsfunktion. </div><div class="ttdef"><b>Definition:</b> <a href="Interpolator_8h_source.xhtml#l00025">Interpolator.h:25</a></div></div>
<div class="ttc" id="classVector3D_xhtml_ac83e936757114f32bc9d868ea5fabbc2"><div class="ttname"><a href="classVector3D.xhtml#ac83e936757114f32bc9d868ea5fabbc2">Vector3D::equals</a></div><div class="ttdeci">bool equals(Vector3D *other)</div><div class="ttdoc">Testet, ob zwei Vektoren identisch sind. </div><div class="ttdef"><b>Definition:</b> <a href="GeometryClasses_8cpp_source.xhtml#l00042">GeometryClasses.cpp:42</a></div></div>
<div class="ttc" id="classTriangle_xhtml_a9320d1ab83c104352bf5e8f2c8274334"><div class="ttname"><a href="classTriangle.xhtml#a9320d1ab83c104352bf5e8f2c8274334">Triangle::getVert</a></div><div class="ttdeci">Vector3D * getVert(int index)</div><div class="ttdoc">Gibt eine Referenz auf den Ortsvektor zum index+1 Punkt des Dreiecks zurück. </div><div class="ttdef"><b>Definition:</b> <a href="GeometryClasses_8cpp_source.xhtml#l00258">GeometryClasses.cpp:258</a></div></div>
<div class="ttc" id="classVector3D_xhtml_a02364a41693ac080f5adadd776df74b4"><div class="ttname"><a href="classVector3D.xhtml#a02364a41693ac080f5adadd776df74b4">Vector3D::sub</a></div><div class="ttdeci">void sub(Vector3D *other)</div><div class="ttdoc">Subtrahiert einen Vektor von diesem Vektor. </div><div class="ttdef"><b>Definition:</b> <a href="GeometryClasses_8cpp_source.xhtml#l00094">GeometryClasses.cpp:94</a></div></div>
<div class="ttc" id="classTetrahedron_xhtml_a7308b7b73edeba7782dff551a03095bf"><div class="ttname"><a href="classTetrahedron.xhtml#a7308b7b73edeba7782dff551a03095bf">Tetrahedron::getV4</a></div><div class="ttdeci">Vector3D * getV4()</div><div class="ttdoc">Gibt eine Referenz auf den Ortsvektor zum 3. </div><div class="ttdef"><b>Definition:</b> <a href="GeometryClasses_8cpp_source.xhtml#l00307">GeometryClasses.cpp:307</a></div></div>
<div class="ttc" id="classTetrahedron_xhtml"><div class="ttname"><a href="classTetrahedron.xhtml">Tetrahedron</a></div><div class="ttdoc">Ein durch 4 Ortsvektoren beschriebener Tetraeder. </div><div class="ttdef"><b>Definition:</b> <a href="GeometryClasses_8h_source.xhtml#l00285">GeometryClasses.h:285</a></div></div>
<div class="ttc" id="Interpolator_8h_xhtml"><div class="ttname"><a href="Interpolator_8h.xhtml">Interpolator.h</a></div></div>
<div class="ttc" id="classTriangle_xhtml_ae054a0eae5dae026c5af69274c5f277e"><div class="ttname"><a href="classTriangle.xhtml#ae054a0eae5dae026c5af69274c5f277e">Triangle::getV1</a></div><div class="ttdeci">Vector3D * getV1()</div><div class="ttdoc">Gibt eine Referenz auf den Ortsvektor zum ersten Punkt des Dreiecks zurück. </div><div class="ttdef"><b>Definition:</b> <a href="GeometryClasses_8cpp_source.xhtml#l00246">GeometryClasses.cpp:246</a></div></div>
<div class="ttc" id="classVector3D_xhtml_a0808a8e6004a347d82f9214778b5968f"><div class="ttname"><a href="classVector3D.xhtml#a0808a8e6004a347d82f9214778b5968f">Vector3D::dotProduct</a></div><div class="ttdeci">double dotProduct(Vector3D *other)</div><div class="ttdoc">Gibt das Skalarprodukt mit einem anderen Vektor. </div><div class="ttdef"><b>Definition:</b> <a href="GeometryClasses_8cpp_source.xhtml#l00076">GeometryClasses.cpp:76</a></div></div>
<div class="ttc" id="classInterpolator_xhtml_ad59ac6ed3822e08a67ac7d1ee88a5bd2"><div class="ttname"><a href="classInterpolator.xhtml#ad59ac6ed3822e08a67ac7d1ee88a5bd2">Interpolator::interpolateTri</a></div><div class="ttdeci">double interpolateTri(Triangle *tri, Vector3D *pos, double *values)</div><div class="ttdoc">Ermittelt den Wert für einen beliebigen Punkt in einer Ebene. </div><div class="ttdef"><b>Definition:</b> <a href="Interpolator_8cpp_source.xhtml#l00024">Interpolator.cpp:24</a></div></div>
<div class="ttc" id="classVector3D_xhtml_abfb12ecb9c9beb88e095cc4a1a512d3c"><div class="ttname"><a href="classVector3D.xhtml#abfb12ecb9c9beb88e095cc4a1a512d3c">Vector3D::normalize</a></div><div class="ttdeci">void normalize()</div><div class="ttdoc">Normalisiert den Vektor. </div><div class="ttdef"><b>Definition:</b> <a href="GeometryClasses_8cpp_source.xhtml#l00106">GeometryClasses.cpp:106</a></div></div>
<div class="ttc" id="classVector3D_xhtml_a4bf1dcea68296f2f38f3574242933153"><div class="ttname"><a href="classVector3D.xhtml#a4bf1dcea68296f2f38f3574242933153">Vector3D::getAngleTo</a></div><div class="ttdeci">double getAngleTo(Vector3D *other)</div><div class="ttdoc">Gibt den Winkel zu einem anderen Vektor in RAD zurück. </div><div class="ttdef"><b>Definition:</b> <a href="GeometryClasses_8cpp_source.xhtml#l00064">GeometryClasses.cpp:64</a></div></div>
<div class="ttc" id="classTetrahedron_xhtml_add51e42ab17afbd023d47a436ce24b0d"><div class="ttname"><a href="classTetrahedron.xhtml#add51e42ab17afbd023d47a436ce24b0d">Tetrahedron::getV1</a></div><div class="ttdeci">Vector3D * getV1()</div><div class="ttdoc">Gibt eine Referenz auf den Ortsvektor zum 1. </div><div class="ttdef"><b>Definition:</b> <a href="GeometryClasses_8cpp_source.xhtml#l00295">GeometryClasses.cpp:295</a></div></div>
<div class="ttc" id="classTriangle_xhtml_a6de5f8560482f4130bdbb96b25aa1b58"><div class="ttname"><a href="classTriangle.xhtml#a6de5f8560482f4130bdbb96b25aa1b58">Triangle::getV2</a></div><div class="ttdeci">Vector3D * getV2()</div><div class="ttdoc">Gibt eine Referenz auf den Ortsvektor zum zweiten Punkt des Dreiecks zurück. </div><div class="ttdef"><b>Definition:</b> <a href="GeometryClasses_8cpp_source.xhtml#l00250">GeometryClasses.cpp:250</a></div></div>
<div class="ttc" id="classInterpolator_xhtml_a30e714ca6dff9b5745d029f95af1420a"><div class="ttname"><a href="classInterpolator.xhtml#a30e714ca6dff9b5745d029f95af1420a">Interpolator::interpolateTet</a></div><div class="ttdeci">double interpolateTet(Tetrahedron *tet, Vector3D *pos, double *values)</div><div class="ttdoc">Ermittelt den Wert für einen beliebigen Punkt im Raum. </div><div class="ttdef"><b>Definition:</b> <a href="Interpolator_8cpp_source.xhtml#l00149">Interpolator.cpp:149</a></div></div>
<div class="ttc" id="classVector3D_xhtml"><div class="ttname"><a href="classVector3D.xhtml">Vector3D</a></div><div class="ttdoc">3D-Vektorklasse mit nützlichen Operationen. </div><div class="ttdef"><b>Definition:</b> <a href="GeometryClasses_8h_source.xhtml#l00013">GeometryClasses.h:13</a></div></div>
<div class="ttc" id="classVector3D_xhtml_a482cd77ce44ea7dd71fd7a43cb7b1cf5"><div class="ttname"><a href="classVector3D.xhtml#a482cd77ce44ea7dd71fd7a43cb7b1cf5">Vector3D::crossProduct</a></div><div class="ttdeci">Vector3D * crossProduct(Vector3D *other)</div><div class="ttdoc">Gibt das Kreuzprodukt mit einem anderen Vektor zurück. </div><div class="ttdef"><b>Definition:</b> <a href="GeometryClasses_8cpp_source.xhtml#l00081">GeometryClasses.cpp:81</a></div></div>
<div class="ttc" id="Interpolator_8cpp_xhtml_a73527f20206c906e9f333e0f233de13e"><div class="ttname"><a href="Interpolator_8cpp.xhtml#a73527f20206c906e9f333e0f233de13e">sqr</a></div><div class="ttdeci">double sqr(double v)</div><div class="ttdef"><b>Definition:</b> <a href="Interpolator_8cpp_source.xhtml#l00007">Interpolator.cpp:7</a></div></div>
<div class="ttc" id="classTriangle_xhtml_a792a627dc42adad87c0b30e16a6b5824"><div class="ttname"><a href="classTriangle.xhtml#a792a627dc42adad87c0b30e16a6b5824">Triangle::getV3</a></div><div class="ttdeci">Vector3D * getV3()</div><div class="ttdoc">Gibt eine Referenz auf den Ortsvektor zum dritten Punkt des Dreiecks zurück. </div><div class="ttdef"><b>Definition:</b> <a href="GeometryClasses_8cpp_source.xhtml#l00254">GeometryClasses.cpp:254</a></div></div>
<div class="ttc" id="classTriangle_xhtml"><div class="ttname"><a href="classTriangle.xhtml">Triangle</a></div><div class="ttdoc">Ein durch 3 Ortsvektoren beschriebenes Dreieck. </div><div class="ttdef"><b>Definition:</b> <a href="GeometryClasses_8h_source.xhtml#l00228">GeometryClasses.h:228</a></div></div>
<div class="ttc" id="classVector3D_xhtml_a3dec11494c99de7370e3877054c3ef13"><div class="ttname"><a href="classVector3D.xhtml#a3dec11494c99de7370e3877054c3ef13">Vector3D::mult</a></div><div class="ttdeci">void mult(double scalar)</div><div class="ttdoc">Multipliziert den Vektor mit einem Skalar. </div><div class="ttdef"><b>Definition:</b> <a href="GeometryClasses_8cpp_source.xhtml#l00100">GeometryClasses.cpp:100</a></div></div>
<div class="ttc" id="classTetrahedron_xhtml_aa539a97f133ea621520121acb2ef4a7e"><div class="ttname"><a href="classTetrahedron.xhtml#aa539a97f133ea621520121acb2ef4a7e">Tetrahedron::getV3</a></div><div class="ttdeci">Vector3D * getV3()</div><div class="ttdoc">Gibt eine Referenz auf den Ortsvektor zum 3. </div><div class="ttdef"><b>Definition:</b> <a href="GeometryClasses_8cpp_source.xhtml#l00303">GeometryClasses.cpp:303</a></div></div>
<div class="ttc" id="classInterpolator_xhtml_ab8cbb0b13436fc54a4bba03804ae8f8a"><div class="ttname"><a href="classInterpolator.xhtml#ab8cbb0b13436fc54a4bba03804ae8f8a">Interpolator::Interpolator</a></div><div class="ttdeci">Interpolator()</div><div class="ttdoc">Der Konstruktor. </div><div class="ttdef"><b>Definition:</b> <a href="Interpolator_8cpp_source.xhtml#l00012">Interpolator.cpp:12</a></div></div>
<div class="ttc" id="classVector3D_xhtml_a46dd0d9a849809a3857783102959e788"><div class="ttname"><a href="classVector3D.xhtml#a46dd0d9a849809a3857783102959e788">Vector3D::copy</a></div><div class="ttdeci">Vector3D * copy()</div><div class="ttdoc">Gibt eine Kopie des Vektors zurück. </div><div class="ttdef"><b>Definition:</b> <a href="GeometryClasses_8cpp_source.xhtml#l00037">GeometryClasses.cpp:37</a></div></div>
<div class="ttc" id="classTetrahedron_xhtml_aa728c967f17e2b8408009b5f2b77a17a"><div class="ttname"><a href="classTetrahedron.xhtml#aa728c967f17e2b8408009b5f2b77a17a">Tetrahedron::getV2</a></div><div class="ttdeci">Vector3D * getV2()</div><div class="ttdoc">Gibt eine Referenz auf den Ortsvektor zum 2. </div><div class="ttdef"><b>Definition:</b> <a href="GeometryClasses_8cpp_source.xhtml#l00299">GeometryClasses.cpp:299</a></div></div>
<div class="ttc" id="Interpolator_8cpp_xhtml_a5d341112a316fd540a42316885c464e0"><div class="ttname"><a href="Interpolator_8cpp.xhtml#a5d341112a316fd540a42316885c464e0">getSign</a></div><div class="ttdeci">double getSign(double x)</div><div class="ttdef"><b>Definition:</b> <a href="Interpolator_8cpp_source.xhtml#l00020">Interpolator.cpp:20</a></div></div>
<div class="ttc" id="classVector3D_xhtml_a2e3aa1d244483abcb1a8e48e47e79512"><div class="ttname"><a href="classVector3D.xhtml#a2e3aa1d244483abcb1a8e48e47e79512">Vector3D::getLength</a></div><div class="ttdeci">double getLength()</div><div class="ttdoc">Gibt die Länge des Vektors zurück. </div><div class="ttdef"><b>Definition:</b> <a href="GeometryClasses_8cpp_source.xhtml#l00060">GeometryClasses.cpp:60</a></div></div>
<div class="ttc" id="classVector3D_xhtml_aa3ffff17b886274a58417dfe4bb4c4a2"><div class="ttname"><a href="classVector3D.xhtml#aa3ffff17b886274a58417dfe4bb4c4a2">Vector3D::getY</a></div><div class="ttdeci">double getY()</div><div class="ttdoc">Gibt das Y-Element des Vektors zurück. </div><div class="ttdef"><b>Definition:</b> <a href="GeometryClasses_8cpp_source.xhtml#l00052">GeometryClasses.cpp:52</a></div></div>
<div class="ttc" id="classVector3D_xhtml_a42deb992ec2f44abfb5824ea4917135c"><div class="ttname"><a href="classVector3D.xhtml#a42deb992ec2f44abfb5824ea4917135c">Vector3D::getDistanceTo</a></div><div class="ttdeci">double getDistanceTo(Vector3D *other)</div><div class="ttdoc">Gibt den Abstand zu einem anderen Vektor zurück. </div><div class="ttdef"><b>Definition:</b> <a href="GeometryClasses_8cpp_source.xhtml#l00117">GeometryClasses.cpp:117</a></div></div>
<div class="ttc" id="classVector3D_xhtml_a0d14ff1f789254ff90adc22628eb8347"><div class="ttname"><a href="classVector3D.xhtml#a0d14ff1f789254ff90adc22628eb8347">Vector3D::add</a></div><div class="ttdeci">void add(Vector3D *other)</div><div class="ttdoc">Addiert einen Vektor zu diesem Vektor. </div><div class="ttdef"><b>Definition:</b> <a href="GeometryClasses_8cpp_source.xhtml#l00088">GeometryClasses.cpp:88</a></div></div>
<div class="ttc" id="classInterpolator_xhtml_a2f9927fc580de7d2f94d85e6ca3ee3e3"><div class="ttname"><a href="classInterpolator.xhtml#a2f9927fc580de7d2f94d85e6ca3ee3e3">Interpolator::setMode</a></div><div class="ttdeci">void setMode(InterpolationMode mode)</div><div class="ttdoc">Setzt den verwendeten Interpolationsmodus (die Interpolationsfunktion). </div><div class="ttdef"><b>Definition:</b> <a href="Interpolator_8cpp_source.xhtml#l00016">Interpolator.cpp:16</a></div></div>
<div class="ttc" id="classTriangle_xhtml_a3c72b19f316fa9ffb0a2f206e3558790"><div class="ttname"><a href="classTriangle.xhtml#a3c72b19f316fa9ffb0a2f206e3558790">Triangle::getNormal</a></div><div class="ttdeci">Vector3D * getNormal()</div><div class="ttdoc">Gibt die Normale des Dreiecks zurück. </div><div class="ttdef"><b>Definition:</b> <a href="GeometryClasses_8cpp_source.xhtml#l00262">GeometryClasses.cpp:262</a></div></div>
</div><!-- fragment --></div><!-- contents -->
<!-- start footer part -->
<hr class="footer"/><address class="footer"><small>
Erzeugt am Son Mai 25 2014 18:26:41 für Simple Analyzer von &#160;<a href="http://www.doxygen.org/index.html">
<img class="footer" src="doxygen.png" alt="doxygen"/>
</a> 1.8.6
</small></address>
</body>
</html>
